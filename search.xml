<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>关于HDOJ 1326题(Box of Bricks) 的理解(C/C++)</title>
      <link href="/2019/08/19/hdoj1326/"/>
      <url>/2019/08/19/hdoj1326/</url>
      
        <content type="html"><![CDATA[<p><br>&nbsp;&nbsp;&nbsp;&nbsp;注意要求是每个set案例后要多输出一个空白行。而且题目貌似没交代重点，只能一个箱子一个箱子地搬（但实际上确实这样的）。<br><br><a id="more"></a><br>就给的示例可以看出，如果可以一次搬多个箱子，那么先从7搬3个到1的位置，然后各搬2个5的其中1个箱子到2的位置，总共应该是3步才对，但是示例答案确实给的5.所以–&gt;一次只能搬一个箱子。<br><br><br><br><br></p><hr><h2 id="Box-of-Bricks-搬箱子"><a href="#Box-of-Bricks-搬箱子" class="headerlink" title="Box of Bricks(搬箱子)"></a>Box of Bricks(搬箱子)</h2><center>Box of Bricks</center><center>Time Limit: 2000/1000 MS (Java/Others)    <br>Memory Limit: 65536/32768 K (Java/Others)</center><p><strong>Problem Description</strong><br>&nbsp;&nbsp;&nbsp;&nbsp;Little Bob likes playing with his box of bricks. He puts the bricks one upon another and builds stacks of different height. “Look, I’ve built a wall!”, he tells his older sister Alice. “Nah, you should make all stacks the same height. Then you would have a real wall.”, she retorts. After a little con- sideration, Bob sees that she is right. So he sets out to rearrange the bricks, one by one, such that all stacks are the same height afterwards. But since Bob is lazy he wants to do this with the minimum number of bricks moved. Can you help? </p><p><img src="/images/hdoj1326/1326_description.gif" alt="示例图"> </p><p><strong>Input</strong><br>&nbsp;&nbsp;&nbsp;&nbsp;The input consists of several data sets. Each set begins with a line containing the number n of stacks Bob has built. The next line contains n numbers, the heights hi of the n stacks. You may assume 1 &lt;= n &lt;= 50 and 1 &lt;= hi &lt;= 100.</p><p>The total number of bricks will be divisible by the number of stacks. Thus, it is always possible to rearrange the bricks such that all stacks have the same height. </p><p>The input is terminated by a set starting with n = 0. This set should not be processed. </p><p><strong>Output</strong><br>&nbsp;&nbsp;&nbsp;&nbsp;For each set, first print the number of the set, as shown in the sample output. Then print the line “The minimum number of moves is k.”, where k is the minimum number of bricks that have to be moved in order to make all the stacks the same height . </p><p>Output a blank line after each set.</p><p><strong>Sample Input</strong><br>    6<br>    5 2 4 1 7 5<br>    0</p><p><strong>Sample Output</strong><br>    Set #1<br>    The minimum number of moves is 5.</p><p><strong>Source</strong></p><center>&nbsp;&nbsp;&nbsp;&nbsp;Southwestern Europe 1997</center><br><br><br><hr><h2 id="原题链接"><a href="#原题链接" class="headerlink" title="原题链接"></a>原题链接</h2><p>More info:<a href="http://acm.hdu.edu.cn/showproblem.php?pid=1326" target="_blank" rel="noopener">Question</a><br><br></p><hr><h2 id="Accepted代码"><a href="#Accepted代码" class="headerlink" title="Accepted代码"></a>Accepted代码</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">51</span>],t;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> <span class="built_in">set</span> = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">cin</span> &gt;&gt; t) &#123;</span><br><span class="line">        <span class="keyword">if</span> (t == <span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; t; i++) &#123;</span><br><span class="line">            <span class="built_in">cin</span> &gt;&gt; a[i];</span><br><span class="line">            sum += a[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> average = sum / t;</span><br><span class="line">        sum = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; t; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (a[i] &lt; average)sum += (average-a[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">set</span>++;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"Set #"</span> &lt;&lt; <span class="built_in">set</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; "The minimum number of moves is " &lt;&lt; sum &lt;&lt; "." &lt;&lt; <span class="built_in">endl</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="参考博客"><a href="#参考博客" class="headerlink" title="参考博客"></a>参考博客</h2><p>博主&nbsp;AI圈终身学习&nbsp;的<a href="https://blog.csdn.net/u012891055/article/details/42034813" target="_blank" rel="noopener">ACM水题系列 HDOJ 1326</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> hdoj </tag>
            
            <tag> cout输出格式 </tag>
            
            <tag> 简单题 </tag>
            
            <tag> Southwestern Europe 1997 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用git提交本地文件夹到github仓库</title>
      <link href="/2019/08/19/git_sub/"/>
      <url>/2019/08/19/git_sub/</url>
      
        <content type="html"><![CDATA[<p><br>&nbsp;&nbsp;&nbsp;&nbsp;虽然我的博客就是有布置到github上，但是之前都没有怎么单独使用过git推送项目代码，今天突然想把小学期的实训项目代码给推到github上保存一下。但是发现目录下没有.git文件夹，又忘了生成的命令了，所以上网度了一下，顺便做个笔记的形式给记录一下。<!--read more--><br><br><br><br><br><br></p><hr><h2 id="安装git环境"><a href="#安装git环境" class="headerlink" title="安装git环境"></a>安装git环境</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;首先使用git工具，肯定是先要下载安装配置的。这里安装过程我就不详讲了，网上应该是一搜一大把的多，这里给一下一个人家的安装教程链接吧<br><a href="https://www.jianshu.com/p/a152f82c5e4a" target="_blank" rel="noopener">git安装教程链接</a></p><br><br><br><h2 id="创建上传的远程仓库"><a href="#创建上传的远程仓库" class="headerlink" title="创建上传的远程仓库"></a>创建上传的远程仓库</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;登录自己的github，然后在里面new一个仓库<br><img src="/images/git_sub/gitment_creat.png" alt="新建仓库"><br><br>然后你可以看到：<br><img src="/images/git_sub/gitment_new.png" alt="setup界面"></p><h2 id="生成-git"><a href="#生成-git" class="headerlink" title="生成.git"></a>生成.git</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;进入到要推送代码和项目的本地文件夹下，然后在本地搜索栏填入”cmd”回车打开cmd命令窗口（也可以ctrl+R，cmd，回车，在用cd进入到目录下，就是略麻烦一点）<br><img src="/images/git_sub/cmd.png" alt="cmd"><br><br>&nbsp;&nbsp;&nbsp;&nbsp;然后在命令行中敲入“git init”</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git init</span><br></pre></td></tr></table></figure><br><p><img src="/images/git_sub/git_init.png" alt="cmd"></p><p><br>&nbsp;&nbsp;&nbsp;&nbsp;可以看到目录下即有了.git文件夹</p><p><img src="/images/git_sub/git_init_res.png" alt="cmd"></p><h2 id="添加到暂存区"><a href="#添加到暂存区" class="headerlink" title="添加到暂存区"></a>添加到暂存区</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;把文件添加到版本库中，使用命令 git add .添加到暂存区里面去，不要忘记后面的小数点“.”，意为添加文件夹下的所有文件(夹)。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git add .</span><br></pre></td></tr></table></figure><br><p><img src="/images/git_sub/git_add.png" alt="add命令截图"></p><br><h2 id="commit-到主分支-master"><a href="#commit-到主分支-master" class="headerlink" title="commit 到主分支(master)"></a>commit 到主分支(master)</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit -m &quot;描述信息&quot;</span><br></pre></td></tr></table></figure><br><p><img src="/images/git_sub/git_commit.png" alt="commit命令截图"></p><br><br><br><h2 id="连接本地和远程仓库并提交"><a href="#连接本地和远程仓库并提交" class="headerlink" title="连接本地和远程仓库并提交"></a>连接本地和远程仓库并提交</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git remote add origin git@github.com:你的github的用户名/仓库名.git</span><br><span class="line"></span><br><span class="line">git push -u origin master</span><br></pre></td></tr></table></figure><p>前一个命令是把本地和远程仓库连接起来，第二个命令是把缓存里的文件推送到远程上去<br><br></p><p><img src="/images/git_sub/git_res.png" alt="add命令截图"></p><br>&nbsp;&nbsp;&nbsp;&nbsp;这一步如果你是首推的话，会弹出登录框让你登录github的账号密码，跟着填好了登录就行了（截图如下）<p><img src="/images/git_sub/git_login.png" alt="登录"><br><br></p><h2 id="检查下结果"><a href="#检查下结果" class="headerlink" title="检查下结果"></a>检查下结果</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;到这上一步其实已经可以了，但是保险起见还是去github上看一下吧</p><p><img src="/images/git_sub/gitment_res.png" alt="结果"></p><p>done ~ ! </p><h2 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;如果出现以下的报错,可以考虑以下步骤（主要原因可能是账号密码方面出错了）<br><img src="/images/git_sub/git_err.png" alt="err"></p><ol><li>配置用户信息</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name [username]</span><br><span class="line"></span><br><span class="line">git config --global user.email [email]</span><br></pre></td></tr></table></figure><ol start="2"><li>查询用户信息</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --list</span><br></pre></td></tr></table></figure><ol start="3"><li>如果push遇到在输入密码是熟错后，就会报这个错误fatal: Authentication failed for</li></ol><p>解决办法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --system --unset credential.helper</span><br></pre></td></tr></table></figure><p>之后你在push就会提示输入名称和密码</p><p><br><br><br>该条目内容来自博主&nbsp;酒壮熊人胆&nbsp;的<a href="https://blog.csdn.net/u011394598/article/details/80256896" target="_blank" rel="noopener">git操作及fatal: Authentication failed for错误解决</a></p><h2 id="参考博客"><a href="#参考博客" class="headerlink" title="参考博客"></a>参考博客</h2><p>博主&nbsp;必须往前走&nbsp;的<a href="https://www.cnblogs.com/zqr99/p/9379918.html" target="_blank" rel="noopener">Git——如何将本地项目提交至远程仓库(第一次)</a></p><p>博主&nbsp;EmbeddedLife&nbsp;的<a href="https://www.jianshu.com/p/a152f82c5e4a" target="_blank" rel="noopener">Git下载安装及设置详细教程</a></p><p>博主&nbsp;酒壮熊人胆&nbsp;的<a href="https://blog.csdn.net/u011394598/article/details/80256896" target="_blank" rel="noopener">git操作及fatal: Authentication failed for错误解决</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> git </tag>
            
            <tag> github </tag>
            
            <tag> 远程代码管理 </tag>
            
            <tag> 提交本地文件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于HDOJ 1323题(Perfection) 的理解(C/C++)</title>
      <link href="/2019/08/18/hdoj1323/"/>
      <url>/2019/08/18/hdoj1323/</url>
      
        <content type="html"><![CDATA[<p><br>&nbsp;&nbsp;&nbsp;&nbsp;水题。注意下格式要求即可，关于格式要求，和hdoj1014有点像。<br><br><a id="more"></a><br><br><br><br><br></p><hr><h2 id="题目描述：Perfection"><a href="#题目描述：Perfection" class="headerlink" title="题目描述：Perfection"></a>题目描述：Perfection</h2><center>Perfection</center><center>Time Limit: 2000/1000 MS (Java/Others)    <br>Memory Limit: 65536/32768 K (Java/Others)</center><p>Problem Description<br>&nbsp;&nbsp;&nbsp;&nbsp;From the article Number Theory in the 1994 Microsoft Encarta: “If a, b, c are integers such that a = bc, a is called a multiple of b or of c, and b or c is called a divisor or factor of a. If c is not 1/-1, b is called a proper divisor of a. Even integers, which include 0, are multiples of 2, for example, -4, 0, 2, 10; an odd integer is an integer that is not even, for example, -5, 1, 3, 9. A perfect number is a positive integer that is equal to the sum of all its positive, proper divisors; for example, 6, which equals 1 + 2 + 3, and 28, which equals 1 + 2 + 4 + 7 + 14, are perfect numbers. A positive number that is not perfect is imperfect and is deficient or abundant according to whether the sum of its positive, proper divisors is smaller or larger than the number itself. Thus, 9, with proper divisors 1, 3, is deficient; 12, with proper divisors 1, 2, 3, 4, 6, is abundant.”<br>Given a number, determine if it is perfect, abundant, or deficient. </p><p>Input<br>&nbsp;&nbsp;&nbsp;&nbsp;A list of N positive integers (none greater than 60,000), with 1 &lt; N &lt; 100. A 0 will mark the end of the list.</p><p>Output<br>&nbsp;&nbsp;&nbsp;&nbsp;The first line of output should read PERFECTION OUTPUT. The next N lines of output should list for each input integer whether it is perfect, deficient, or abundant, as shown in the example below. Format counts: the echoed integers should be right justified within the first 5 spaces of the output line, followed by two blank spaces, followed by the description of the integer. The final line of output should read END OF OUTPUT.</p><p>Sample Input<br>    15 28 6 56 60000 22 496 0</p><p>Sample Output<br>    PERFECTION OUTPUT<br>       15  DEFICIENT<br>       28  PERFECT<br>        6  PERFECT<br>       56  ABUNDANT<br>    60000  ABUNDANT<br>       22  DEFICIENT<br>      496  PERFECT<br>    END OF OUTPUT</p><p>Source</p><center>&nbsp;&nbsp;&nbsp;&nbsp;Mid-Atlantic USA 1996</center><br><br><br><h2 id="原题链接"><a href="#原题链接" class="headerlink" title="原题链接"></a>原题链接</h2><p>More info:<a href="http://acm.hdu.edu.cn/showproblem.php?pid=1323" target="_blank" rel="noopener">Question</a></p><br><br><br><h2 id="cout输出格式控制（复习）"><a href="#cout输出格式控制（复习）" class="headerlink" title="cout输出格式控制（复习）"></a>cout输出格式控制（复习）</h2><p>同cout输出格式控制题可见<a href="/2019/08/09/hdoj1014_blog/">hdoj 1014</a></p><h3 id="cout输出位数控制———整体输出位数的控制"><a href="#cout输出位数控制———整体输出位数的控制" class="headerlink" title="cout输出位数控制———整体输出位数的控制"></a>cout输出位数控制———整体输出位数的控制</h3><p>头文件：iomanip<br>函数方法：setw(n);<br>作用：下一个输出量时，设定输出的长宽为n个字符。输出量不达n个字符时，会在输出量左边填补对应的空白；若宽于n个字符，则按实际需要全部输出</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"> <span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iomanip&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">cin</span> &gt;&gt; n) &#123;</span><br><span class="line">        <span class="keyword">if</span> (n == <span class="number">-1</span>) <span class="keyword">break</span>;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; setw(<span class="number">5</span>)&lt;&lt;n &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果示意：<br><img src="/images/hdoj1014/0.png" alt="运行结果示意"></p><h3 id="cout靠左或者靠右输出的设置"><a href="#cout靠左或者靠右输出的设置" class="headerlink" title="cout靠左或者靠右输出的设置"></a>cout靠左或者靠右输出的设置</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">//默认是右对齐.</span><br><span class="line">cout &lt;&lt;left ;                                 // 左对齐</span><br><span class="line">cout &lt;&lt;setw(5) &lt;&lt;12 &lt;&lt;setw(5) &lt;&lt;34 &lt;&lt;endl ;   // 12___34___</span><br><span class="line"></span><br><span class="line">cout &lt;&lt;right ;                                // 默认 右对齐</span><br><span class="line">cout &lt;&lt;setw(5) &lt;&lt;12 &lt;&lt;setw(5) &lt;&lt;34 &lt;&lt;endl ;   // ___12___34</span><br><span class="line"></span><br><span class="line"><span class="comment">##  Accepted代码</span></span><br><span class="line"></span><br><span class="line">``` c++</span><br><span class="line"><span class="comment">#include&lt;iostream&gt;</span></span><br><span class="line"><span class="comment">#include&lt;iomanip&gt;</span></span><br><span class="line">using namespace std;</span><br><span class="line">int factor_sum(int x) &#123;</span><br><span class="line">  int sum = 0;</span><br><span class="line">  <span class="keyword">for</span> (int i = 1; i &lt; x; i++) &#123;</span><br><span class="line">    <span class="keyword">if</span> (0 == x % i) sum += i;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">return</span> sum;</span><br><span class="line">&#125;</span><br><span class="line">int flag,x;</span><br><span class="line">int <span class="function"><span class="title">main</span></span>() &#123;</span><br><span class="line">  flag = 1;</span><br><span class="line">  <span class="keyword">while</span> (cin &gt;&gt; x) &#123;</span><br><span class="line">    <span class="keyword">if</span> (0 == x) &#123;</span><br><span class="line">      cout &lt;&lt; <span class="string">"END OF OUTPUT"</span> &lt;&lt; endl;</span><br><span class="line">      <span class="built_in">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (flag) &#123;</span><br><span class="line">      cout &lt;&lt; <span class="string">"PERFECTION OUTPUT"</span> &lt;&lt; endl;</span><br><span class="line">      flag = 0;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; setw(5) &lt;&lt; x &lt;&lt; <span class="string">"  "</span>;</span><br><span class="line">    <span class="keyword">if</span> (factor_sum(x) == x)cout &lt;&lt; <span class="string">"PERFECT"</span>;</span><br><span class="line">    <span class="keyword">if</span> (factor_sum(x) &lt; x) cout &lt;&lt; <span class="string">"DEFICIENT"</span>;</span><br><span class="line">    <span class="keyword">if</span> (factor_sum(x) &gt; x) cout &lt;&lt; <span class="string">"ABUNDANT"</span>;</span><br><span class="line">    cout &lt;&lt; endl;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">return</span> 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="参考博客"><a href="#参考博客" class="headerlink" title="参考博客"></a>参考博客</h2><p>  无</p>]]></content>
      
      
      
        <tags>
            
            <tag> hdoj </tag>
            
            <tag> cout输出格式 </tag>
            
            <tag> 简单题 </tag>
            
            <tag> Mid-Atlantic USA 1996 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于HDOJ 1303题(Doubles 双倍) 的理解(C/C++)</title>
      <link href="/2019/08/18/hdoj1303/"/>
      <url>/2019/08/18/hdoj1303/</url>
      
        <content type="html"><![CDATA[<p><br>&nbsp;&nbsp;&nbsp;&nbsp;水题。<br><br><br><br><a id="more"></a><br><br><br><br><br></p><hr><h2 id="题目描述：Doubles（双倍）"><a href="#题目描述：Doubles（双倍）" class="headerlink" title="题目描述：Doubles（双倍）"></a>题目描述：Doubles（双倍）</h2><center>TDoubles</center><center>Time Limit: 2000/1000 MS (Java/Others)    <br>Memory Limit: 65536/32768 K (Java/Others)</center><p>Problem Description<br>&nbsp;&nbsp;&nbsp;&nbsp;As part of an arithmetic competency program, your students will be given randomly generated lists of from 2 to 15 unique positive integers and asked to determine how many items in each list are twice some other item in the same list. You will need a program to help you with the grading. This program should be able to scan the lists and output the correct answer for each one. For example, given the list<br>1 4 3 2 9 7 18 22</p><p>your program should answer 3, as 2 is twice 1, 4 is twice 2, and 18 is twice 9. </p><p>Input<br>&nbsp;&nbsp;&nbsp;&nbsp;The input file will consist of one or more lists of numbers. There will be one list of numbers per line. Each list will contain from 2 to 15 unique positive integers. No integer will be larger than 99. Each line will be terminated with the integer 0, which is not considered part of the list. A line with the single number -1 will mark the end of the file. The example input below shows 3 separate lists. Some lists may not contain any doubles.</p><p>Output<br>&nbsp;&nbsp;&nbsp;&nbsp;The output will consist of one line per input list, containing a count of the items that are double some other item.</p><p>Sample Input<br>    1 4 3 2 9 7 18 22 0<br>    2 4 8 10 0<br>    7 5 11 13 1 3 0<br>    -1 </p><p>Sample Output<br>    3<br>    2<br>    0</p><p>Source</p><center>&nbsp;&nbsp;&nbsp;&nbsp;Mid-Central USA 2003</center><br><br><br><h2 id="原题链接"><a href="#原题链接" class="headerlink" title="原题链接"></a>原题链接</h2><p>More info:<a href="http://acm.hdu.edu.cn/showproblem.php?pid=1303" target="_blank" rel="noopener">Question</a></p><br><br><br><h2 id="Accepted代码"><a href="#Accepted代码" class="headerlink" title="Accepted代码"></a>Accepted代码</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> a[<span class="number">16</span>], count_;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="keyword">while</span> (<span class="number">1</span>) &#123;</span><br><span class="line">    <span class="keyword">int</span> x;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; x;</span><br><span class="line">    <span class="keyword">if</span> (x == <span class="number">-1</span>)<span class="keyword">break</span>;</span><br><span class="line">  </span><br><span class="line">    a[<span class="number">0</span>] = x; count_ = <span class="number">0</span>; <span class="keyword">int</span> n = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; <span class="number">16</span>; i++) &#123;</span><br><span class="line">      <span class="keyword">int</span> y;</span><br><span class="line">      <span class="built_in">cin</span> &gt;&gt; y;</span><br><span class="line">      <span class="keyword">if</span> (!y) <span class="keyword">break</span>;</span><br><span class="line">      a[i]=y;</span><br><span class="line">      n++;</span><br><span class="line">    &#125;</span><br><span class="line">    sort(a, a+n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; i; j++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (a[i] == <span class="number">2</span> * a[j]) &#123;</span><br><span class="line">          count_++;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; count_ &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="参考博客"><a href="#参考博客" class="headerlink" title="参考博客"></a>参考博客</h2><p>  无</p>]]></content>
      
      
      
        <tags>
            
            <tag> hdoj </tag>
            
            <tag> 简单题 </tag>
            
            <tag> Mid-Central USA 2003 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于HDOJ 1302题(The Snail 蜗牛爬井) 的理解(C/C++)</title>
      <link href="/2019/08/18/hdoj1302/"/>
      <url>/2019/08/18/hdoj1302/</url>
      
        <content type="html"><![CDATA[<p><br>&nbsp;&nbsp;&nbsp;&nbsp;简单题。</p><ol><li>首先注意一下数据类型，应该是double型，别习惯性地敲成int了；</li><li>然后是如果蜗牛头天晚上恰好跌倒井底，那么算第二天的失败，不能算在头天上（我也不知道为啥，但是从给的第二组数据来看应该是这样的）</li><li>最后如果能成功，必须是爬出井口，也就是说当前位置必须严格大于井的深度，不可取等<a id="more"></a><br><br><br></li></ol><hr><h2 id="题目描述：The-Snail（蜗牛爬井）"><a href="#题目描述：The-Snail（蜗牛爬井）" class="headerlink" title="题目描述：The Snail（蜗牛爬井）"></a>题目描述：The Snail（蜗牛爬井）</h2><center>The Snail</center><center>Time Limit: 2000/1000 MS (Java/Others)    <br>Memory Limit: 65536/32768 K (Java/Others)</center><p>Problem Description<br>&nbsp;&nbsp;&nbsp;&nbsp;A snail is at the bottom of a 6-foot well and wants to climb to the top. The snail can climb 3 feet while the sun is up, but slides down 1 foot at night while sleeping. The snail has a fatigue factor of 10%, which means that on each successive day the snail climbs 10% * 3 = 0.3 feet less than it did the previous day. (The distance lost to fatigue is always 10% of the first day’s climbing distance.) On what day does the snail leave the well, i.e., what is the first day during which the snail’s height exceeds 6 feet? (A day consists of a period of sunlight followed by a period of darkness.) As you can see from the following table, the snail leaves the well during the third day. </p><p>Day Initial Height Distance Climbed Height After Climbing Height After Sliding<br>    1 0 3 3 2<br>    2 2 2.7 4.7 3.7<br>    3 3.7 2.4 6.1 - </p><p>Your job is to solve this problem in general. Depending on the parameters of the problem, the snail will eventually either leave the well or slide back to the bottom of the well. (In other words, the snail’s height will exceed the height of the well or become negative.) You must find out which happens first and on what day.</p><p>Input<br>&nbsp;&nbsp;&nbsp;&nbsp;The input file contains one or more test cases, each on a line by itself. Each line contains four integers H, U, D, and F, separated by a single space. If H = 0 it signals the end of the input; otherwise, all four numbers will be between 1 and 100, inclusive. H is the height of the well in feet, U is the distance in feet that the snail can climb during the day, D is the distance in feet that the snail slides down during the night, and F is the fatigue factor expressed as a percentage. The snail never climbs a negative distance. If the fatigue factor drops the snail’s climbing distance below zero, the snail does not climb at all that day. Regardless of how far the snail climbed, it always slides D feet at night.</p><p>Output<br>&nbsp;&nbsp;&nbsp;&nbsp;For each test case, output a line indicating whether the snail succeeded (left the well) or failed (slid back to the bottom) and on what day. Format the output exactly as shown in the example.</p><p>Sample Input<br>  6 3 1 10<br>  10 2 1 50<br>  50 5 3 14<br>  50 6 4 1<br>  50 6 3 1<br>  1 1 1 1<br>  0 0 0 0</p><p>Sample Output<br>  success on day 3<br>  failure on day 4<br>  failure on day 7<br>  failure on day 68<br>  success on day 20<br>  failure on day 2</p><p>Source</p><center>&nbsp;&nbsp;&nbsp;&nbsp;Mid-Central USA 1997</center><br><br><br><h2 id="原题链接"><a href="#原题链接" class="headerlink" title="原题链接"></a>原题链接</h2><p>More info:<a href="http://acm.hdu.edu.cn/showproblem.php?pid=1302" target="_blank" rel="noopener">Question</a></p><br><br><br><h2 id="Accepted代码"><a href="#Accepted代码" class="headerlink" title="Accepted代码"></a>Accepted代码</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">double</span> H, U, D, F;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="keyword">while</span> (<span class="built_in">cin</span> &gt;&gt; H &gt;&gt; U &gt;&gt; D &gt;&gt; F) &#123;</span><br><span class="line">    <span class="keyword">if</span> (!H &amp;&amp; !D &amp;&amp; !U &amp;&amp; !F) <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">double</span> f = (U * F / <span class="number">100</span>), h = H;</span><br><span class="line">    <span class="built_in">string</span> res;</span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>) &#123;</span><br><span class="line">      count++; </span><br><span class="line">      H -= U; </span><br><span class="line">      <span class="keyword">if</span> (H &lt; <span class="number">0</span>) &#123;</span><br><span class="line">        res = <span class="string">"success "</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      H += D; </span><br><span class="line">      <span class="keyword">if</span> (U - f &gt;= <span class="number">0</span>) U -= f;</span><br><span class="line">      <span class="keyword">else</span> U = <span class="number">0</span>; </span><br><span class="line">      <span class="keyword">if</span> (H &gt;= h &amp;&amp; count != <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (H == h) count++;</span><br><span class="line">        res = <span class="string">"failure "</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; res+<span class="string">"on day "</span> &lt;&lt;count &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="参考博客"><a href="#参考博客" class="headerlink" title="参考博客"></a>参考博客</h2><p>  无</p>]]></content>
      
      
      
        <tags>
            
            <tag> hdoj </tag>
            
            <tag> 简单题 </tag>
            
            <tag> Mid-Central USA 1997 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于HDOJ 1283题(最简单的计算机) 的理解(C/C++)</title>
      <link href="/2019/08/18/hdoj1283/"/>
      <url>/2019/08/18/hdoj1283/</url>
      
        <content type="html"><![CDATA[<p><br>&nbsp;&nbsp;&nbsp;&nbsp;emmmmmm，水题，感觉没啥说的<a id="more"></a><br><br><br><br><br></p><hr><h2 id="题目描述：最简单的计算机"><a href="#题目描述：最简单的计算机" class="headerlink" title="题目描述：最简单的计算机"></a>题目描述：最简单的计算机</h2><center>最简单的计算机</center><center>Time Limit: 2000/1000 MS (Java/Others)    <br>Memory Limit: 65536/32768 K (Java/Others)</center><p>Problem Description<br>&nbsp;&nbsp;&nbsp;&nbsp;一个名叫是PigHeadThree的研究组织设计了一台实验用的计算机，命名为PpMm。PpMm只能执行简单的六种命令A，B，C，D，E，F；只有二个内存M1，M2；三个寄存器R1，R2，R3。六种命令的含义如下：<br>  命令A：将内存M1的数据装到寄存器R1中；<br>  命令B：将内存M2的数据装到寄存器R2中；<br>  命令C：将寄存器R3的数据装到内存M1中；<br>  命令D：将寄存器R3的数据装到内存M2中；<br>  命令E：将寄存器R1中的数据和寄存器R2中的数据相加，结果放到寄存器R3中；<br>  命令F：将寄存器R1中的数据和寄存器R2中的数据相减，结果放到寄存器R3中。<br>你的任务是：设计一个程序模拟PpMm的运行。</p><p>Input<br>&nbsp;&nbsp;&nbsp;&nbsp;有若干组，每组有2行，第一行是2个整数，分别表示M1和M2中的初始内容；第二行是一串长度不超过200的由大写字母A到F组成的命令串，命令串的含义如上所述。</p><p>Output<br>&nbsp;&nbsp;&nbsp;&nbsp;对应每一组的输入，输出只有一行，二个整数，分别表示M1，M2的内容；其中M1和M2之间用逗号隔开。</p><p>其他说明：R1，R2，R3的初始值为0，所有中间结果都在-2^31和2^31之间。</p><p>Sample Input<br>    100 288<br>    ABECED<br>    876356 321456<br>    ABECAEDBECAF</p><p>Sample Output<br>    388,388<br>    2717080,1519268</p><p>Author</p><center>&nbsp;&nbsp;&nbsp;&nbsp;SmallBeer(CML)</center><p>Source</p><center>&nbsp;&nbsp;&nbsp;&nbsp;杭电ACM集训队训练赛（VII）</center><br><br><br><h2 id="原题链接"><a href="#原题链接" class="headerlink" title="原题链接"></a>原题链接</h2><p>More info:<a href="http://acm.hdu.edu.cn/showproblem.php?pid=1283" target="_blank" rel="noopener">Question</a></p><br><br><br><h2 id="Accepted代码"><a href="#Accepted代码" class="headerlink" title="Accepted代码"></a>Accepted代码</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> M1, M2;</span><br><span class="line"><span class="keyword">int</span> R1, R2, R3;</span><br><span class="line"><span class="built_in">string</span> input_;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">load</span><span class="params">(<span class="keyword">char</span> x)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="string">'A'</span> == x) R1 = M1;</span><br><span class="line">    <span class="keyword">if</span> (<span class="string">'B'</span> == x) R2 = M2;</span><br><span class="line">    <span class="keyword">if</span> (<span class="string">'C'</span> == x) M1 = R3;</span><br><span class="line">    <span class="keyword">if</span> (<span class="string">'D'</span> == x) M2 = R3;</span><br><span class="line">    <span class="keyword">if</span> (<span class="string">'E'</span> == x) R3 = R1 + R2;</span><br><span class="line">    <span class="keyword">if</span> (<span class="string">'F'</span> == x) R3 = R1 - R2;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">cin</span> &gt;&gt; M1 &gt;&gt; M2 &gt;&gt; input_) &#123;</span><br><span class="line">        R1 = R2 = R3 = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; input_.size(); i++)</span><br><span class="line">            load(input_[i]);</span><br><span class="line">    </span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; M1 &lt;&lt; <span class="string">","</span> &lt;&lt; M2 &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="参考博客"><a href="#参考博客" class="headerlink" title="参考博客"></a>参考博客</h2><p>  无</p>]]></content>
      
      
      
        <tags>
            
            <tag> hdoj </tag>
            
            <tag> 杭电ACM集训队训练赛（VII） </tag>
            
            <tag> 简单题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于HDOJ 1282题(回文数猜想) 的理解(C/C++)</title>
      <link href="/2019/08/17/hdoj1282/"/>
      <url>/2019/08/17/hdoj1282/</url>
      
        <content type="html"><![CDATA[<p><br>&nbsp;&nbsp;&nbsp;&nbsp;emmmmmm，是一道水题，但是粗心了，“==”写成了“=”，还去排了半天的bug……以后一定一定写成“常量==变量”，这样少写一个“=”的话就会报错了<a id="more"></a><br><br><br><br><br></p><hr><h2 id="题目描述：回文数猜想"><a href="#题目描述：回文数猜想" class="headerlink" title="题目描述：回文数猜想"></a>题目描述：回文数猜想</h2><center>回文数猜想</center><center>Time Limit: 2000/1000 MS (Java/Others)    <br>Memory Limit: 65536/32768 K (Java/Others)</center><p>Problem Description<br>&nbsp;&nbsp;&nbsp;&nbsp;一个正整数，如果从左向右读（称之为正序数）和从右向左读（称之为倒序数）是一样的，这样的数就叫回文数。任取一个正整数，如果不是回文数，将该数与他的倒序数相加，若其和不是回文数，则重复上述步骤，一直到获得回文数为止。例如：68变成154（68+86），再变成605（154+451），最后变成1111（605+506），而1111是回文数。于是有数学家提出一个猜想：不论开始是什么正整数，在经过有限次正序数和倒序数相加的步骤后，都会得到一个回文数。至今为止还不知道这个猜想是对还是错。现在请你编程序验证之。</p><p>Input<br>&nbsp;&nbsp;&nbsp;&nbsp;每行一个正整数。<br>特别说明：输入的数据保证中间结果小于2^31。</p><p>Output<br>&nbsp;&nbsp;&nbsp;&nbsp;对应每个输入，输出两行，一行是变换的次数，一行是变换的过程。</p><p>Sample Input<br>    27228<br>    37649</p><p>Sample Output<br>    3<br>    27228—&gt;109500—&gt;115401—&gt;219912<br>    2<br>    37649—&gt;132322—&gt;355553</p><p>Author</p><center>&nbsp;&nbsp;&nbsp;&nbsp;SmallBeer(CML)</center><p>Source</p><center>&nbsp;&nbsp;&nbsp;&nbsp;杭电ACM集训队训练赛（VII）</center><br><br><br><h2 id="原题链接"><a href="#原题链接" class="headerlink" title="原题链接"></a>原题链接</h2><p>More info:<a href="http://acm.hdu.edu.cn/showproblem.php?pid=1282" target="_blank" rel="noopener">Question</a></p><br><br><br><h2 id="Accepted代码"><a href="#Accepted代码" class="headerlink" title="Accepted代码"></a>Accepted代码</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> input_, num;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">reload</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a = x,count=<span class="number">0</span>,res=<span class="number">0</span>,b;</span><br><span class="line">    <span class="keyword">while</span> (a) &#123;</span><br><span class="line">        a /= <span class="number">10</span>;</span><br><span class="line">        count++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//cout &lt;&lt; "the count of this number= " &lt;&lt; count &lt;&lt; endl;</span></span><br><span class="line">    a = x;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= count; i++) &#123;</span><br><span class="line">        b=a % <span class="number">10</span>;</span><br><span class="line">        a /= <span class="number">10</span>;</span><br><span class="line">        res += (b * <span class="built_in">pow</span>(<span class="number">10</span>, count - i));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">is_re</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (reload(x) == x) <span class="keyword">return</span> <span class="literal">true</span>;<span class="comment">//就是这里少写一个=，写成了x=reload(x)</span></span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">cin</span>&gt;&gt;input_) &#123;</span><br><span class="line">        num = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> c = input_;</span><br><span class="line">        <span class="keyword">while</span> (!is_re(c)) &#123;</span><br><span class="line">            c += reload(c);</span><br><span class="line">            num++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; num &lt;&lt; <span class="built_in">endl</span>; <span class="built_in">cout</span> &lt;&lt; input_;</span><br><span class="line">        <span class="keyword">while</span> (!is_re(input_)) &#123;</span><br><span class="line">            input_ += reload(input_);</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">"---&gt;"</span> &lt;&lt; input_;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="参考博客"><a href="#参考博客" class="headerlink" title="参考博客"></a>参考博客</h2><p>  无</p>]]></content>
      
      
      
        <tags>
            
            <tag> hdoj </tag>
            
            <tag> 粗心 </tag>
            
            <tag> 回文 </tag>
            
            <tag> 杭电ACM集训队训练赛（VII） </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于HDOJ 1279题(验证角谷猜想) 的理解(C/C++)</title>
      <link href="/2019/08/17/hdoj1279/"/>
      <url>/2019/08/17/hdoj1279/</url>
      
        <content type="html"><![CDATA[<p><br>&nbsp;&nbsp;&nbsp;&nbsp;这道题主要是在处理方法上绕远了，总是想判断每次事例的最后一个输出，然后把输出去掉；尝试多次后放弃了，还是用space标记下第一个输出，然后除了第一个，其它都先输出一个空格再接着输出的方法达成格式要求。<a id="more"></a>然后就是另一个WA的原因了，之前的逻辑有些小问题，老是想在循环体内直接判断flag，然后直接输出“No number can be output !”的情况，但是像10这样的就不满足情况，会输出“No number can be output !”+“ 5”，然后把判断和特殊情况输出丢循环体外后就AC了<br><br><br><br><br></p><hr><h2 id="题目描述：验证角谷猜想"><a href="#题目描述：验证角谷猜想" class="headerlink" title="题目描述：验证角谷猜想"></a>题目描述：验证角谷猜想</h2><center>验证角谷猜想</center><center>Time Limit: 2000/1000 MS (Java/Others)    <br>Memory Limit: 65536/32768 K (Java/Others)</center><p>Problem Description<br>&nbsp;&nbsp;&nbsp;&nbsp;数论中有许多猜想尚未解决，其中有一个被称为“角谷猜想”的问题，该问题在五、六十年代的美国多个著名高校中曾风行一时，这个问题是这样描述的：任何一个大于一的自然数，如果是奇数，则乘以三再加一；如果是偶数，则除以二；得出的结果继续按照前面的规则进行运算，最后必定得到一。现在请你编写一个程序验证他的正确性。</p><p>Input<br>&nbsp;&nbsp;&nbsp;&nbsp;本题有多个测试数据组，第一行为测试数据组数N，接着是N行的正整数。</p><p>Output<br>&nbsp;&nbsp;&nbsp;&nbsp;输出验证“角谷猜想”过程中的奇数，最后得到的1不用输出；每个测试题输出一行；每行中只有两个输出之间才能有一个空格；如果没有这样的输出，则输出：No number can be output !。</p><p>Sample Input<br>    4<br>    5<br>    9<br>    16<br>    11</p><p>Sample Output<br>    5<br>    9 7 11 17 13 5<br>    No number can be output !<br>    11 17 13 5</p><p>Author</p><center>&nbsp;&nbsp;&nbsp;&nbsp;Cai Minglun</center><p>Source</p><center>&nbsp;&nbsp;&nbsp;&nbsp;杭电ACM集训队训练赛（VI）</center><br><br><br><h2 id="原题链接"><a href="#原题链接" class="headerlink" title="原题链接"></a>原题链接</h2><p>More info:<a href="http://acm.hdu.edu.cn/showproblem.php?pid=1279" target="_blank" rel="noopener">Question</a></p><h2 id="Accepted代码"><a href="#Accepted代码" class="headerlink" title="Accepted代码"></a>Accepted代码</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">bool</span> flag,space;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line">    <span class="keyword">while</span> (n--) &#123;</span><br><span class="line">        <span class="keyword">int</span> input_,x;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; input_;</span><br><span class="line">        x = input_;</span><br><span class="line">        flag = <span class="number">1</span>; space = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span> (x != <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (x % <span class="number">2</span> == <span class="number">1</span>) &#123;</span><br><span class="line">                flag = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">if</span> (space) &#123;</span><br><span class="line">                    <span class="built_in">cout</span> &lt;&lt; x;</span><br><span class="line">                    space = <span class="number">0</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> <span class="built_in">cout</span> &lt;&lt;<span class="string">" "</span>&lt;&lt; x;</span><br><span class="line">                x = x * <span class="number">3</span> + <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (x % <span class="number">2</span> == <span class="number">0</span>) &#123;</span><br><span class="line">                flag = flag &amp;&amp; <span class="number">1</span>;</span><br><span class="line">                x = x / <span class="number">2</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (flag) <span class="built_in">cout</span> &lt;&lt; <span class="string">"No number can be output !"</span>;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="参考博客"><a href="#参考博客" class="headerlink" title="参考博客"></a>参考博客</h2><p>  无</p>]]></content>
      
      
      
        <tags>
            
            <tag> hdoj </tag>
            
            <tag> 空格 </tag>
            
            <tag> 格式控制 </tag>
            
            <tag> 杭电ACM集训队训练赛（VI） </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于HDOJ 1266题(Reverse Number) 的理解(C/C++)</title>
      <link href="/2019/08/17/hdoj1266/"/>
      <url>/2019/08/17/hdoj1266/</url>
      
        <content type="html"><![CDATA[<p><br>&nbsp;&nbsp;&nbsp;&nbsp;本来应该是一个水题的，结果还是细节上有点小问题，之前WA的2次代码没有处理好中间0，例如输入502，应该输出205的，结果按之前的代码的话就直接给中间0那给截断了，只输出了一个两位数……所以肯定是WA了。<a id="more"></a>之后注意了下中间0，就给AC了。<br>在这里也给出除了例题的另一组特殊数据吧，方便小伙伴们测试</p><p>input：</p><p>3<br>-0012560020<br>00000<br>00205<br><br><br><br>output：</p><p>-20065210<br>0<br>502<br><br><br></p><hr><h2 id="题目描述：Reverse-Number（数字逆序）"><a href="#题目描述：Reverse-Number（数字逆序）" class="headerlink" title="题目描述：Reverse Number（数字逆序）"></a>题目描述：Reverse Number（数字逆序）</h2><center>Reverse Number</center><center>Time Limit: 2000/1000 MS (Java/Others)    <br>Memory Limit: 65536/32768 K (Java/Others)</center><p>Problem Description<br>&nbsp;&nbsp;&nbsp;&nbsp;Welcome to 2006’4 computer college programming contest!</p><p>Specially, I give my best regards to all freshmen! You are the future of HDU ACM! And now, I must tell you that ACM problems are always not so easy, but, except this one… Ha-Ha!</p><p>Give you an integer; your task is to output its reverse number. Here, reverse number is defined as follows:</p><ol><li>The reverse number of a positive integer ending without 0 is general reverse, for example, reverse (12) = 21;</li><li>The reverse number of a negative integer is negative, for example, reverse (-12) = -21;</li><li>The reverse number of an integer ending with 0 is described as example, reverse (1200) = 2100.</li></ol><p>Input<br>&nbsp;&nbsp;&nbsp;&nbsp;Input file contains multiple test cases. There is a positive integer n (n&lt;100) in the first line, which means the number of test cases, and then n 32-bit integers follow.</p><p>Output<br>&nbsp;&nbsp;&nbsp;&nbsp;For each test case, you should output its reverse number, one case per line.</p><p>Sample Input<br>3<br>12<br>-12<br>1200</p><p>Sample Output<br>21<br>-21<br>2100</p><p>Author</p><center>&nbsp;&nbsp;&nbsp;&nbsp;lcy</center><p>Source</p><center>&nbsp;&nbsp;&nbsp;&nbsp;HDU 2006-4 Programming Contest</center><br><br><br><h2 id="原题链接"><a href="#原题链接" class="headerlink" title="原题链接"></a>原题链接</h2><p>More info:<a href="http://acm.hdu.edu.cn/showproblem.php?pid=1266" target="_blank" rel="noopener">Question</a></p><h2 id="Accepted代码"><a href="#Accepted代码" class="headerlink" title="Accepted代码"></a>Accepted代码</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> <span class="keyword">int</span> n,input_;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line">    <span class="keyword">while</span> (n--) &#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;input_;</span><br><span class="line">        <span class="keyword">long</span> <span class="keyword">long</span> <span class="keyword">int</span> x = input_,a,count=<span class="number">0</span>,num=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (x) &#123;</span><br><span class="line">            a = x % <span class="number">10</span>;</span><br><span class="line">            x /= <span class="number">10</span>;</span><br><span class="line">            num++;</span><br><span class="line">        &#125;</span><br><span class="line">        x = input_; a = <span class="number">10</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= num; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (x % a) count++;</span><br><span class="line">            a *= <span class="number">10</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">long</span> <span class="keyword">long</span> <span class="keyword">int</span> res = <span class="number">0</span>,k=num<span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">while</span> (count) &#123;</span><br><span class="line">            res += ((<span class="keyword">long</span> <span class="keyword">long</span> <span class="keyword">int</span>)(input_ / <span class="built_in">pow</span>(<span class="number">10</span>, num - count ) )% <span class="number">10</span>) * <span class="built_in">pow</span>(<span class="number">10</span>, k);</span><br><span class="line">            k--; count--;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; res &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>&nbsp;&nbsp;&nbsp;&nbsp;ps.直接用int感觉应该也可以过吧，题目里貌似是说了int32位的数，我的AC代码只是因为之前WA时误以为是数据类型的锅，就给改成了long long int，有兴趣的小伙伴可以试试直接跑int。</p><h2 id="参考博客"><a href="#参考博客" class="headerlink" title="参考博客"></a>参考博客</h2><p>感谢&nbsp;cnxo &nbsp; 的 <a href="https://www.cnblogs.com/webmen/p/5739321.html" target="_blank" rel="noopener">HDOJ 1266 Reverse Number（数字反向输出题）</a> 提示了我之前WA考略欠缺的地方（不过貌似他给的数据输出有点不对？已给老哥评论了，等回复）</p>]]></content>
      
      
      
        <tags>
            
            <tag> hdoj </tag>
            
            <tag> 数字逆序 </tag>
            
            <tag> HDU 2006-4 Programming Contest </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>算法笔记 前缀和 差分 快速幂(C/C++)</title>
      <link href="/2019/08/16/algorithmNotes_PrefixSum_Difference_Calculation/"/>
      <url>/2019/08/16/algorithmNotes_PrefixSum_Difference_Calculation/</url>
      
        <content type="html"><![CDATA[<p><br>&nbsp;&nbsp;&nbsp;&nbsp;早上起来，室友还在睡，没法尽情敲代码，所以闲得无聊去逛了下某介于AC间的小破站，复习了一下一些基础算法。也就是tags和标题中也有写到的前缀和、差分和快速幂。首先呢，还是必须得感谢下阿婆主的视频讲解的，确实比直接看代码什么的来得形象很多。在此记录一下，也是我对学习的理解和笔记吧。<br><br>贴出老哥的视频，文章大部分内容也是来源于老哥的视频 &nbsp;【AgOHの算法胡扯】 &nbsp; 的<a href="https://www.bilibili.com/video/av63194309" target="_blank" rel="noopener">【AgOHの算法胡扯】前缀和 差分 快速幂</a></p><p><br><br><br></p><hr><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;可能小伙伴们会说，现在都有视频学习了，干嘛还去逛文章看啊，生涩难懂不如视频来得简单粗暴。这里分享一下我从很多的阿婆主以及博客主那儿得来的，也算是我自己的一个偏见吧：<br><br>&nbsp;&nbsp;&nbsp;&nbsp;视频学习虽然大部分来得生动形象，但是讲真的，很佷很费时间！！！现在的视频，除非是一些大学的公开课那种，又或者是良心阿婆主，否则大多数（起码我的感觉，或者偏见是这样）都是长于20分钟的，哪怕你是3倍速看视频，忽略大脑是否能反应得过来，也忽略你对知识的遗忘速度，但是你还是得跟着视频走一遍。否则很多时候你如果跳着看视频的话，是容易看不懂他说的啥的，因为大多数视频是没有给你标时间点的，你不会知道他哪个点在说哪个知识点。<br><br>&nbsp;&nbsp;&nbsp;&nbsp;然后再说文章和博客，虽然可能取决于博主和作者的思维和写作水平，但是文章一类的才是真真的简单粗暴！你可以自由地己获取你想要的部分。一般的文章都是会有自己的目录的，根据你想要的获取的具体知识点，重点跳到你想要看的地方，反复阅读。而且一般情况下（能学懂的前提），是比视频学习的效率高出很多的，同样地20分钟，看一些学习视频你最多看1遍，但是同内容而言文章够你看好几遍的了。<br><br>&nbsp;&nbsp;&nbsp;&nbsp;当然也不是说视频不好，感觉可能视频是适合初学入门吧，生动形象，能及时跟着视频主的思路走。</p><h2 id="前缀和"><a href="#前缀和" class="headerlink" title="前缀和"></a>前缀和</h2><h3 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h3><p><br>&nbsp;&nbsp;&nbsp;&nbsp;现有一段数组，求出[l,r]内的所有数的和。<br><br><br></p><h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><center>可以用暴力，线段树，以及将介绍的前缀和</center><br><br><br><h3 id="预处理"><a href="#预处理" class="headerlink" title="预处理"></a>预处理</h3><p><br>&nbsp;&nbsp;&nbsp;&nbsp;在读入数组a的时候（也就是cin或者scanf的时候），构建一个数组d，d[i]=d[i-1]+a[i];<br><br>&nbsp;&nbsp;&nbsp;&nbsp;也就是说d[i]实际上为a的前i项和</p><br>见表：<table><thead><tr><th>name/index</th><th>0</th><th>1</th><th>2</th><th>3</th><th>4</th><th>5</th></tr></thead><tbody><tr><td>a</td><td>\</td><td>2</td><td>6</td><td>8</td><td>4</td><td>3</td></tr><tr><td>d</td><td>0</td><td>2</td><td>8</td><td>16</td><td>20</td><td>23</td></tr></tbody></table><h3 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h3><p><br>&nbsp;&nbsp;&nbsp;&nbsp;输出即为d[r]-d[l-1]</p><h2 id="差分"><a href="#差分" class="headerlink" title="差分"></a>差分</h2><h3 id="问题描述-1"><a href="#问题描述-1" class="headerlink" title="问题描述"></a>问题描述</h3><p><br>&nbsp;&nbsp;&nbsp;&nbsp;<br>现有长度为n的数字序列，对其进行m次的区间修改（把某区间内的所有数加减一个值），输出改后的序列。<br><br><br></p><h3 id="分析-1"><a href="#分析-1" class="headerlink" title="分析"></a>分析</h3><center>可以用暴力，线段树，以及将介绍的差分</center><br><br><br><h3 id="预处理-1"><a href="#预处理-1" class="headerlink" title="预处理"></a>预处理</h3><p>（同上）<br><br>&nbsp;&nbsp;&nbsp;&nbsp;在读入数组a的时候（也就是cin或者scanf的时候），构建一个数组d，d[i]=a[i]-a[i-1];<br><br>&nbsp;&nbsp;&nbsp;&nbsp;也就是说d[i]实际上为a的相邻两项的差值</p><br>见表：<table><thead><tr><th>name/index</th><th>0</th><th>1</th><th>2</th><th>3</th><th>4</th><th>5</th></tr></thead><tbody><tr><td>a</td><td>\</td><td>2</td><td>6</td><td>8</td><td>4</td><td>3</td></tr><tr><td>d</td><td>\</td><td>2</td><td>4</td><td>2</td><td>-4</td><td>-1</td></tr></tbody></table><p><br>&nbsp;&nbsp;&nbsp;&nbsp;且a[i]=d[1]+……+d[i]</p><h3 id="修改"><a href="#修改" class="headerlink" title="修改"></a>修改</h3><p><br>&nbsp;&nbsp;&nbsp;&nbsp;<br>举个栗子来说吧，如对于上述表，对[2,4]都+5处理，那么</p><p>见表：</p><table><thead><tr><th>name/index</th><th>0</th><th>1</th><th>2</th><th>3</th><th>4</th><th>5</th></tr></thead><tbody><tr><td>a</td><td>\</td><td>2</td><td>11</td><td>13</td><td>9</td><td>3</td></tr><tr><td>d</td><td>\</td><td>2</td><td>9</td><td>2</td><td>-4</td><td>-6</td></tr></tbody></table><p><br>&nbsp;&nbsp;&nbsp;&nbsp;你会发现，其实就是序号2和5的位置处d值改变了下<br><br>那么推广：<br><br>&nbsp;&nbsp;&nbsp;&nbsp;对于[l,r]的区间进行了+k（k可以取负）操作，那么只需要把d[l]+=k;而把d[r+1]-=k处理就行了</p><h3 id="输出-1"><a href="#输出-1" class="headerlink" title="输出"></a>输出</h3><p><br>&nbsp;&nbsp;&nbsp;&nbsp;按照前面提到的，利用a[i]=d[1]+……+d[i]的原理，输出a中所有的值即可</p><h2 id="快速幂"><a href="#快速幂" class="headerlink" title="快速幂"></a>快速幂</h2><h3 id="问题描述-2"><a href="#问题描述-2" class="headerlink" title="问题描述"></a>问题描述</h3><p><br>&nbsp;&nbsp;&nbsp;&nbsp;这个应该很简单了，求 a<sup>b</sup> % p。<br><br><br></p><h3 id="分析-2"><a href="#分析-2" class="headerlink" title="分析"></a>分析</h3><center>直接算的话，可以很清楚地料想到，会有对应的b次乘积操作。但是运用快速幂的方法，会减少很多次乘积操作</center><br><br><br><h3 id="举栗子"><a href="#举栗子" class="headerlink" title="举栗子"></a>举栗子</h3><p><br>&nbsp;&nbsp;&nbsp;&nbsp;假如求a<sup>8</sup> (默认mod 1吧)<br><br>a * a = a<sup>2</sup><br><br>a<sup>2</sup> * a<sup>2</sup> = a<sup>4</sup><br><br>a<sup>4</sup> * a<sup>4</sup> = a<sup>8</sup><br><br><br><br>&nbsp;&nbsp;&nbsp;&nbsp;done!</p><p><br>&nbsp;&nbsp;&nbsp;&nbsp;所以，对于本该8次的乘积操作，先只需要3次！</p><p><br>&nbsp;&nbsp;&nbsp;&nbsp;那么这是b为2的整数次方，其他情况呢</p><p><br>&nbsp;&nbsp;&nbsp;&nbsp;例如a<sup>13</sup> (默认 %1)呢，<br><br>&nbsp;&nbsp;&nbsp;&nbsp;可以利用a<sup>m * n</sup>=a<sup>m</sup> * a<sup>n</sup> 的原理<br><br>&nbsp;&nbsp;&nbsp;&nbsp;a<sup>13</sup> = a<sup>8</sup> * a<sup>4</sup> * a;<br><br>&nbsp;&nbsp;&nbsp;&nbsp;乘积操作次数=3+2+1=6次，而非原来的13次</p><p>p.s..可以在算a<sup>8</sup>的过程中，把过程中a<sup>4</sup>、a<sup>2</sup>的值用一个数组存起来（记忆化），那么实际上的次数就变成了max(3,2,1)+1+1=5次了</p><p>！！！注意每次操作别忘了%p！！！</p><h3 id="输出-2"><a href="#输出-2" class="headerlink" title="输出"></a>输出</h3><p><br>&nbsp;&nbsp;&nbsp;&nbsp;return最后的结果就可以了</p><h3 id="快速幂的模板"><a href="#快速幂的模板" class="headerlink" title="快速幂的模板"></a>快速幂的模板</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">power</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b, <span class="keyword">int</span> m)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ans = <span class="number">1</span>;  a %= m;</span><br><span class="line">    <span class="keyword">while</span> (b) &#123;</span><br><span class="line">        <span class="keyword">if</span> (b &amp; <span class="number">1</span>) ans = (ans * a) % m;</span><br><span class="line">        a = (a * a) % m;</span><br><span class="line">        b &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a, b, p;</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">cin</span> &gt;&gt; a &gt;&gt; b &gt;&gt; p) &#123;</span><br><span class="line">        <span class="keyword">if</span> (p == <span class="number">-1</span> &amp;&amp; a == <span class="number">-1</span> &amp;&amp; b == <span class="number">-1</span>) <span class="keyword">break</span>;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; power(a, b, p) &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="HDOJ-1061"><a href="#HDOJ-1061" class="headerlink" title="HDOJ 1061"></a>HDOJ 1061</h3><center>Rightmost Digit</center><center>Time Limit: 2000/1000 MS (Java/Others)    <br>Memory Limit: 65536/32768 K (Java/Others)</center><p>Problem Description<br>&nbsp;&nbsp;&nbsp;&nbsp;Given a positive integer N, you should output the most right digit of N^N.</p><p>Input<br>&nbsp;&nbsp;&nbsp;&nbsp;The input contains several test cases. The first line of the input is a single integer T which is the number of test cases. T test cases follow.<br>Each test case contains a single positive integer N(1&lt;=N&lt;=1,000,000,000).</p><p>Output<br>&nbsp;&nbsp;&nbsp;&nbsp;For each test case, you should output the rightmost digit of N^N.</p><p>Sample Input<br>2<br>3<br>4</p><p>Sample Output<br>7<br>6</p><p>   Hint</p><pre><code>In the first case, 3 * 3 * 3 = 27, so the rightmost digit is 7.In the second case, 4 * 4 * 4 * 4 = 256, so the rightmost digit is 6.</code></pre><p> AC代码：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">power</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b, <span class="keyword">int</span> m)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ans = <span class="number">1</span>;  a %= m;</span><br><span class="line">    <span class="keyword">while</span> (b) &#123;</span><br><span class="line">        <span class="keyword">if</span> (b &amp; <span class="number">1</span>) ans = (ans * a) % m;</span><br><span class="line">        a = (a * a) % m;</span><br><span class="line">        b &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,m;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    <span class="keyword">while</span>(n--)&#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;m;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;power(m,m,<span class="number">10</span>)&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Author<br>&nbsp;&nbsp;&nbsp;&nbsp;Ignatius.L</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p>感谢&nbsp;【AgOHの算法胡扯】 &nbsp; 的 <a href="https://www.bilibili.com/video/av63194309" target="_blank" rel="noopener">【AgOHの算法胡扯】前缀和 差分 快速幂</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> 基础算法 </tag>
            
            <tag> 算法笔记 </tag>
            
            <tag> 前缀和 </tag>
            
            <tag> 差分 </tag>
            
            <tag> 快速幂 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于HDOJ 1248题(寒冰王座) 的理解(C/C++)</title>
      <link href="/2019/08/15/hdoj1248/"/>
      <url>/2019/08/15/hdoj1248/</url>
      
        <content type="html"><![CDATA[<p><br>&nbsp;&nbsp;&nbsp;&nbsp;老是想着去套之前学过的完全背包的模板，结果真的把自己套进去了……超时限，然后去看了 &nbsp;Galahad_LLLLLL &nbsp; 的<a href="https://blog.csdn.net/Galahad_LLLLLL/article/details/78369036" target="_blank" rel="noopener">HDOJ1248(完全背包)</a>的代码过后，天呐，为毛他的代码和逻辑可以这么简单…………<br><br><br>再次感谢Galahad_LLLLLL博主的博文和代码&nbsp;HDOJ1248(完全背包)&nbsp;<br><br><br></p><hr><h2 id="题目描述：寒冰王座（完全背包问题）"><a href="#题目描述：寒冰王座（完全背包问题）" class="headerlink" title="题目描述：寒冰王座（完全背包问题）"></a>题目描述：寒冰王座（完全背包问题）</h2><center>寒冰王座</center><center>Time Limit: 2000/1000 MS (Java/Others)    <br>Memory Limit: 65536/32768 K (Java/Others)</center><p>Problem Description<br>&nbsp;&nbsp;&nbsp;&nbsp;<br>不死族的巫妖王发工资拉,死亡骑士拿到一张N元的钞票(记住,只有一张钞票),为了防止自己在战斗中频繁的死掉,他决定给自己买一些道具,于是他来到了地精商店前.</p><p>死亡骑士:”我要买道具!”</p><p>地精商人:”我们这里有三种道具,血瓶150块一个,魔法药200块一个,无敌药水350块一个.”</p><p>死亡骑士:”好的,给我一个血瓶.”</p><p>说完他掏出那张N元的大钞递给地精商人.</p><p>地精商人:”我忘了提醒你了,我们这里没有找客人钱的习惯的,多的钱我们都当小费收了的,嘿嘿.”</p><p>死亡骑士:”……”</p><p>死亡骑士想,与其把钱当小费送个他还不如自己多买一点道具,反正以后都要买的,早点买了放在家里也好,但是要尽量少让他赚小费.</p><p>现在死亡骑士希望你能帮他计算一下,最少他要给地精商人多少小费.</p><p>Input<br>&nbsp;&nbsp;&nbsp;&nbsp;<br>输入数据的第一行是一个整数T(1&lt;=T&lt;=100),代表测试数据的数量.然后是T行测试数据,每个测试数据只包含一个正整数N(1&lt;=N&lt;=10000),N代表死亡骑士手中钞票的面值.</p><p>注意:地精商店只有题中描述的三种道具.</p><p>Output<br>&nbsp;&nbsp;&nbsp;&nbsp;<br>对于每组测试数据,请你输出死亡骑士最少要浪费多少钱给地精商人作为小费.</p><p>Sample Input<br>2<br>900<br>250</p><p>Sample Output<br>0<br>50</p><p>Author<br>&nbsp;&nbsp;&nbsp;&nbsp;Ignatius.L</p><h2 id="原题链接"><a href="#原题链接" class="headerlink" title="原题链接"></a>原题链接</h2><p>More info:<a href="http://acm.hdu.edu.cn/showproblem.php?pid=1248" target="_blank" rel="noopener">Question</a></p><h2 id="（参考博主的）Accepted代码"><a href="#（参考博主的）Accepted代码" class="headerlink" title="（参考博主的）Accepted代码"></a>（参考博主的）Accepted代码</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include&lt;iostream&gt;</span></span><br><span class="line"><span class="comment">#include&lt;algorithm&gt;</span></span><br><span class="line"><span class="comment">#include&lt;string&gt;</span></span><br><span class="line">using namespace std;</span><br><span class="line">int price[3] = &#123; 150,200,350 &#125;;</span><br><span class="line">int dp[10010];</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">    int t;</span><br><span class="line">    cin &gt;&gt; t;</span><br><span class="line">    <span class="keyword">while</span> (t--)</span><br><span class="line">    &#123;</span><br><span class="line">        memset(dp, 0, sizeof(dp));</span><br><span class="line">        int money;</span><br><span class="line">        cin &gt;&gt; money;</span><br><span class="line">        <span class="keyword">for</span> (int i = 0; i &lt; 3; i++)</span><br><span class="line">            <span class="keyword">for</span> (int j = price[i]; j &lt;= money; j++) //与01背包不一样 是顺序</span><br><span class="line">                dp[j] = max(dp[j], dp[j - price[i]] + price[i]);  </span><br><span class="line">                //cout &lt;&lt; money - dp[money] &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="参考博客"><a href="#参考博客" class="headerlink" title="参考博客"></a>参考博客</h2><p>感谢&nbsp;Galahad_LLLLLL &nbsp; 的 <a href="https://blog.csdn.net/Galahad_LLLLLL/article/details/78369036" target="_blank" rel="noopener">HDOJ1248(完全背包)</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> hdoj </tag>
            
            <tag> 背包问题 </tag>
            
            <tag> 完全背包 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Android通过Jdbc直接连接本地MySQL数据库</title>
      <link href="/2019/08/13/android_Jdbc_Mysql/"/>
      <url>/2019/08/13/android_Jdbc_Mysql/</url>
      
        <content type="html"><![CDATA[<p><br>&nbsp;&nbsp;&nbsp;&nbsp;之前学校里实训的小项目，我们小组做的安卓端，但是用安卓（AS）通过Jdbc连接本地数据库的时候(因为最后会想要把数据库放到云服务器上，所以没有直接考虑用android自带的数据库SQLLite)老是出错连接不上，于是疯狂心态炸裂。多谢之后看到的几篇博客（详见  <a href="/2019/08/13/android_Jdbc_Mysql/#参考博客">参考博文</a> ）帮助，逐渐解决了问题。虽然事后看起来都是些小问题，但一不注意确实是满满的坑和套路啊。所以决定写个博记录下我们小组的踩坑经历（同时给咱的小组说句大家都辛苦啦~ ）<br><br><br><br><br><br></p><hr><h2 id="安装配置MySQL环境"><a href="#安装配置MySQL环境" class="headerlink" title="安装配置MySQL环境"></a>安装配置MySQL环境</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;这里我用的是mysql（5.6版），安装包和教程以及对应的一会会用到的mysql-connector-java-5.6-bin.jar都上传百度网盘了，如果需要的小伙伴可以点击<br><a href="https://pan.baidu.com/s/1M7j6yPav5-kRF2fCxZ5Rxg" target="_blank" rel="noopener">链接</a>下载</p><p><br>提取码：0whm<br><br>附上明文链接：<a href="https://pan.baidu.com/s/1M7j6yPav5-kRF2fCxZ5Rxg" target="_blank" rel="noopener">https://pan.baidu.com/s/1M7j6yPav5-kRF2fCxZ5Rxg</a><br><br> 放上链接二维码:  </p><br><p><img src="/images/android_Jdbc_Mysql/baidu_mysql.png" alt="二维码"></p><br>&nbsp;&nbsp;&nbsp;&nbsp;详细的MySql的安装我就不再赘述了，链接里的文档中有的。<h3 id="配置mysql配置文件"><a href="#配置mysql配置文件" class="headerlink" title="配置mysql配置文件"></a>配置mysql配置文件</h3><p>在配置文件中末尾增加</p><p>bind-address=0.0.0.0</p><p>然后重新启动mysql服务（右键我的电脑，管理，服务，找到mysql，右键重启），执行service mysql restart。</p><p><img src="/images/android_Jdbc_Mysql/my_default_ini.png" alt="mysql配置文件"></p><p>这样主要是让外部可以访问到Mysql，因为安卓虚拟机是非本地的实际上，所以之前我们连不上的主要原因也在这。</p><p>关于更多的配置Mysql的外网访问权限的配置，请参照cxin917博主的<a href="https://blog.csdn.net/cxin917/article/details/76686227" target="_blank" rel="noopener">设置Mysql5.6允许外网访问详细流程</a> 博客内容<br><br><br><br>同时，也特别感谢博文内容让我们小组摆脱了连接本地数据库无法连接上的噩耗，项目才顺利完成</p><h3 id="创建测试用的数据库和表"><a href="#创建测试用的数据库和表" class="headerlink" title="创建测试用的数据库和表"></a>创建测试用的数据库和表</h3><p>创建测试用的数据库和表，数据内容如下</p><p><img src="/images/android_Jdbc_Mysql/mysql_data.png" alt="数据库内数据"></p><h2 id="项目具体操作"><a href="#项目具体操作" class="headerlink" title="项目具体操作"></a>项目具体操作</h2><h3 id="AS创建demo项目Mysql"><a href="#AS创建demo项目Mysql" class="headerlink" title="AS创建demo项目Mysql"></a>AS创建demo项目Mysql</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;需要说一声的是，这里我用的是AS（Android Studio）来写的项目。创建了一个叫mysql的项目，没什么要注意的，基本默认</p><p><br><br></p><h3 id="添加权限"><a href="#添加权限" class="headerlink" title="添加权限"></a>添加权限</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;给demo添加网络访问权限,添加到//android program/app/src/main/AndroidManifest.xml中：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;uses-permission android:name=<span class="string">"android.permission.INTERNET"</span>/&gt;</span><br></pre></td></tr></table></figure><p><br><br><br>AndroidManifest.xml文件的详细内容：<br><br></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">"1.0"</span> encoding=<span class="string">"utf-8"</span>?&gt;</span><br><span class="line">&lt;manifest xmlns:android=<span class="string">"http://schemas.android.com/apk/res/android"</span></span><br><span class="line">    package=<span class="string">"com.example.mysql"</span>&gt;</span><br><span class="line"></span><br><span class="line">    &lt;uses-permission android:name=<span class="string">"android.permission.INTERNET"</span>/&gt;</span><br><span class="line"></span><br><span class="line">    &lt;application</span><br><span class="line">        android:allowBackup=<span class="string">"true"</span></span><br><span class="line">        android:icon=<span class="string">"@mipmap/ic_launcher"</span></span><br><span class="line">        android:label=<span class="string">"@string/app_name"</span></span><br><span class="line">        android:roundIcon=<span class="string">"@mipmap/ic_launcher_round"</span></span><br><span class="line">        android:supportsRtl=<span class="string">"true"</span></span><br><span class="line">        android:theme=<span class="string">"@style/AppTheme"</span>&gt;</span><br><span class="line">        &lt;activity android:name=<span class="string">".MainActivity"</span>&gt;</span><br><span class="line">            &lt;intent-filter&gt;</span><br><span class="line">                &lt;action android:name=<span class="string">"android.intent.action.MAIN"</span> /&gt;</span><br><span class="line"></span><br><span class="line">                &lt;category android:name=<span class="string">"android.intent.category.LAUNCHER"</span> /&gt;</span><br><span class="line">            &lt;/intent-filter&gt;</span><br><span class="line">        &lt;/activity&gt;</span><br><span class="line">    &lt;/application&gt;</span><br><span class="line"></span><br><span class="line">&lt;/manifest&gt;</span><br></pre></td></tr></table></figure><h3 id="添加jar连接包"><a href="#添加jar连接包" class="headerlink" title="添加jar连接包"></a>添加jar连接包</h3><p>把在上面的连接中下载下来的mysql-connector-java-5.6-bin.jarj包导入到项目中(ctrl c+v 就可以了)的lib文件夹下面，再右键Add As Library 进行导入。</p><p><img src="/images/android_Jdbc_Mysql/import_1.png" alt="导入jar"></p><p><img src="/images/android_Jdbc_Mysql/import_2.png" alt="Add As Library"></p><p>如果结果在app下的build.gradle中有如下的依赖，那么说明你添加对了：</p><p><img src="/images/android_Jdbc_Mysql/dependencies.png" alt="build.gradle"></p><h3 id="创建连接数据库的类"><a href="#创建连接数据库的类" class="headerlink" title="创建连接数据库的类"></a>创建连接数据库的类</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;创建 DBUtils类，用来连接数据库以及查询数据库内数据<br><br>需要注意的是，在Android开发中通过localhost或127.0.0.1访问本地服务器时，如使用http访问时，会报java.net.ConnectException: localhost/127.0.0.1:3306 -Connection refused异常。</p><p>原因：Android模拟器本身把自己当做了localhost或127.0.0.1，而此时我们又通过localhost或127.0.0.1访问本地服务器，所以会抛出异常了。</p><p>=====&gt;在模拟器上可以用10.0.2.2代替127.0.0.1或localhost即可正常访问或调试</p><p>在这里特别感谢<a href="https://blog.csdn.net/klasoft/article/details/90242976" target="_blank" rel="noopener">auasoft</a>博主提供的参考</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line">package com.example.mysql;</span><br><span class="line"></span><br><span class="line">import android.util.Log;</span><br><span class="line"></span><br><span class="line">import java.sql.Connection;</span><br><span class="line">import java.sql.DriverManager;</span><br><span class="line">import java.sql.PreparedStatement;</span><br><span class="line">import java.sql.ResultSet;</span><br><span class="line">import java.util.HashMap;</span><br><span class="line"></span><br><span class="line">public class DBUtils &#123;</span><br><span class="line"></span><br><span class="line">    private static String driver = <span class="string">"com.mysql.jdbc.Driver"</span>;// MySql驱动</span><br><span class="line"></span><br><span class="line">    private static String user = <span class="string">"root"</span>;// 用户名</span><br><span class="line">    private static String password = <span class="string">""</span>;// 密码</span><br><span class="line"></span><br><span class="line">    private static Connection getConn(String dbName)&#123;</span><br><span class="line"></span><br><span class="line">        Connection connection = null;</span><br><span class="line">        try&#123;</span><br><span class="line">            Class.forName(driver);// 动态加载类</span><br><span class="line">            Log.i(<span class="string">"myql"</span>,<span class="string">"驱动加载成功！"</span>);</span><br><span class="line">            String url = <span class="string">"jdbc:mysql://10.0.2.2:3306/"</span>+dbName+<span class="string">"?useSSL=FALSE"</span>;</span><br><span class="line">            connection = DriverManager.getConnection(url, user, password);</span><br><span class="line">            Log.i(<span class="string">"mysql"</span>,<span class="string">"数据库连接成功！"</span>);</span><br><span class="line">        &#125;catch (Exception e)&#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">return</span> connection;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public static HashMap&lt;String, Object&gt; getInfoByName(String name)&#123;</span><br><span class="line"></span><br><span class="line">        HashMap&lt;String, Object&gt; map = new HashMap&lt;&gt;();</span><br><span class="line">        // 根据数据库名称，建立连接</span><br><span class="line">        Connection connection = getConn(<span class="string">"mydb"</span>);</span><br><span class="line"></span><br><span class="line">        try &#123;</span><br><span class="line">            // mysql简单的查询语句。这里是根据mytable表的username字段来查询某条记录</span><br><span class="line">            String sql = <span class="string">"select * from mytable where username= ?"</span>;</span><br><span class="line">            <span class="keyword">if</span> (connection != null)&#123;// connection不为null表示与数据库建立了连接</span><br><span class="line">                PreparedStatement ps = connection.prepareStatement(sql);</span><br><span class="line">                <span class="keyword">if</span> (ps != null)&#123;</span><br><span class="line">                    // 设置上面的sql语句中的？的值为name</span><br><span class="line">                    ps.setString(1, name);</span><br><span class="line">                    // 执行sql查询语句并返回结果集</span><br><span class="line">                    ResultSet rs = ps.executeQuery();</span><br><span class="line">                    <span class="keyword">if</span> (rs != null)&#123;</span><br><span class="line">                        int count = rs.getMetaData().getColumnCount();</span><br><span class="line">                        Log.e(<span class="string">"DBUtils"</span>,<span class="string">"列总数："</span> + count);</span><br><span class="line">                        <span class="keyword">while</span> (rs.next())&#123;</span><br><span class="line">                            // 注意：下标是从1开始的</span><br><span class="line">                            <span class="keyword">for</span> (int i = 1;i &lt;= count;i++)&#123;</span><br><span class="line">                                String field = rs.getMetaData().getColumnName(i);</span><br><span class="line">                                map.put(field, rs.getString(field));</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                        connection.close();</span><br><span class="line">                        ps.close();</span><br><span class="line">                        <span class="built_in">return</span>  map;</span><br><span class="line">                    &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                        <span class="built_in">return</span> null;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="built_in">return</span>  null;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="built_in">return</span>  null;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;catch (Exception e)&#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            Log.e(<span class="string">"DBUtils"</span>,<span class="string">"异常："</span> + e.getMessage());</span><br><span class="line">            <span class="built_in">return</span> null;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="前端"><a href="#前端" class="headerlink" title="前端"></a>前端</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;写了一个按钮和一个文本框，点击按钮进行数据库查询操作，查询结果放到文本框组件进行展示<br><br></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">"1.0"</span> encoding=<span class="string">"utf-8"</span>?&gt;</span><br><span class="line">&lt;LinearLayout xmlns:android=<span class="string">"http://schemas.android.com/apk/res/android"</span></span><br><span class="line">    xmlns:app=<span class="string">"http://schemas.android.com/apk/res-auto"</span></span><br><span class="line">    xmlns:tools=<span class="string">"http://schemas.android.com/tools"</span></span><br><span class="line">    android:orientation=<span class="string">"vertical"</span></span><br><span class="line">    android:layout_width=<span class="string">"match_parent"</span></span><br><span class="line">    android:layout_height=<span class="string">"match_parent"</span></span><br><span class="line">    tools:context=<span class="string">".MainActivity"</span>&gt;</span><br><span class="line"></span><br><span class="line">    &lt;Button</span><br><span class="line">        android:id=<span class="string">"@+id/btn_get_data"</span></span><br><span class="line">        android:layout_margin=<span class="string">"2dp"</span></span><br><span class="line">        android:textSize=<span class="string">"16sp"</span></span><br><span class="line">        android:text=<span class="string">"获取数据测试"</span></span><br><span class="line">        android:layout_width=<span class="string">"match_parent"</span></span><br><span class="line">        android:layout_height=<span class="string">"wrap_content"</span> /&gt;</span><br><span class="line"></span><br><span class="line">    &lt;TextView</span><br><span class="line">        android:id=<span class="string">"@+id/tv_data"</span></span><br><span class="line">        android:padding=<span class="string">"10dp"</span></span><br><span class="line">        android:textSize=<span class="string">"16sp"</span></span><br><span class="line">        android:gravity=<span class="string">"center"</span></span><br><span class="line">        android:text=<span class="string">"zoey"</span></span><br><span class="line">        android:layout_width=<span class="string">"match_parent"</span></span><br><span class="line">        android:layout_height=<span class="string">"wrap_content"</span> /&gt;</span><br><span class="line"></span><br><span class="line">&lt;/LinearLayout&gt;</span><br></pre></td></tr></table></figure><p>前端界面截图：<br><img src="/images/android_Jdbc_Mysql/layout.png" alt="前端界面"></p><p>这里申明一下，前端完全是从<a href="https://blog.csdn.net/csdnzouqi/article/details/87382143#_271" target="_blank" rel="noopener">邹奇</a>的博客那复制过来的，非常感谢博主博客内容的提醒。后端的也是在这位博主的启发下改动的。再次感谢博主</p><h3 id="MainActivity-java"><a href="#MainActivity-java" class="headerlink" title="MainActivity.java"></a>MainActivity.java</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;这里要注意的是，查询数据库的操作属于耗时操作，Android会要求把这种操作放到子线程里面。同时，组件操作又必须是在主线程中去调用。所以，建议采用Handler消息处理的形式来解决这种要求关系。</p><p>具体的代码内容如下（调用类，查询了username为zhaoyi的用户信息）：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line">package com.example.mysql;</span><br><span class="line"></span><br><span class="line">import androidx.annotation.NonNull;</span><br><span class="line">import androidx.appcompat.app.AppCompatActivity;</span><br><span class="line"></span><br><span class="line">import android.os.Bundle;</span><br><span class="line">import android.os.Handler;</span><br><span class="line">import android.os.Message;</span><br><span class="line">import android.util.Log;</span><br><span class="line">import android.view.View;</span><br><span class="line">import android.widget.Button;</span><br><span class="line">import android.widget.TextView;</span><br><span class="line">import android.widget.Toast;</span><br><span class="line"></span><br><span class="line">import java.sql.Connection;</span><br><span class="line">import java.util.HashMap;</span><br><span class="line"></span><br><span class="line">public class MainActivity extends AppCompatActivity &#123;</span><br><span class="line"></span><br><span class="line">    private Button test4mydql;</span><br><span class="line">    private Thread mydql;</span><br><span class="line">    private Handler mHandler;</span><br><span class="line">    private String s;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    protected void onCreate(Bundle savedInstanceState) &#123;</span><br><span class="line">        super.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line">        test4mydql=(Button)findViewById(R.id.btn_get_data);</span><br><span class="line">        test4mydql.setOnClickListener(new View.<span class="function"><span class="title">OnClickListener</span></span>() &#123;</span><br><span class="line">            @Override</span><br><span class="line">            public void onClick(View view) &#123;</span><br><span class="line">                <span class="built_in">test</span>();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private void <span class="function"><span class="title">test</span></span>()&#123;</span><br><span class="line">        mydql=new Thread(new <span class="function"><span class="title">Runnable</span></span>() &#123;</span><br><span class="line">            @Override</span><br><span class="line">            public void <span class="function"><span class="title">run</span></span>() &#123;</span><br><span class="line">                HashMap&lt;String, Object&gt; map = DBUtils.getInfoByName(<span class="string">"zhaoyi"</span>);</span><br><span class="line">                Message message = new Message();</span><br><span class="line">                <span class="keyword">if</span>(map != null)&#123;</span><br><span class="line">                    s=<span class="string">""</span>;</span><br><span class="line">                    <span class="keyword">for</span> (String key : map.keySet())&#123;</span><br><span class="line">                        s += key + <span class="string">":"</span> + map.get(key) + <span class="string">"\n"</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    message.what = 1;</span><br><span class="line">                    message.obj = s;</span><br><span class="line"></span><br><span class="line">                &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                    message.what = 0;</span><br><span class="line">                    message.obj = <span class="string">"查询结果为空"</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                // 发消息通知主线程更新UI</span><br><span class="line">                mHandler.sendMessage(message);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        mydql.start();</span><br><span class="line">        mHandler=new <span class="function"><span class="title">Handler</span></span>()&#123;</span><br><span class="line">            @Override</span><br><span class="line">            public void handleMessage(@NonNull Message msg) &#123;</span><br><span class="line">                super.handleMessage(msg);</span><br><span class="line">                <span class="keyword">if</span> (msg.what == 0)</span><br><span class="line">                    Log.i(<span class="string">"mysql"</span>,<span class="string">"查询失败"</span>);</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span>(msg.what == 1)&#123;</span><br><span class="line">                    TextView tv=findViewById(R.id.tv_data);</span><br><span class="line">                    tv.setText(s);</span><br><span class="line">                    Log.i(<span class="string">"mysql"</span>,<span class="string">"查询成功"</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                mHandler.removeCallbacks(mydql);</span><br><span class="line">                Log.i(<span class="string">"mysql"</span>,<span class="string">"查询数据库的线程结束"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="运行结果截图"><a href="#运行结果截图" class="headerlink" title="运行结果截图"></a>运行结果截图</h2><p><img src="/images/android_Jdbc_Mysql/res_success.png" alt="虚拟机"></p><p><img src="/images/android_Jdbc_Mysql/res_success_log.png" alt="控制台"></p><h2 id="参考博客"><a href="#参考博客" class="headerlink" title="参考博客"></a>参考博客</h2><p>博主&nbsp;auasoft&nbsp;的<a href="https://blog.csdn.net/klasoft/article/details/90242976" target="_blank" rel="noopener">Android本地默认IP</a></p><p>博主&nbsp;邹奇&nbsp;的<a href="https://blog.csdn.net/csdnzouqi/article/details/87382143#_271" target="_blank" rel="noopener">Android中连接MySql数据库获取数据的简单实现</a></p><p>博主&nbsp;cxin917&nbsp;的<a href="https://blog.csdn.net/cxin917/article/details/76686227" target="_blank" rel="noopener">设置Mysql5.6允许外网访问详细流程</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> 安卓 </tag>
            
            <tag> android studio </tag>
            
            <tag> mysql </tag>
            
            <tag> 线程 </tag>
            
            <tag> jdbc </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于HDOJ 1236题(排名) 的理解(C/C++)</title>
      <link href="/2019/08/12/hdoj1236/"/>
      <url>/2019/08/12/hdoj1236/</url>
      
        <content type="html"><![CDATA[<center><br>&nbsp;&nbsp;&nbsp;&nbsp;简单题，但是还是没有一次A过。有3点，其中2个粗心点在AC代码中备注出来了，另外一点是因为审题不仔细漏看了一点——“若有多名考生分数相同，则按他们考 号的升序输出”，在cmp函数中多加这一条件后AC了……</center><br><br><br><hr><h2 id="题目描述：排名"><a href="#题目描述：排名" class="headerlink" title="题目描述：排名"></a>题目描述：排名</h2><center>排名</center><center>Time Limit: 2000/1000 MS (Java/Others)    <br>Memory Limit: 65536/32768 K (Java/Others)</center><p>Problem Description<br>&nbsp;&nbsp;&nbsp;&nbsp;<br>今天的上机考试虽然有实时的Ranklist，但上面的排名只是根据完成的题数排序，没有考虑<br>每题的分值，所以并不是最后的排名。给定录取分数线，请你写程序找出最后通过分数线的<br>考生，并将他们的成绩按降序打印。 </p><p>Input<br>&nbsp;&nbsp;&nbsp;&nbsp;测试输入包含若干场考试的信息。每场考试信息的第1行给出考生人数N ( 0 &lt; N<br>&lt; 1000 )、考题数M ( 0 &lt; M &lt; = 10 )、分数线（正整数）G；第2行排序给出第1题至第M题的正整数分值；以下N行，每行给出一<br>名考生的准考证号（长度不超过20的字符串）、该生解决的题目总数m、以及这m道题的题号<br>（题目号由1到M）。<br>当读入的考生人数为0时，输入结束，该场考试不予处理</p><p>Output<br>&nbsp;&nbsp;&nbsp;&nbsp;对每场考试，首先在第1行输出不低于分数线的考生人数n，随后n行按分数从高<br>到低输出上线考生的考号与分数，其间用1空格分隔。若有多名考生分数相同，则按他们考<br>号的升序输出。 </p><p>Sample Input<br>4 5 25<br>10 10 12 13 15<br>CS004 3 5 1 3<br>CS003 5 2 4 1 3 5<br>CS002 2 1 2<br>CS001 3 2 3 5<br>1 2 40<br>10 30<br>CS001 1 2<br>2 3 20<br>10 10 10<br>CS000000000000000001 0<br>CS000000000000000002 2 1 2<br>0</p><p>Sample Output<br>3<br>CS003 60<br>CS001 37<br>CS004 37<br>0<br>1<br>CS000000000000000002 20</p><p>Hint</p><p>Huge input, scanf is recommended.</p><p>Author<br>&nbsp;&nbsp;&nbsp;&nbsp;Ignatius.L</p><p>Source<br>&nbsp;&nbsp;&nbsp;&nbsp;浙大计算机研究生复试上机考试-2005年</p><h2 id="原题链接"><a href="#原题链接" class="headerlink" title="原题链接"></a>原题链接</h2><p>More info:<a href="http://acm.hdu.edu.cn/showproblem.php?pid=1236" target="_blank" rel="noopener">Question</a></p><h2 id="Accepted代码"><a href="#Accepted代码" class="headerlink" title="Accepted代码"></a>Accepted代码</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include&lt;iostream&gt;</span></span><br><span class="line"><span class="comment">#include&lt;algorithm&gt;</span></span><br><span class="line"><span class="comment">#include&lt;string&gt; //这里开始忘记加头文件编译错误</span></span><br><span class="line">using namespace std;</span><br><span class="line"></span><br><span class="line">const int maxn = 1001;</span><br><span class="line">typedef struct node &#123;</span><br><span class="line">    string nameId;</span><br><span class="line">    int solNum;</span><br><span class="line">    int qNum[10];</span><br><span class="line">    int res;</span><br><span class="line">&#125;;</span><br><span class="line">node stu[maxn];</span><br><span class="line">int students, questions, grades;</span><br><span class="line">int q_grade[10];</span><br><span class="line">bool cmp(node&amp; a, node&amp; b) &#123;</span><br><span class="line">    <span class="keyword">if</span> (a.res != b.res)<span class="built_in">return</span> (a.res &gt; b.res ? <span class="literal">true</span> : <span class="literal">false</span>);</span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">return</span>(a.nameId&lt;b.nameId? <span class="literal">true</span>:<span class="literal">false</span>);</span><br><span class="line">&#125;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">while</span> (cin &gt;&gt; students) &#123;</span><br><span class="line">        <span class="keyword">if</span> (students == 0) <span class="built_in">break</span>;</span><br><span class="line"></span><br><span class="line">        cin &gt;&gt; questions&gt;&gt;grades;</span><br><span class="line">        <span class="keyword">for</span> (int i = 0; i &lt; questions; i++) cin &gt;&gt; q_grade[i];</span><br><span class="line">        <span class="keyword">for</span> (int i = 0; i &lt; students; i++) &#123;</span><br><span class="line">            cin &gt;&gt; stu[i].nameId &gt;&gt; stu[i].solNum;</span><br><span class="line">            <span class="keyword">for</span> (int j = 0; j &lt; stu[i].solNum; j++) cin &gt;&gt; stu[i].qNum[j];</span><br><span class="line">        &#125;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">        <span class="keyword">for</span> (int i = 0; i &lt; students; i++) &#123;</span><br><span class="line">            stu[i].res = 0;</span><br><span class="line">                <span class="keyword">for</span> (int k = 0; k &lt; stu[i].solNum; k++) &#123;</span><br><span class="line">                    stu[i].res += (q_grade[stu[i].qNum[k]-1]); //这里忘记要-1，结果res（分数）的计算出错</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        sort(stu, stu + students, cmp);</span><br><span class="line"></span><br><span class="line">        int count = 0;</span><br><span class="line">        <span class="keyword">for</span> (int i = 0; i &lt; students; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (stu[i].res &gt;= grades)count++;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        cout &lt;&lt; count &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">for</span> (int i = 0; i &lt; count; i++) cout &lt;&lt; stu[i].nameId &lt;&lt; <span class="string">" "</span> &lt;&lt; stu[i].res&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">return</span> 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="参考博客"><a href="#参考博客" class="headerlink" title="参考博客"></a>参考博客</h2><p>无</p>]]></content>
      
      
      
        <tags>
            
            <tag> hdoj </tag>
            
            <tag> 统计 </tag>
            
            <tag> 浙大计算机研究生复试上机考试-2005年 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于HDOJ 1235题(统计同成绩学生人数) 的理解(C/C++)</title>
      <link href="/2019/08/12/hdoj1235/"/>
      <url>/2019/08/12/hdoj1235/</url>
      
        <content type="html"><![CDATA[<center><br>&nbsp;&nbsp;&nbsp;&nbsp;水题</center><br><br><br><hr><h2 id="题目描述：统计同成绩学生人数"><a href="#题目描述：统计同成绩学生人数" class="headerlink" title="题目描述：统计同成绩学生人数"></a>题目描述：统计同成绩学生人数</h2><center>统计同成绩学生人数</center><center>Time Limit: 2000/1000 MS (Java/Others)    <br>Memory Limit: 65536/32768 K (Java/Others)</center><p>Problem Description<br>&nbsp;&nbsp;&nbsp;&nbsp;读入N名学生的成绩，将获得某一给定分数的学生人数输出。 </p><p>Input<br>&nbsp;&nbsp;&nbsp;&nbsp;测试输入包含若干测试用例，每个测试用例的格式为</p><p>第1行：N<br>第2行：N名学生的成绩，相邻两数字用一个空格间隔。<br>第3行：给定分数</p><p>当读到N=0时输入结束。其中N不超过1000，成绩分数为（包含）0到100之间的一个整数。</p><p>Output<br>&nbsp;&nbsp;&nbsp;&nbsp;对每个测试用例，将获得给定分数的学生人数输出。</p><p>Sample Input<br>3<br>80 60 90<br>60<br>2<br>85 66<br>0<br>5<br>60 75 90 55 75<br>75<br>0</p><p>Sample Output<br>1<br>0<br>2</p><p>Hint<br>Hint</p><p>Huge input, scanf is recommended.</p><p>Author<br>&nbsp;&nbsp;&nbsp;&nbsp;Ignatius.L</p><p>Source<br>&nbsp;&nbsp;&nbsp;&nbsp;浙大计算机研究生复试上机考试-2006年</p><h2 id="原题链接"><a href="#原题链接" class="headerlink" title="原题链接"></a>原题链接</h2><p>More info:<a href="http://acm.hdu.edu.cn/showproblem.php?pid=1235" target="_blank" rel="noopener">Question</a></p><h2 id="Accepted代码"><a href="#Accepted代码" class="headerlink" title="Accepted代码"></a>Accepted代码</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include&lt;iostream&gt;</span></span><br><span class="line"></span><br><span class="line">using namespace std;</span><br><span class="line"></span><br><span class="line">const int maxn = 1001;</span><br><span class="line">int n, grade[maxn],tar,res;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">while</span> (cin &gt;&gt; n) &#123;</span><br><span class="line">        <span class="keyword">if</span> (n == 0) <span class="built_in">break</span>;</span><br><span class="line">        res = 0;</span><br><span class="line">        <span class="keyword">for</span> (int i = 0; i &lt; n; i++) cin &gt;&gt; grade[i];</span><br><span class="line">        cin &gt;&gt; tar;</span><br><span class="line">        <span class="keyword">for</span> (int i = 0; i &lt; n; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (tar == grade[i]) res++;</span><br><span class="line">        &#125;</span><br><span class="line">        cout &lt;&lt; res &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">return</span> 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="参考博客"><a href="#参考博客" class="headerlink" title="参考博客"></a>参考博客</h2><p>无</p>]]></content>
      
      
      
        <tags>
            
            <tag> hdoj </tag>
            
            <tag> 统计 </tag>
            
            <tag> 浙大计算机研究生复试上机考试-2006年 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于HDOJ 1234题(开门人和关门人) 的理解(C/C++)</title>
      <link href="/2019/08/12/hdoj1234/"/>
      <url>/2019/08/12/hdoj1234/</url>
      
        <content type="html"><![CDATA[<center><br>&nbsp;&nbsp;&nbsp;&nbsp;水题，但是一开始直接拿数组装超内存了，后面改成while循环内的两两比较就没事了（因为只用统计一个最大时间，一个最小时间），不过AC代码不够简洁，有更简单明了的同学的话欢迎分享一下下</center><br><br><br><hr><h2 id="题目描述：开门人和关门人"><a href="#题目描述：开门人和关门人" class="headerlink" title="题目描述：开门人和关门人"></a>题目描述：开门人和关门人</h2><center>开门人和关门人</center><center>Time Limit: 2000/1000 MS (Java/Others)    <br>Memory Limit: 65536/32768 K (Java/Others)</center><p>Problem Description<br>&nbsp;&nbsp;每天第一个到机房的人要把门打开，最后一个离开的人要把门关好。现有一堆杂乱的机房签<br>到、签离记录，请根据记录找出当天开门和关门的人。 </p><p>Input<br>&nbsp;&nbsp;测试输入的第一行给出记录的总天数N ( &gt; 0 )。下面列出了N天的记录。<br>每天的记录在第一行给出记录的条目数M ( &gt; 0 )，下面是M行，每行的格式为 </p><p>证件号码 签到时间 签离时间 </p><p>其中时间按“小时:分钟:秒钟”（各占2位）给出，证件号码是长度不超过15的字符串。</p><p>Output<br>&nbsp;&nbsp;对每一天的记录输出1行，即当天开门和关门人的证件号码，中间用1空格分隔。<br>注意：在裁判的标准测试输入中，所有记录保证完整，每个人的签到时间在签离时间之前，<br>且没有多人同时签到或者签离的情况。</p><p>Sample Input<br>3<br>1<br>ME3021112225321 00:00:00 23:59:59<br>2<br>EE301218 08:05:35 20:56:35<br>MA301134 12:35:45 21:40:42<br>3<br>CS301111 15:30:28 17:00:10<br>SC3021234 08:00:00 11:25:25<br>CS301133 21:45:00 21:58:40</p><p>Sample Output<br>ME3021112225321 ME3021112225321<br>EE301218 MA301134<br>SC3021234 CS301133</p><p>Author<br>&nbsp;&nbsp;Ignatius.L</p><p>Source<br>&nbsp;&nbsp;浙大计算机研究生复试上机考试-2005年</p><h2 id="原题链接"><a href="#原题链接" class="headerlink" title="原题链接"></a>原题链接</h2><p>More info:<a href="http://acm.hdu.edu.cn/showproblem.php?pid=1234" target="_blank" rel="noopener">Question</a></p><h2 id="Accepted代码"><a href="#Accepted代码" class="headerlink" title="Accepted代码"></a>Accepted代码</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include&lt;iostream&gt;</span></span><br><span class="line"><span class="comment">#include&lt;string&gt;</span></span><br><span class="line">using namespace std;</span><br><span class="line">const int maxn = 2;</span><br><span class="line">typedef struct node &#123;</span><br><span class="line">    string nameID;</span><br><span class="line">    int a_h, a_m, a_s;</span><br><span class="line">    int l_h, l_m, l_s;</span><br><span class="line">&#125;;</span><br><span class="line">node arrive_, leave_;</span><br><span class="line">void cmp_a(node&amp; a, node&amp; b) &#123;</span><br><span class="line">    <span class="keyword">if</span> (a.a_h &lt; b.a_h) &#123; arrive_ = a; <span class="built_in">return</span>; &#125;</span><br><span class="line">    <span class="keyword">if</span> (a.a_h &gt; b.a_h) &#123; arrive_ = b; <span class="built_in">return</span>; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (a.a_h == b.a_h &amp;&amp; a.a_m &lt; b.a_m) &#123; arrive_ = a; <span class="built_in">return</span>; &#125;</span><br><span class="line">    <span class="keyword">if</span> (a.a_h == b.a_h &amp;&amp; a.a_m &gt; b.a_m) &#123; arrive_ = b; <span class="built_in">return</span>; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (a.a_h == b.a_h &amp;&amp; a.a_m == b.a_m &amp;&amp; a.a_s &lt; b.a_s) &#123; arrive_ = a; <span class="built_in">return</span>; &#125;</span><br><span class="line">    <span class="keyword">if</span> (a.a_h == b.a_h &amp;&amp; a.a_m == b.a_m &amp;&amp; a.a_s &gt; b.a_s) &#123; arrive_ = b; <span class="built_in">return</span>; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">void cmp_l(node&amp; a, node&amp; b) &#123;</span><br><span class="line">    <span class="keyword">if</span> (a.l_h &gt; b.l_h) &#123; leave_ = a; <span class="built_in">return</span>; &#125;</span><br><span class="line">    <span class="keyword">if</span> (a.l_h &lt; b.l_h) &#123; leave_ = b; <span class="built_in">return</span>; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (a.l_h == b.l_h &amp;&amp; a.l_m &gt; b.l_m) &#123; leave_ = a; <span class="built_in">return</span>; &#125;</span><br><span class="line">    <span class="keyword">if</span> (a.l_h == b.l_h &amp;&amp; a.l_m &lt; b.l_m) &#123; leave_ = b; <span class="built_in">return</span>; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (a.l_h == b.l_h &amp;&amp; a.l_m == b.l_m &amp;&amp; a.l_s &gt; b.l_s) &#123; leave_ = a; <span class="built_in">return</span>; &#125;</span><br><span class="line">    <span class="keyword">if</span> (a.l_h == b.l_h &amp;&amp; a.l_m == b.l_m &amp;&amp; a.l_s &lt; b.l_s) &#123; leave_ = b; <span class="built_in">return</span>; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">return</span> ;</span><br><span class="line">&#125;</span><br><span class="line">node stu[maxn];</span><br><span class="line">int t, n;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">    char tmp;</span><br><span class="line">    cin &gt;&gt; t;</span><br><span class="line">    <span class="keyword">while</span> (t--) &#123;</span><br><span class="line">        cin &gt;&gt; n;</span><br><span class="line">        int i = 0;</span><br><span class="line">        cin &gt;&gt; stu[i].nameID &gt;&gt; stu[i].a_h &gt;&gt; tmp &gt;&gt; stu[i].a_m &gt;&gt; tmp &gt;&gt; stu[i].a_s &gt;&gt; stu[i].l_h &gt;&gt; tmp &gt;&gt; stu[i].l_m &gt;&gt; tmp &gt;&gt; stu[i].l_s;</span><br><span class="line">        arrive_ = leave_ = stu[0];</span><br><span class="line">        <span class="keyword">while</span> (--n) &#123;</span><br><span class="line">            i = 1;</span><br><span class="line">            cin &gt;&gt; stu[i].nameID &gt;&gt; stu[i].a_h &gt;&gt; tmp &gt;&gt; stu[i].a_m &gt;&gt; tmp &gt;&gt; stu[i].a_s  &gt;&gt; stu[i].l_h &gt;&gt; tmp &gt;&gt; stu[i].l_m &gt;&gt; tmp &gt;&gt; stu[i].l_s;</span><br><span class="line">            cmp_a(arrive_,stu[1]);</span><br><span class="line">            cmp_l(leave_,stu[1]);</span><br><span class="line">        &#125;</span><br><span class="line">        cout &lt;&lt; arrive_.nameID &lt;&lt; <span class="string">" "</span> &lt;&lt; leave_.nameID;</span><br><span class="line">        cout &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">return</span> 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="参考博客"><a href="#参考博客" class="headerlink" title="参考博客"></a>参考博客</h2><p>无</p>]]></content>
      
      
      
        <tags>
            
            <tag> hdoj </tag>
            
            <tag> 字符串 </tag>
            
            <tag> 时间比较 </tag>
            
            <tag> 统计 </tag>
            
            <tag> 浙大计算机研究生复试上机考试-2005年 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于HDOJ 1219题(AC Me) 的理解(C/C++)</title>
      <link href="/2019/08/12/hdoj1219/"/>
      <url>/2019/08/12/hdoj1219/</url>
      
        <content type="html"><![CDATA[<center><br>&nbsp;&nbsp;&nbsp;&nbsp;水题，但是注意下要求，每个实例后要求多空一行，最开始提交的代码就因为少空了一行所以WA，还是要注意下的</center><br><br><br><hr><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><center>AC Me</center><center>Time Limit: 2000/1000 MS (Java/Others)    <br>Memory Limit: 65536/32768 K (Java/Others)<br>Total Submission(s): 26816    <br>Accepted Submission(s): 10767</center><p>Problem Description<br>&nbsp;&nbsp;Ignatius is doing his homework now. The teacher gives him some articles and asks him to tell how many times each letter appears.</p><p>&nbsp;&nbsp;It’s really easy, isn’t it? So come on and AC ME.</p><p>Input<br>&nbsp;&nbsp;Each article consists of just one line, and all the letters are in lowercase. You just have to count the number of each letter, so do not pay attention to other characters. The length of article is at most 100000. Process to the end of file.</p><p>&nbsp;&nbsp;Note: the problem has multi-cases, and you may use “while(gets(buf)){…}” to process to the end of file.</p><p>Output<br>&nbsp;&nbsp;For each article, you have to tell how many times each letter appears. The output format is like “X:N”. </p><p>&nbsp;&nbsp;Output a blank line after each test case. More details in sample output.</p><p>Sample Input<br>hello, this is my first acm contest!<br>work hard for hdu acm.</p><p>Sample Output<br>a:1<br>b:0<br>c:2<br>d:0<br>e:2<br>f:1<br>g:0<br>h:2<br>i:3<br>j:0<br>k:0<br>l:2<br>m:2<br>n:1<br>o:2<br>p:0<br>q:0<br>r:1<br>s:4<br>t:4<br>u:0<br>v:0<br>w:0<br>x:0<br>y:1<br>z:0</p><p>a:2<br>b:0<br>c:1<br>d:2<br>e:0<br>f:1<br>g:0<br>h:2<br>i:0<br>j:0<br>k:1<br>l:0<br>m:1<br>n:0<br>o:2<br>p:0<br>q:0<br>r:3<br>s:0<br>t:0<br>u:1<br>v:0<br>w:1<br>x:0<br>y:0<br>z:0</p><p>Author<br>&nbsp;&nbsp;Ignatius.L</p><p>Source<br>&nbsp;&nbsp;杭州电子科技大学第三届程序设计大赛</p><h2 id="原题链接"><a href="#原题链接" class="headerlink" title="原题链接"></a>原题链接</h2><p>More info:<a href="http://acm.hdu.edu.cn/showproblem.php?pid=1219" target="_blank" rel="noopener">Question</a></p><h2 id="gets-函数（复习）"><a href="#gets-函数（复习）" class="headerlink" title="gets()函数（复习）"></a>gets()函数（复习）</h2><p>&nbsp;&nbsp;gets的函数原型是：</p><p>char &nbsp;* &nbsp; gets(char * &nbsp; buffer);</p><p>功能：从std&nbsp;in流中读取字符串，直至接受到换行符或EOF时停止，并将读取的结果存放在buffer指针所指向的字符数组中。换行符不作为读取串的内容，读取的换行符被转换为null值，并由此来结束字符串。</p><p>返回值：读入成功，返回与参数buffer相同的指针；读入过程中遇到EOF(End-of-File)或发生错误，返回NULL指针。</p><h2 id="Accepted代码"><a href="#Accepted代码" class="headerlink" title="Accepted代码"></a>Accepted代码</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include&lt;iostream&gt;</span></span><br><span class="line"><span class="comment">#include&lt;stdio.h&gt;</span></span><br><span class="line"><span class="comment">#include&lt;string&gt;</span></span><br><span class="line">using namespace std;</span><br><span class="line">char s[100001];</span><br><span class="line">string az = <span class="string">"abcdefghijklmnopqrstuvwxyz"</span>;</span><br><span class="line">int num[26];</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">while</span> (gets(s)) &#123;</span><br><span class="line">        memset(num, 0, sizeof(num));</span><br><span class="line">        <span class="keyword">for</span> (int i = 0; i &lt; strlen(s); i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (int j = 0; j &lt; 26; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (s[i] == az[j]) &#123;</span><br><span class="line">                    num[j]++;</span><br><span class="line">                    <span class="built_in">continue</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (int i = 0; i &lt; 26; i++) &#123;</span><br><span class="line">            cout &lt;&lt; az[i] &lt;&lt; <span class="string">":"</span> &lt;&lt; num[i] &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">        cout &lt;&lt; endl;//第一次没A过就因为少了这一行</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">return</span> 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="参考博客"><a href="#参考博客" class="headerlink" title="参考博客"></a>参考博客</h2>]]></content>
      
      
      
        <tags>
            
            <tag> hdoj </tag>
            
            <tag> 字符串 </tag>
            
            <tag> gets函数 </tag>
            
            <tag> 统计 </tag>
            
            <tag> 杭州电子科技大学第三届程序设计大赛 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于HDOJ 1205题(吃糖果) 的理解(C/C++)</title>
      <link href="/2019/08/11/hdoj1205/"/>
      <url>/2019/08/11/hdoj1205/</url>
      
        <content type="html"><![CDATA[<br>&nbsp;&nbsp;&nbsp;&nbsp;好吧，拿到这个题的时候并没有考虑到抽屉的思想，之前也没遇到过关于抽屉（鸽巢）原理（原谅我题做少了，算法数据结构什么的太弱鸡）。<a href="https://www.cnblogs.com/claireyuancy/p/6796245.html" target="_blank" rel="noopener">然后默默地打开了百度……</a><br>&nbsp;&nbsp;&nbsp;&nbsp;emmm？抽屉原理？？什么鬼<br>&nbsp;&nbsp;&nbsp;&nbsp;好吧，所以最后AC之后来记录一下，当个笔记的形式吧<hr><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><center>吃糖果</center><br>Time Limit: 6000/3000 MS (Java/Others)    Memory Limit: 65535/32768 K (Java/Others)Total Submission(s): 54502    Accepted Submission(s): 15562<p>Problem Description<br>HOHO，终于从Speakless手上赢走了所有的糖果，是Gardon吃糖果时有个特殊的癖好，就是不喜欢将一样的糖果放在一起吃，喜欢先吃一种，下一次吃另一种，这样；可是Gardon不知道是否存在一种吃糖果的顺序使得他能把所有糖果都吃完？请你写个程序帮忙计算一下。</p><p>Input<br>第一行有一个整数T，接下来T组数据，每组数据占2行，第一行是一个整数N（0&lt;N&lt;=1000000)，第二行是N个数，表示N种糖果的数目Mi(0&lt;Mi&lt;=1000000)。</p><p>Output<br>对于每组数据，输出一行，包含一个”Yes”或者”No”。</p><p>Sample Input<br>2<br>3<br>4 1 1<br>5<br>5 4 3 2 1</p><p>Sample Output<br>No<br>Yes</p><p>Hint<br>Hint</p><p>Please use function scanf</p><p>Author<br>Gardon</p><p><br><br></p><hr><h2 id="原题链接"><a href="#原题链接" class="headerlink" title="原题链接"></a>原题链接</h2><p>More info:<a href="http://acm.hdu.edu.cn/showproblem.php?pid=1205" target="_blank" rel="noopener">Question</a></p><br><hr><h2 id="抽屉原理"><a href="#抽屉原理" class="headerlink" title="抽屉原理"></a>抽屉原理</h2><p><br>以下来自<a href="https://baike.baidu.com/item/%E6%8A%BD%E5%B1%89%E5%8E%9F%E7%90%86/233776?fr=aladdin" target="_blank" rel="noopener">百度百科</a><br><br><br>桌上有十个苹果，要把这十个苹果放到九个抽屉里，无论怎样放，我们会发现至少会有一个抽屉里面放两个苹果。这一现象就是我们所说的“抽屉原理”。 </p><p>抽屉原理的一般含义为：“如果每个抽屉代表一个集合，每一个苹果就可以代表一个元素，假如有n+1个元素放到n个集合中去，其中必定有一个集合里至少有两个元素。” </p><p>抽屉原理有时也被称为鸽巢原理。</p><h3 id="第一抽屉原理"><a href="#第一抽屉原理" class="headerlink" title="第一抽屉原理"></a>第一抽屉原理</h3><p>原理1： 把多于n+1个的物体放到n个抽屉里，则至少有一个抽屉里的东西不少于两件。</p><p>证明（反证法）：如果每个抽屉至多只能放进一个物体，那么物体的总数至多是n×1，而不是题设的n+k(k≥1)，故不可能。<br><br><br><br><br>原理2 ：把多于mn(m乘n)+1（n不为0）个的物体放到n个抽屉里，则至少有一个抽屉里有不少于（m+1）的物体。</p><p>证明（反证法）：若每个抽屉至多放进m个物体,那么n个抽屉至多放进mn个物体,与题设不符，故不可能。<br><br><br><br><br>原理3 ：把无穷多件物体放入n个抽屉，则至少有一个抽屉里 有无穷个物体。<br><br><br><br><br><br><br><br>原理1 、2 、3都是第一抽屉原理的表述。</p><h3 id="第二抽屉原理"><a href="#第二抽屉原理" class="headerlink" title="第二抽屉原理"></a>第二抽屉原理</h3><p>把（mn－1）个物体放入n个抽屉中，其中必有一个抽屉中至多有（m—1）个物体(例如，将3×5-1=14个物体放入5个抽屉中，则必定有一个抽屉中的物体数少于等于3-1=2)。</p><hr><h2 id="Accepted代码"><a href="#Accepted代码" class="headerlink" title="Accepted代码"></a>Accepted代码</h2><p>思路的话，重点在于把最大的那一种糖果单独拉出来，把它当做抽屉，那么只要剩余的糖果总数不少于抽屉数-1，那么就可以依照从大到小的顺序，依次放进抽屉，在满足条件要求下，也就是在相邻糖果不同的前提下放完（吃完）这些糖果了。由于抽屉是最大的，所以第一轮放入以内总能放完第二大的糖果，也就是说第二大的糖果不可能出现在第三轮放入时，所以第二大的糖果不可能相邻，第三大的糖果同第二 &nbsp; …… &nbsp;如此，最后放完之后可以把放在抽屉之内的糖果看成是抽屉之间的隔板，隔板彼此之间相邻的不可能同种类，抽屉不可能相邻（因为有隔板），以上，满足条件啦。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include&lt;iostream&gt;</span></span><br><span class="line"><span class="comment">#include&lt;algorithm&gt;</span></span><br><span class="line">using namespace std;</span><br><span class="line">int n, ans[1000005],t;</span><br><span class="line">bool cmp(int a, int b) &#123; <span class="built_in">return</span> (a &gt; b ? <span class="literal">true</span> : <span class="literal">false</span>); &#125;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">    cin &gt;&gt; t;</span><br><span class="line">    <span class="keyword">while</span> (t--) &#123;</span><br><span class="line">        long long int sum = 0;</span><br><span class="line">        cin &gt;&gt; n;</span><br><span class="line">        <span class="keyword">for</span> (int i = 0; i &lt; n; i++) &#123;</span><br><span class="line">            cin &gt;&gt; ans[i];</span><br><span class="line">            sum += ans[i];</span><br><span class="line">        &#125;</span><br><span class="line">        sort(ans, ans + n,cmp);</span><br><span class="line">        <span class="keyword">if</span> (sum - ans[0] &gt;= ans[0]-1) cout &lt;&lt; <span class="string">"Yes"</span> &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">else</span> cout &lt;&lt; <span class="string">"No"</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">return</span> 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><br><hr><h2 id="参考博客-claireyuancy"><a href="#参考博客-claireyuancy" class="headerlink" title="参考博客  claireyuancy "></a>参考博客 <a href="https://www.cnblogs.com/claireyuancy/p/6796245.html" target="_blank" rel="noopener"> claireyuancy </a></h2><p>以下是<a href="https://www.cnblogs.com/claireyuancy/p/6796245.html" target="_blank" rel="noopener"> claireyuancy </a>老哥的代码：<br><br></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include&lt;stdio.h&gt;</span></span><br><span class="line"><span class="comment">#include&lt;string.h&gt;</span></span><br><span class="line"><span class="comment">#include&lt;stdlib.h&gt;</span></span><br><span class="line"><span class="comment">#include&lt;math.h&gt;</span></span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">    __int64 i,n,sum,max,temp;</span><br><span class="line">    int T;</span><br><span class="line">    scanf(<span class="string">"%d"</span>,&amp;T);</span><br><span class="line">    <span class="keyword">while</span>(T--)</span><br><span class="line">    &#123;</span><br><span class="line">        sum=0;max=-1;</span><br><span class="line">        scanf(<span class="string">"%I64d"</span>,&amp;n);</span><br><span class="line">        <span class="keyword">for</span>(i=0;    i&lt;n;    i++)</span><br><span class="line">        &#123;</span><br><span class="line">            scanf(<span class="string">"%I64d"</span>,&amp;temp);</span><br><span class="line">            sum+=temp;</span><br><span class="line">            <span class="keyword">if</span>(temp&gt;=max)</span><br><span class="line">            &#123;</span><br><span class="line">                max=temp;    </span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(max-(sum-max)&lt;=1) <span class="built_in">printf</span>(<span class="string">"Yes\n"</span>);</span><br><span class="line">        <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"No\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">return</span> 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><br><br><br><br><br></p>]]></content>
      
      
      
        <tags>
            
            <tag> hdoj </tag>
            
            <tag> 抽屉原理 </tag>
            
            <tag> 鸽巢原理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于HDOJ 1202题(绩点计算) 的理解(C/C++)</title>
      <link href="/2019/08/10/hdoj1202/"/>
      <url>/2019/08/10/hdoj1202/</url>
      
        <content type="html"><![CDATA[<br>&nbsp;&nbsp;&nbsp;&nbsp;题目有很多的小细节，一不注意就容易中招。感谢 <a href="https://blog.csdn.net/qq_39562952/article/details/78853316" target="_blank" rel="noopener"> 摆渡过江</a>的代码点醒。<br>&nbsp;&nbsp;&nbsp;&nbsp;首先，区间不是全整数，而是存在有小数的分数情况的，并且，举例来说，如89.9是属于3点绩点。<br>&nbsp;&nbsp;&nbsp;&nbsp;再然后是，缺考情况不能把学分加和，可能脑袋有点晕了，之前WA代码就是不管三七二十一，直接把所有学分加和了。<br><br><hr><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><center>The calculation of GPA</center><br>Problem Description每学期的期末，大家都会忙于计算自己的平均成绩，这个成绩对于评奖学金是直接有关的。国外大学都是计算GPA(grade point average) 又称GPR(grade point ratio)，即成绩点数与学分的加权平均值来代表一个学生的成绩的。那么如何来计算GPA呢？ <p>一般大学采用之计分法 </p><p>A90 - 100 4 点<br>B80 - 89 3 点<br>C70 - 79 2 点<br>D60 - 69 1 点<br>E0 - 59 0 点 </p><p>例如：某位学生修习三门课，其课目、学分及成绩分别为：<br>英文：三学分、92 分；化学：五学分、80 分；数学：二学分、60分，则GPA的算法如下： </p><p>科目 学分 分数 点数 分数×点数<br>英文  3    92    4     12<br>化学  5    80    3     15<br>数学  2    60    1      2<br>合计  10   29<br>29/10=2.9<br>2.9即为某生的GPA<br>下面有请你写一个用于计算GPA的程序。</p><p>Input<br>包含多组数据，每组数据的第一行有一个数N，接下来N行每行表示一门成绩。每行有两个实型的数 s,p，s表示这门课的学分,p表示该学生的成绩（百分制）。如果p=-1则说明该学生这门课缺考，是不应该计算在内的。</p><p>Output<br>对每组数据输出一行，表示该学生的GPA，保留两位小数。如果GPA不存在，输出-1。</p><p>Sample Input<br>3<br>3 92<br>5 80<br>2 60</p><p>Sample Output<br>2.90</p><p>Author<br>Speakless<br><br><br></p><hr><h2 id="原题链接"><a href="#原题链接" class="headerlink" title="原题链接"></a>原题链接</h2><p>More info:<a href="http://acm.hdu.edu.cn/showproblem.php?pid=1202" target="_blank" rel="noopener">Question</a></p><br><hr><h2 id="cout控制小数点后位数（复习）"><a href="#cout控制小数点后位数（复习）" class="headerlink" title="cout控制小数点后位数（复习）"></a>cout控制小数点后位数（复习）</h2><p>头文件为：iomanip<br><br>函数为：fixed &lt;&lt; setprecision(2)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include&lt;iomanip&gt;</span></span><br><span class="line">cout &lt;&lt; fixed &lt;&lt; setprecision(2) &lt;&lt; 变量&lt;&lt; endl;</span><br></pre></td></tr></table></figure><hr><h2 id="Accepted代码"><a href="#Accepted代码" class="headerlink" title="Accepted代码"></a>Accepted代码</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include&lt;iostream&gt;</span></span><br><span class="line"><span class="comment">#include&lt;iomanip&gt;</span></span><br><span class="line">using namespace std;</span><br><span class="line">int n;</span><br><span class="line">double s, p;</span><br><span class="line">double sum_s, sum_sp;</span><br><span class="line">int <span class="function"><span class="title">main</span></span>() &#123;</span><br><span class="line">    <span class="keyword">while</span> (cin &gt;&gt; n) &#123;</span><br><span class="line">        sum_s = sum_sp = 0.0;//学分总和 学分*点数总和</span><br><span class="line">        <span class="keyword">while</span> (n--)</span><br><span class="line">        &#123;</span><br><span class="line">            cin &gt;&gt; s &gt;&gt; p;</span><br><span class="line">            <span class="keyword">if</span> ((int)p + 1 == 0)  //缺考</span><br><span class="line">                <span class="built_in">continue</span>;</span><br><span class="line">            sum_s += s;</span><br><span class="line">            <span class="keyword">if</span> (p &gt;= 90)</span><br><span class="line">                sum_sp += 4 * s;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (p &gt;= 80)</span><br><span class="line">                sum_sp += 3 * s;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (p &gt;= 70)</span><br><span class="line">                sum_sp += 2 * s;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (p &gt;= 60)</span><br><span class="line">                sum_sp += s;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (sum_s != 0)</span><br><span class="line">            cout &lt;&lt; fixed &lt;&lt; setprecision(2) &lt;&lt; sum_sp / sum_s &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            cout &lt;&lt; -1 &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">return</span> 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><br><hr><h2 id="参考博客"><a href="#参考博客" class="headerlink" title="参考博客"></a>参考博客</h2><p>我的AC代码和参考博客的代码差不多，只是习惯了用c++的输入输出，以下是<a href="https://blog.csdn.net/qq_39562952/article/details/78853316" target="_blank" rel="noopener"> 摆渡过江 </a>老哥的代码（c语言）：<br><br></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include &lt;iostream&gt;  </span></span><br><span class="line"><span class="comment">#include &lt;stdio.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;stdlib.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;string.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;math.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;algorithm&gt;</span></span><br><span class="line"><span class="comment">#include &lt;vector&gt;</span></span><br><span class="line">using namespace std;</span><br><span class="line"> </span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">    int n;</span><br><span class="line">    double s,p;</span><br><span class="line">    double sum1,sum2;</span><br><span class="line">    <span class="keyword">while</span>(scanf(<span class="string">"%d"</span>,&amp;n)!=EOF)</span><br><span class="line">    &#123;</span><br><span class="line">        sum1=sum2=0.0;</span><br><span class="line">        <span class="keyword">while</span>(n--)</span><br><span class="line">        &#123;</span><br><span class="line">            scanf(<span class="string">"%lf%lf"</span>,&amp;s,&amp;p);</span><br><span class="line">            <span class="keyword">if</span>((int)p+1==0)</span><br><span class="line">                <span class="built_in">continue</span>;</span><br><span class="line">            sum1+=s;</span><br><span class="line">            <span class="keyword">if</span>(p&gt;=90)</span><br><span class="line">                sum2+=4*s;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(p&gt;=80)</span><br><span class="line">                sum2+=3*s;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(p&gt;=70)</span><br><span class="line">                sum2+=2*s;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(p&gt;=60)</span><br><span class="line">                sum2+=s;</span><br><span class="line">             </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(sum1!=0)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%.2lf\n"</span>,sum2/sum1);</span><br><span class="line">        <span class="keyword">else</span> </span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"-1\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">        </span><br><span class="line">    <span class="built_in">return</span> 0;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><br><br><br><br><br></p>]]></content>
      
      
      
        <tags>
            
            <tag> hdoj </tag>
            
            <tag> cout输出格式 </tag>
            
            <tag> 粗心 </tag>
            
            <tag> 细节 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于HDOJ 1201题(18岁生日) 的理解(C/C++)</title>
      <link href="/2019/08/10/hdoj1201/"/>
      <url>/2019/08/10/hdoj1201/</url>
      
        <content type="html"><![CDATA[<br>&nbsp;&nbsp;&nbsp;&nbsp;刚开始没搞懂这个没有18岁生日是什么鬼，我还以为是说到今天为止是没满18岁呢，但是天知道这个题规定的今年是哪一年啊，我也不知道这个题什么时候出的啊。<a href="https://www.cnblogs.com/hxsyl/archive/2012/07/02/2572410.html" target="_blank" rel="noopener">所以百度了一下</a>。结果是说生日恰好在2月29号，然后就在18周岁那一年是没有生日的，所以称之为没有18岁。<br>&nbsp;&nbsp;&nbsp;&nbsp;原因的话很简单，如果你在2月29出生，那么他一定出生在闰年，所以该年除以4肯定整除，然后18年过后，因为18不是4的整数倍，所以18岁那一年必定不是闰年，故此没有18岁生日；反之，如果不在2月29日出生，那么，不好意思，<del>你是辣鸡(我也是，不要怕)</del>一定会有18岁生日的那一天。<br>&nbsp;&nbsp;&nbsp;&nbsp;ps.&nbsp;&nbsp;&nbsp;&nbsp;=2.29 + ！=2.29 ==> R(实数)<br><br><br>&nbsp;&nbsp;&nbsp;&nbsp;也感谢博客的思路，本来还准备老老实实地去定义一下string，然后再慢慢划分年月日呢，结果搞到一个小技巧，用一个char型装一下'-'就好了，不用费劲去划分string了，真好~<hr><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><center>18岁生日</center><br>Time Limit: 2000/1000 MS (Java/Others)    Memory Limit: 65536/32768 K (Java/Others)Total Submission(s): 43014    Accepted Submission(s): 13725<p>Problem Description<br>Gardon的18岁生日就要到了，他当然很开心，可是他突然想到一个问题，是不是每个人从出生开始，到达18岁生日时所经过的天数都是一样的呢？似乎并不全都是这样，所以他想请你帮忙计算一下他和他的几个朋友从出生到达18岁生日所经过的总天数，让他好来比较一下。</p><p>Input<br>一个数T，后面T行每行有一个日期，格式是YYYY-MM-DD。如我的生日是1988-03-07。</p><p>Output<br>T行，每行一个数，表示此人从出生到18岁生日所经过的天数。如果这个人没有18岁生日，就输出-1。</p><p>Sample Input<br>1<br>1988-03-07</p><p>Sample Output<br>6574</p><p>Author<br>Gardon</p><p>Source<br>Gardon-DYGG Contest 2<br><br><br></p><hr><h2 id="原题链接"><a href="#原题链接" class="headerlink" title="原题链接"></a>原题链接</h2><p>More info:<a href="http://acm.hdu.edu.cn/showproblem.php?pid=1201" target="_blank" rel="noopener">Question</a></p><br><hr><h2 id="小技巧"><a href="#小技巧" class="headerlink" title="小技巧"></a>小技巧</h2><p>用一个char型装一下’-‘就好，不用费劲去定义一个string然后在慢慢划分string</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">char tmp;</span><br><span class="line">int year, mon, day;</span><br><span class="line">cin &gt;&gt; year &gt;&gt; tmp &gt;&gt; mon &gt;&gt; tmp &gt;&gt; day;</span><br></pre></td></tr></table></figure><hr><h2 id="Accepted代码"><a href="#Accepted代码" class="headerlink" title="Accepted代码"></a>Accepted代码</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include&lt;iostream&gt;</span></span><br><span class="line"><span class="comment">#include&lt;string&gt;</span></span><br><span class="line">using namespace std;</span><br><span class="line">bool isR(int year) &#123;</span><br><span class="line">    <span class="keyword">if</span> (year % 4 == 0 &amp;&amp; year % 100 != 0 ) <span class="built_in">return</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">if</span> (year % 100 == 0 &amp;&amp; year % 400 == 0) <span class="built_in">return</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="built_in">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">char tmp;</span><br><span class="line">int year, mon, day;</span><br><span class="line">int month[12] = &#123; 31,28,31,30,31,30,31,31,30,31,31,30 &#125;;</span><br><span class="line">int <span class="function"><span class="title">main</span></span>()&#123;</span><br><span class="line">    int T;</span><br><span class="line">    cin &gt;&gt; T;</span><br><span class="line">    <span class="keyword">while</span> (T--) &#123;</span><br><span class="line">        cin &gt;&gt; year &gt;&gt; tmp &gt;&gt; mon &gt;&gt; tmp &gt;&gt; day;</span><br><span class="line">        <span class="keyword">if</span> (mon == 2 &amp;&amp; day == 29) cout &lt;&lt; -1 &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            int Cyear_left_days = -1;</span><br><span class="line">            //出生当年的计算</span><br><span class="line">            //闰年&amp;&amp;生日早于2.29</span><br><span class="line">            <span class="keyword">if</span> (isR(year) &amp;&amp; (mon&lt;2||(mon==2&amp;&amp;day&lt;29)) ) &#123;</span><br><span class="line">                Cyear_left_days = month[mon - 1] - day;</span><br><span class="line">                <span class="keyword">for</span> (int i = mon; i &lt; 12; i++) &#123;</span><br><span class="line">                    Cyear_left_days += month[i];</span><br><span class="line">                &#125;</span><br><span class="line">                Cyear_left_days++;</span><br><span class="line">            &#125;</span><br><span class="line">            //否则</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                Cyear_left_days = month[mon - 1] - day;</span><br><span class="line">                <span class="keyword">for</span> (int i = mon; i &lt; 12; i++) &#123;</span><br><span class="line">                    Cyear_left_days += month[i];</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            int myear=year+1;</span><br><span class="line">            <span class="keyword">while</span> (myear-year &lt; 18) &#123;</span><br><span class="line">                <span class="keyword">if</span> (isR(myear)) Cyear_left_days += 366;</span><br><span class="line">                <span class="keyword">else</span> Cyear_left_days += 365;</span><br><span class="line">                myear++;</span><br><span class="line">            &#125;</span><br><span class="line">            //18岁那年的计算</span><br><span class="line">            <span class="keyword">if</span> (isR(myear) &amp;&amp; mon &gt; 2) &#123;</span><br><span class="line">                <span class="keyword">for</span> (int i = 0; i &lt; mon-1; i ++ )</span><br><span class="line">                    Cyear_left_days += month[i];</span><br><span class="line">                Cyear_left_days++;</span><br><span class="line">                Cyear_left_days += day;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">for</span> (int i = 0; i &lt; mon-1; i++)</span><br><span class="line">                    Cyear_left_days += month[i];</span><br><span class="line">                Cyear_left_days += day;</span><br><span class="line">            &#125;</span><br><span class="line">            cout &lt;&lt; Cyear_left_days &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">return</span> 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><br><hr><h2 id="参考博客-火星十一郎"><a href="#参考博客-火星十一郎" class="headerlink" title="参考博客  火星十一郎 "></a>参考博客 <a href="https://www.cnblogs.com/hxsyl/archive/2012/07/02/2572410.html" target="_blank" rel="noopener"> 火星十一郎 </a></h2><p>以下是<a href="https://www.cnblogs.com/hxsyl/archive/2012/07/02/2572410.html" target="_blank" rel="noopener"> 火星十一郎 </a>老哥的代码：<br><br></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">/*</span><br><span class="line">如果出生在2月29号，那么也就说出生那一年一定是闰年，通过简单证明可得：闰年+18=非闰年</span><br><span class="line">*/</span><br><span class="line"><span class="comment">#include &lt;iostream&gt;</span></span><br><span class="line">using namespace std;</span><br><span class="line">bool is_leap(int n)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span>((n%4==0 &amp;&amp; n%100!=0) || n%400==0)</span><br><span class="line">        <span class="built_in">return</span> 1;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">return</span> 0;</span><br><span class="line">&#125;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">    int T;int year, month, day;int run=0;</span><br><span class="line">    char tmp;</span><br><span class="line">    scanf(<span class="string">"%d"</span>, &amp;T);</span><br><span class="line">    <span class="keyword">while</span>(T--)</span><br><span class="line">    &#123;</span><br><span class="line">        run=0;</span><br><span class="line">        // 先开始我还傻傻的去用string表示...麻烦...</span><br><span class="line">        cin &gt;&gt; year &gt;&gt; tmp &gt;&gt; month &gt;&gt; tmp &gt;&gt; day;</span><br><span class="line">        <span class="keyword">if</span>(month==2 &amp;&amp; day==29)</span><br><span class="line">        &#123;</span><br><span class="line">            cout &lt;&lt; -1 &lt;&lt; endl;</span><br><span class="line">            <span class="built_in">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(month&gt;=3)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span>(int i=1; i&lt;=18; ++i)</span><br><span class="line">                <span class="keyword">if</span>(is_leap(year+i))</span><br><span class="line">                    run++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span>(int i=1; i&lt;=18; ++i)</span><br><span class="line">                <span class="keyword">if</span>( is_leap(year+i-1))</span><br><span class="line">                    run++;</span><br><span class="line">        &#125;</span><br><span class="line">        cout &lt;&lt; 365*18+run &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">return</span> 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><br><br><br><br><br></p>]]></content>
      
      
      
        <tags>
            
            <tag> hdoj </tag>
            
            <tag> 闰年 </tag>
            
            <tag> 日期计算 </tag>
            
            <tag> 小技巧 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于HDOJ 1197题(进制转换) 的理解(C/C++)</title>
      <link href="/2019/08/10/hdoj1197/"/>
      <url>/2019/08/10/hdoj1197/</url>
      
        <content type="html"><![CDATA[<br><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Specialized Four-Digit Numbers</p><p>Time Limit: 2000/1000 MS (Java/Others)    Memory Limit: 65536/32768 K (Java/Others)<br>Total Submission(s): 10438    Accepted Submission(s): 7566</p><p>Problem Description<br>Find and list all four-digit numbers in decimal notation that have the property that the sum of its four digits equals the sum of its digits when represented in hexadecimal (base 16) notation and also equals the sum of its digits when represented in duodecimal (base 12) notation.</p><p>For example, the number 2991 has the sum of (decimal) digits 2+9+9+1 = 21. Since 2991 = 1* 1728 + 8 * 144 + 9 * 12 + 3, its duodecimal representation is 1893(12), and these digits also sum up to 21. But in hexadecimal 2991 is BAF16, and 11+10+15 = 36, so 2991 should be rejected by your program.<br><br><br>The next number (2992), however, has digits that sum to 22 in all three representations (including BB016), so 2992 should be on the listed output. (We don’t want decimal numbers with fewer than four digits - excluding leading zeroes - so that 2992 is the first correct answer.)<br><br><br>Input<br>There is no input for this problem.<br><br><br>Output<br>Your output is to be 2992 and all larger four-digit numbers that satisfy the requirements (in strictly increasing order), each on a separate line with no leading or trailing blanks, ending with a new-line character. There are to be no blank lines in the output. The first few lines of the output are shown below.<br><br><br>Sample Input<br>There is no input for this problem.<br><br><br><br>Sample Output<br>2992<br>2993<br>2994<br>2995<br>2996<br>2997<br>2998<br>2999<br><br><br><br>Source<br>Pacific Northwest 2004<br><br><br></p><h2 id="原题链接"><a href="#原题链接" class="headerlink" title="原题链接"></a>原题链接</h2><p>More info:<a href="http://acm.hdu.edu.cn/showproblem.php?pid=1197" target="_blank" rel="noopener">Question</a></p><br><h2 id="Accepted代码"><a href="#Accepted代码" class="headerlink" title="Accepted代码"></a>Accepted代码</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include&lt;iostream&gt;</span></span><br><span class="line">using namespace std;</span><br><span class="line">/*input 10进制数a，</span><br><span class="line">*进制b</span><br><span class="line">*output  b进制下该数的各项和*/</span><br><span class="line">int count_(int a, int b) &#123;</span><br><span class="line">    int x=a,res = 0;</span><br><span class="line">    <span class="keyword">while</span> ( x &gt;= b ) &#123;</span><br><span class="line">        res += (x%b);</span><br><span class="line">        x /= b;</span><br><span class="line">    &#125;</span><br><span class="line">    res += x;</span><br><span class="line">    <span class="built_in">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line">int <span class="function"><span class="title">main</span></span>()&#123;</span><br><span class="line">    <span class="keyword">for</span> (int i = 2992; i &lt; 10000; i++)</span><br><span class="line">        <span class="keyword">if</span> (count_(i, 10) == count_(i, 12) &amp;&amp; count_(i, 12) == count_(i, 16) )</span><br><span class="line">            cout &lt;&lt; i &lt;&lt; endl;</span><br><span class="line">    <span class="built_in">return</span> 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><br><hr><h2 id="参考博客-weirdo-coder"><a href="#参考博客-weirdo-coder" class="headerlink" title="参考博客 weirdo_coder"></a>参考博客 <a href="https://blog.csdn.net/weirdo_coder/article/details/82630564" target="_blank" rel="noopener">weirdo_coder</a></h2><p><br><br><br><br><br></p>]]></content>
      
      
      
        <tags>
            
            <tag> hdoj </tag>
            
            <tag> 进制转换 </tag>
            
            <tag> 各项和 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于HDOJ 1196题(Lowest Bit（最低位数）) 的理解(C/C++)</title>
      <link href="/2019/08/09/hdoj1196/"/>
      <url>/2019/08/09/hdoj1196/</url>
      
        <content type="html"><![CDATA[<br><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Lowest Bit</p><p>Time Limit: 2000/1000 MS (Java/Others)    Memory Limit: 65536/32768 K (Java/Others)<br>Total Submission(s): 15618    Accepted Submission(s): 11170</p><p>Problem Description<br>Given an positive integer A (1 &lt;= A &lt;= 100), output the lowest bit of A.</p><p>For example, given A = 26, we can write A in binary form as 11010, so the lowest bit of A is 10, so the output should be 2.</p><p>Another example goes like this: given A = 88, we can write A in binary form as 1011000, so the lowest bit of A is 1000, so the output should be 8.</p><p>Input<br>Each line of input contains only an integer A (1 &lt;= A &lt;= 100). A line containing “0” indicates the end of input, and this line is not a part of the input data.</p><p>Output<br>For each A in the input, output a line containing only its lowest bit.</p><p>Sample Input<br>26<br>88<br>0</p><p>Sample Output<br>2<br>8</p><p>Author<br>SHI, Xiaohan</p><p>Source<br>Zhejiang University Local Contest 2005</p><br><h2 id="原题链接"><a href="#原题链接" class="headerlink" title="原题链接"></a>原题链接</h2><p>More info:<a href="http://acm.hdu.edu.cn/showproblem.php?pid=1196" target="_blank" rel="noopener">Question</a></p><br>## Accepted代码<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include&lt;iostream&gt;</span></span><br><span class="line"><span class="comment">#include&lt;cstdio&gt;</span></span><br><span class="line"><span class="comment">#include&lt;string&gt;</span></span><br><span class="line"><span class="comment">#include&lt;cstring&gt;</span></span><br><span class="line"><span class="comment">#include&lt;algorithm&gt;</span></span><br><span class="line"><span class="comment">#include&lt;cmath&gt;</span></span><br><span class="line">using namespace std;</span><br><span class="line">int n;</span><br><span class="line">int <span class="function"><span class="title">main</span></span>() &#123;</span><br><span class="line">    <span class="keyword">while</span> (cin &gt;&gt; n) &#123;</span><br><span class="line">        <span class="keyword">if</span> (n == 0)<span class="built_in">break</span>;</span><br><span class="line">        int m = 1;</span><br><span class="line">        <span class="keyword">while</span> (n % 2 == 0) &#123;</span><br><span class="line">            n /= 2;</span><br><span class="line">            m *= 2;</span><br><span class="line">        &#125;</span><br><span class="line">        cout &lt;&lt; m &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">return</span> 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><br><br><br><br><br><br>]]></content>
      
      
      
        <tags>
            
            <tag> hdoj </tag>
            
            <tag> 进制转换 </tag>
            
            <tag> 思路 </tag>
            
            <tag> Zhejiang University Local Contest 2005 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于HDOJ 1157题(Who&#39;s in the Middle（中位数）) 的理解(C/C++)</title>
      <link href="/2019/08/09/hdoj1157/"/>
      <url>/2019/08/09/hdoj1157/</url>
      
        <content type="html"><![CDATA[<p>就是道水题，结果自己想太多，还去考虑去重后排序。。。其实就是规定的奇数n求中间数的大水题</p><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Who’s in the Middle</p><p>Problem Description<br>FJ is surveying his herd to find the most average cow. He wants to know how much milk this ‘median’ cow gives: half of the cows give as much or more than the median; half give as much or less. </p><p>Given an odd number of cows N (1 &lt;= N &lt; 10,000) and their milk output (1..1,000,000), find the median amount of milk given such that at least half the cows give the same amount of milk or more and at least half give the same or less.</p><p>Input</p><ul><li><p>Line 1: A single integer N </p></li><li><p>Lines 2..N+1: Each line contains a single integer that is the milk output of one cow.</p></li></ul><p>Output</p><ul><li>Line 1: A single integer that is the median milk output.</li></ul><p>Sample Input<br>5<br>2<br>4<br>1<br>3<br>5</p><p>Sample Output<br>3</p><p>Hint</p><p>INPUT DETAILS: </p><p>Five cows with milk outputs of 1..5 </p><p>OUTPUT DETAILS: </p><p>1 and 2 are below 3; 4 and 5 are above 3.</p><p>Source<br>USACO 2004 November</p><h2 id="原题链接"><a href="#原题链接" class="headerlink" title="原题链接"></a>原题链接</h2><p>More info:<a href="http://acm.hdu.edu.cn/showproblem.php?pid=1157" target="_blank" rel="noopener">Question</a></p><h2 id="数组去重"><a href="#数组去重" class="headerlink" title="数组去重"></a>数组去重</h2><p>去重函数unique</p><p>头文件：algorithm，所以别忘了加上一句：#include&lt; algorithm &gt;<br><br><br>unique的作用就是”去除”数组中相邻的重复元素，所以一般乱序去重都会配合sort()一起使用</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include &lt;iostream&gt;</span></span><br><span class="line"><span class="comment">#include &lt;algorithm&gt;</span></span><br><span class="line"></span><br><span class="line">using namespace std;</span><br><span class="line"></span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">    //a 去重是和旁边的元素对比去重</span><br><span class="line">    int a[10] = &#123;0,1,2,3,4,5,6,7,8,9 &#125;;</span><br><span class="line">    a[3] = a[5] = a[7] = 2;</span><br><span class="line">    int len = unique(a, a + 10) - a;</span><br><span class="line">    cout &lt;&lt; len &lt;&lt; endl;        //len = 9</span><br><span class="line">    <span class="keyword">for</span> (int i = 0; i &lt; len; i++)</span><br><span class="line">        cout &lt;&lt; a[i] &lt;&lt; <span class="string">" "</span>;  //a = 0 1 2 4 2 6 2 8 9</span><br><span class="line">    cout &lt;&lt; endl;</span><br><span class="line">    //b 所以一般去重要配合sort使用</span><br><span class="line">    int b[10] = &#123; 0,1,2,3,4,5,6,7,8,9 &#125;;</span><br><span class="line">    b[3] = b[5] = b[7] = 2;</span><br><span class="line">    sort(b, b + 10);</span><br><span class="line">    int len_ = unique(b, b + 10) - b;</span><br><span class="line">    cout &lt;&lt; len_ &lt;&lt; endl;        //len_ = 7</span><br><span class="line">    <span class="keyword">for</span> (int i = 0; i &lt; len_; i++)</span><br><span class="line">        cout &lt;&lt; b[i] &lt;&lt; <span class="string">" "</span>;  //b = 0 1 2 4 6 8 9</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">return</span> 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><h2 id="Accepted代码"><a href="#Accepted代码" class="headerlink" title="Accepted代码"></a>Accepted代码</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include&lt;iostream&gt;</span></span><br><span class="line"><span class="comment">#include&lt;string&gt;</span></span><br><span class="line"><span class="comment">#include&lt;cstring&gt;</span></span><br><span class="line"><span class="comment">#include&lt;algorithm&gt;</span></span><br><span class="line"><span class="comment">#include&lt;cmath&gt;</span></span><br><span class="line">using namespace std;</span><br><span class="line">int n;</span><br><span class="line">int ans[10001];</span><br><span class="line">int <span class="function"><span class="title">main</span></span>() &#123;</span><br><span class="line">    <span class="keyword">while</span> (cin &gt;&gt; n) &#123;</span><br><span class="line">        <span class="keyword">for</span> (int i = 0; i &lt; n; i++)cin &gt;&gt; ans[i];</span><br><span class="line"></span><br><span class="line">        sort(ans, ans + n);</span><br><span class="line">        //int len=unique(ans, ans + n) - ans;</span><br><span class="line">    </span><br><span class="line">        cout &lt;&lt; ans[n / 2 ] &lt;&lt; endl;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">return</span> 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="参考博客"><a href="#参考博客" class="headerlink" title="参考博客"></a>参考博客</h2><p>非常感谢<a href="https://blog.csdn.net/qq_41139830/article/details/80631988" target="_blank" rel="noopener">qq_41139830</a>的博文</p>]]></content>
      
      
      
        <tags>
            
            <tag> hdoj </tag>
            
            <tag> 数组去重 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于HDOJ 1106题(排序) 的理解(C/C++)</title>
      <link href="/2019/08/09/hdoj1106/"/>
      <url>/2019/08/09/hdoj1106/</url>
      
        <content type="html"><![CDATA[<h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;排序</p><p>Time Limit: 2000/1000 MS (Java/Others)    Memory Limit: 65536/32768 K (Java/Others)<br>Total Submission(s): 83068    Accepted Submission(s): 25068</p><p>Problem Description<br>输入一行数字，如果我们把这行数字中的‘5’都看成空格，那么就得到一行用空格分割的若干非负整数（可能有些整数以‘0’开头，这些头部的‘0’应该被忽略掉，除非这个整数就是由若干个‘0’组成的，这时这个整数就是0）。</p><p>你的任务是：对这些分割得到的整数，依从小到大的顺序排序输出。</p><p>Input<br>输入包含多组测试用例，每组输入数据只有一行数字（数字之间没有空格），这行数字的长度不大于1000。  </p><p>输入数据保证：分割得到的非负整数不会大于100000000；输入数据不可能全由‘5’组成。</p><p>Output<br>对于每个测试用例，输出分割得到的整数排序的结果，相邻的两个整数之间用一个空格分开，每组输出占一行。</p><p>Sample Input<br>0051231232050775</p><p>Sample Output<br>0 77 12312320</p><p>Source<br>POJ</p><h2 id="原题链接"><a href="#原题链接" class="headerlink" title="原题链接"></a>原题链接</h2><p>More info:<a href="http://acm.hdu.edu.cn/showproblem.php?pid=1106" target="_blank" rel="noopener">Question</a></p><h2 id="最后一个数的输出不能带空格！"><a href="#最后一个数的输出不能带空格！" class="headerlink" title="最后一个数的输出不能带空格！"></a>最后一个数的输出不能带空格！</h2><h2 id="最后一个数的输出不能带空格！！"><a href="#最后一个数的输出不能带空格！！" class="headerlink" title="最后一个数的输出不能带空格！！"></a>最后一个数的输出不能带空格！！</h2><h2 id="最后一个数的输出不能带空格！！！"><a href="#最后一个数的输出不能带空格！！！" class="headerlink" title="最后一个数的输出不能带空格！！！"></a>最后一个数的输出不能带空格！！！</h2><h2 id="Accepted代码"><a href="#Accepted代码" class="headerlink" title="Accepted代码"></a>Accepted代码</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include&lt;iostream&gt;</span></span><br><span class="line"><span class="comment">#include&lt;string&gt;</span></span><br><span class="line"><span class="comment">#include&lt;cstring&gt;</span></span><br><span class="line"><span class="comment">#include&lt;algorithm&gt;</span></span><br><span class="line"><span class="comment">#include&lt;cmath&gt;</span></span><br><span class="line">using namespace std;</span><br><span class="line">string input;</span><br><span class="line">int res[1001];</span><br><span class="line">string ans[1001];</span><br><span class="line">int <span class="function"><span class="title">main</span></span>() &#123;</span><br><span class="line">    int k=0;</span><br><span class="line">    <span class="keyword">while</span> (cin &gt;&gt; input) &#123;</span><br><span class="line"></span><br><span class="line">        k = 0;</span><br><span class="line">        <span class="keyword">for</span> (int i = 0; i &lt; 1001; i++) ans[i] = <span class="string">""</span>;</span><br><span class="line">        <span class="keyword">for</span> (int i = 0; i &lt; input.size(); i++) &#123;</span><br><span class="line">            int count=0;</span><br><span class="line">            <span class="keyword">if</span> (i &amp;&amp; input[i] == <span class="string">'5'</span> &amp;&amp; input[i-1]!=<span class="string">'5'</span>) &#123; k++; <span class="built_in">continue</span>; &#125;</span><br><span class="line">            <span class="keyword">if</span>(input[i] != <span class="string">'5'</span>) ans[k] += input[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (input[input.size() - 1] == <span class="string">'5'</span>) k--;</span><br><span class="line">        //<span class="keyword">for</span> (int i = 0; i &lt;= k; i++) cout &lt;&lt; ans[i] &lt;&lt; <span class="string">" "</span>;cout &lt;&lt; endl;</span><br><span class="line">        int kk = k+1;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (int j = 0; j &lt; kk;j++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (int i = 0; i &lt; (int)ans[j].size(); i++) &#123;</span><br><span class="line">                <span class="keyword">if</span>(ans[j]!=<span class="string">""</span>)    </span><br><span class="line">                    res[j] += ((int)ans[j][i] - <span class="string">'0'</span>)*pow(10,ans[j].size()-i-1);</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        sort(res, res + kk);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span> (int i = 0; i &lt; kk; i++) &#123; <span class="keyword">if</span> (i != kk - 1)  cout &lt;&lt; res[i] &lt;&lt; <span class="string">" "</span>; <span class="keyword">else</span> cout &lt;&lt; res[i]; &#125;</span><br><span class="line">        cout &lt;&lt; endl;</span><br><span class="line">        memset(res,0,sizeof(res));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">return</span> 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> hdoj </tag>
            
            <tag> 粗心 </tag>
            
            <tag> 细节 </tag>
            
            <tag> 空格 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于HDOJ 1098题(Ignatius&#39;s puzzle) 的理解(C/C++)</title>
      <link href="/2019/08/09/hdoj1098/"/>
      <url>/2019/08/09/hdoj1098/</url>
      
        <content type="html"><![CDATA[<h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Ignatius’s puzzle</p><p>Time Limit: 2000/1000 MS (Java/Others)    Memory Limit: 65536/32768 K (Java/Others)<br>Total Submission(s): 12827    Accepted Submission(s): 9025</p><p>Problem Description<br>&nbsp;&nbsp;&nbsp;&nbsp;Ignatius is poor at math,he falls across a puzzle problem,so he has no choice but to appeal to Eddy. this problem describes that:f(x)=5<em>x^13+13</em>x^5+k<em>a</em>x,input a nonegative integer k(k&lt;10000),to find the minimal nonegative integer a,make the arbitrary integer x ,65|f(x)if<br>no exists that a,then print “no”.</p><p>Input<br>&nbsp;&nbsp;&nbsp;&nbsp;The input contains several test cases. Each test case consists of a nonegative integer k, More details in the Sample Input.</p><p>Output<br>&nbsp;&nbsp;&nbsp;&nbsp;The output contains a string “no”,if you can’t find a,or you should output a line contains the a.More details in the Sample Output.</p><p>Sample Input<br>11<br>100<br>9999</p><p>Sample Output<br>22<br>no<br>43</p><p>Author<br>&nbsp;&nbsp;&nbsp;&nbsp;eddy</p><h2 id="原题链接"><a href="#原题链接" class="headerlink" title="原题链接"></a>原题链接</h2><p>More info:<a href="http://acm.hdu.edu.cn/showproblem.php?pid=1098" target="_blank" rel="noopener">Question</a></p><h2 id="数学归纳法（第一数学归纳法）"><a href="#数学归纳法（第一数学归纳法）" class="headerlink" title="数学归纳法（第一数学归纳法）"></a>数学归纳法（第一数学归纳法）</h2><p><br>1）当n=初始值时（一般为1或者0或者2之类的）,显然成立.<br><br>2）假设当n=k时（把式中n换成k,写出来）成立,<br><br> 则当n=k+1时,（这步比较困难,化简步骤往往繁琐,考试时可以直接写结果)该式也成立.<br><br> 由（1）（2）得,原命题对任意正整数均成立</p><h2 id="排列组合（高中内容，快忘了……）"><a href="#排列组合（高中内容，快忘了……）" class="headerlink" title="排列组合（高中内容，快忘了……）"></a>排列组合（高中内容，快忘了……）</h2><p>排列A<sub>n</sub> <sup>m</sup> = n×（n-1）.（n-m+1）=n!/（n-m）!(n为下标,m为上标,以下同)</p><p>组合C<sub>n</sub> <sup>m</sup> = P(n,m)/P(m,m) =n!/(m!（n-m）!)；</p><p>例如A<sub>4</sub> <sup>2</sup> = 4!/2!=4 * 3=12<br><br>C<sub>4</sub> <sup>2</sup> = 4!/(2! * 2!)=4 * 3/(2 * 1)=6</p><h2 id="Accepted代码"><a href="#Accepted代码" class="headerlink" title="Accepted代码"></a>Accepted代码</h2><p>代码很简单：<br><br>但是要先了解如果k * a+18能整除65，那么f（x）就能整除65</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include&lt;iostream&gt;</span></span><br><span class="line">using namespace std;</span><br><span class="line">int k, a;</span><br><span class="line">int <span class="function"><span class="title">main</span></span>() &#123;</span><br><span class="line">    <span class="keyword">while</span> (cin &gt;&gt; k) &#123;</span><br><span class="line">        a = -1;</span><br><span class="line">        <span class="keyword">for</span> (int i = 0; i &lt; 66; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> ((18 + k * i )% 65 == 0) &#123;</span><br><span class="line">                a = i;</span><br><span class="line">                <span class="built_in">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (a != -1) cout &lt;&lt; a &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">else</span> cout &lt;&lt; <span class="string">"no"</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">return</span> 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>数学归纳法应用:<br><br>证明：当k * a+18能整除65时，f（x）能整除65<br><br>假设f（x）能整除65</p><p>f（x）= 5 * x <sup>13</sup>&gt; + 13 * x <sup>5</sup>&gt; + k * a * x</p><p>则</p><p>f（x+1）= 5 * (x+1) <sup>13</sup>+ 13 * (x+1) <sup>5</sup> + k * a *  (x+1)</p><p>按二项式展开:<br><br>f（x+1）=5 <em>（C<sub>13</sub> <sup>13</sup> * X<sup>13</sup> +C<sub>13</sub> <sup>12</sup> * X <sup>12</sup> +C<sub>13</sub> <sup>11</sup> * X <sup>11</sup> +……+C<sub>13</sub> <sup>0</sup> * x <sup>0</sup>）+ 13</em> (C<sub>5</sub> <sup>5</sup> * X <sup>5</sup> +C<sub>5</sub> <sup>4</sup> * X <sup>4</sup> +…+ C <sub>5</sub> <sup>0</sup> * x<sup>0</sup>)+k * a *  (x+1)</p><p><br> =f(x)+13 <em>（C<sub>13</sub><sup>12</sup> * X<sup>12</sup>+C<sub>13</sub><sup>11 </sup></em> X<sup>11</sup>+……+C<sub>13</sub><sup>0</sup> <em>x<sup>0</sup>)+5</em>(C<sub>5</sub><sup>4</sup> * X<sup>4</sup>+…+C<sub>5</sub><sup>0</sup> * x<sup>0</sup>)+k * a</p><p><br>=f(x)+5<em>（X<sup>5</sup>+C<sub>5</sub><sup>4</sup> * X<sup>4</sup>+…+C<sub>5</sub><sup>1</sup> * x<sup>1</sup>）+13</em>(C<sub>13</sub><sup>12</sup> * X<sup>12</sup>+C<sub>13</sub><sup>11</sup> * X<sup>11</sup>+……+C<sub>13</sub><sup>1</sup> * x<sup>1</sup>）+ k * a+18</p><p><br>(p.s: 18=C<sub>13</sub><sup>1</sup>+C<sub>5</sub><sup>1</sup>)</p><p><br><br>f(x）/65能整除，而多项式5<em>（X<sup>5</sup>+C<sub>5</sub><sup>4</sup> * X<sup>4</sup>+…+C<sub>5</sub><sup>1</sup> * x<sup>1</sup>）+13</em>(C<sub>13</sub><sup>12</sup> * X<sup>12</sup>+C<sub>13</sub><sup>11</sup> * X<sup>11</sup>+……+C<sub>13</sub><sup>1</sup> * x<sup>1</sup>） 也能整除65，<br><br>所以当k * a+18能整除65时即f(x+1)能整除65<br><br>综上所述，当k * a+18能整除65时，f（x）能整除65</p><h2 id="参考博客"><a href="#参考博客" class="headerlink" title="参考博客"></a>参考博客</h2><p>非常感谢<a href="https://blog.csdn.net/qq_38294039/article/details/76386298" target="_blank" rel="noopener">qq_38294039</a>的博文</p>]]></content>
      
      
      
        <tags>
            
            <tag> hdoj </tag>
            
            <tag> 数学归纳法 </tag>
            
            <tag> 排列组合公式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于HDOJ 1076题(An Easy Task(x后第n个闰年)) 的理解(C/C++)</title>
      <link href="/2019/08/09/hdoj1076/"/>
      <url>/2019/08/09/hdoj1076/</url>
      
        <content type="html"><![CDATA[<h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;An Easy Task</p><p>Time Limit: 2000/1000 MS (Java/Others)    Memory Limit: 65536/32768 K (Java/Others)<br>Total Submission(s): 28473    Accepted Submission(s): 18363</p><p>Problem Description<br>&nbsp;&nbsp;&nbsp;&nbsp;Ignatius was born in a leap year, so he want to know when he could hold his birthday party. Can you tell him?</p><p>Given a positive integers Y which indicate the start year, and a positive integer N, your task is to tell the Nth leap year from year Y.</p><p>Note: if year Y is a leap year, then the 1st leap year is year Y.</p><p>Input<br>&nbsp;&nbsp;&nbsp;&nbsp;The input contains several test cases. The first line of the input is a single integer T which is the number of test cases. T test cases follow.<br>Each test case contains two positive integers Y and N(1&lt;=N&lt;=10000).</p><p>Output<br>&nbsp;&nbsp;&nbsp;&nbsp;For each test case, you should output the Nth leap year from year Y.</p><p>Sample Input<br>3<br>2005 25<br>1855 12<br>2004 10000</p><p>Sample Output<br>2108<br>1904<br>43236</p><p>&nbsp;&nbsp;&nbsp;&nbsp;Hint</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;We call year Y a leap year only if (Y%4==0 &amp;&amp; Y%100!=0) or Y%400==0.</p><p>Author<br>&nbsp;&nbsp;&nbsp;&nbsp;Ignatius.L</p><h2 id="原题链接"><a href="#原题链接" class="headerlink" title="原题链接"></a>原题链接</h2><p>More info:<a href="http://acm.hdu.edu.cn/showproblem.php?pid=1076" target="_blank" rel="noopener">Question</a></p><h2 id="Accepted代码"><a href="#Accepted代码" class="headerlink" title="Accepted代码"></a>Accepted代码</h2><p>直接暴力解，不超时。另外，闰年的计算按照题目要求的做，即认为满足(Y%4==0 &amp;&amp; Y%100!=0)那么Y这年就可以被称为闰年。即不考虑大年份闰年的判别情况<br><br>但是实际上，<a href="https://baike.baidu.com/item/%E9%97%B0%E5%B9%B4/27098?fr=aladdin#8" target="_blank" rel="noopener">闰年</a>分为普通闰年和世纪闰年。<br><br>普通闰年:公历年份是4的倍数的，一般是闰年。（如2004年就是闰年）；<br><br>世纪闰年:公历年份是整百数的，必须是400的倍数才是闰年（如1900年不是世纪闰年，2000年是世纪闰年）;<br><br>大年份闰年：对于数值很大的年份，这年如果能整除3200，并且能整除172800则是闰年。如172800年是闰年，86400年不是闰年（因为虽然能整除3200，但不能整除172800）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include&lt;iostream&gt;</span></span><br><span class="line">using namespace std;</span><br><span class="line">int isloop(int y) &#123;</span><br><span class="line">    <span class="keyword">if</span> ((y % 4 == 0 &amp;&amp; y % 100 != 0) || (y % 400 == 0)) <span class="built_in">return</span> 1;</span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">return</span> 0;</span><br><span class="line">&#125;</span><br><span class="line">int <span class="function"><span class="title">main</span></span>() &#123;</span><br><span class="line">    int t;</span><br><span class="line">    cin &gt;&gt; t;</span><br><span class="line">    <span class="keyword">while</span> (t--) &#123;</span><br><span class="line">        int year, n;</span><br><span class="line">        cin &gt;&gt; year &gt;&gt; n;</span><br><span class="line">        int nyear = year,count=0;</span><br><span class="line">        <span class="keyword">while</span> (count &lt; n) &#123;</span><br><span class="line">            <span class="keyword">if</span> (isloop(nyear)) &#123;</span><br><span class="line">                count++;</span><br><span class="line">            &#125;</span><br><span class="line">            nyear++;</span><br><span class="line">        &#125;</span><br><span class="line">        cout &lt;&lt; nyear-1 &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">return</span> 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> hdoj </tag>
            
            <tag> 闰年 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于HDOJ 1058题(Humble Numbers(有且仅有质因数2,3,5,7组成的数)) 的理解(C/C++)</title>
      <link href="/2019/08/09/hdoj1058/"/>
      <url>/2019/08/09/hdoj1058/</url>
      
        <content type="html"><![CDATA[<h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Humble Numbers<br>Time Limit: 2000/1000 MS (Java/Others)    Memory Limit: 65536/32768 K (Java/Others)<br>&nbsp;&nbsp;&nbsp;&nbsp;Total Submission(s): 32500    Accepted Submission(s): 14198</p><p>Problem Description<br>&nbsp;&nbsp;&nbsp;&nbsp;A number whose only prime factors are 2,3,5 or 7 is called a humble number. The sequence 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 14, 15, 16, 18, 20, 21, 24, 25, 27, … shows the first 20 humble numbers. </p><p>Write a program to find and print the nth element in this sequence</p><p>Input<br>&nbsp;&nbsp;&nbsp;&nbsp;The input consists of one or more test cases. Each test case consists of one integer n with 1 &lt;= n &lt;= 5842. Input is terminated by a value of zero (0) for n.</p><p>Output<br>&nbsp;&nbsp;&nbsp;&nbsp;For each test case, print one line saying “The nth humble number is number.”. Depending on the value of n, the correct suffix “st”, “nd”, “rd”, or “th” for the ordinal number nth has to be used like it is shown in the sample output.</p><p>Sample Input<br>1<br>2<br>3<br>4<br>11<br>12<br>13<br>21<br>22<br>23<br>100<br>1000<br>5842<br>0</p><p>Sample Output<br>The 1st humble number is 1.<br>The 2nd humble number is 2.<br>The 3rd humble number is 3.<br>The 4th humble number is 4.<br>The 11th humble number is 12.<br>The 12th humble number is 14.<br>The 13th humble number is 15.<br>The 21st humble number is 28.<br>The 22nd humble number is 30.<br>The 23rd humble number is 32.<br>The 100th humble number is 450.<br>The 1000th humble number is 385875.<br>The 5842nd humble number is 2000000000.</p><p>Source<br>&nbsp;&nbsp;&nbsp;&nbsp;University of Ulm Local Contest 1996</p><h2 id="原题链接"><a href="#原题链接" class="headerlink" title="原题链接"></a>原题链接</h2><p>More info:<a href="http://acm.hdu.edu.cn/showproblem.php?pid=1058" target="_blank" rel="noopener">Question</a></p><h2 id="Accepted代码"><a href="#Accepted代码" class="headerlink" title="Accepted代码"></a>Accepted代码</h2><p>重写min函数，用min()来判断4个参数中最小的一个，并且把对应的计数器自加1。然后从2到5842遍历一遍所有的符合要求的Humble Numbers，存进f[]数组中。<br><br>核心在于：<br><br>f[t] = min(2 * f[i], 3 * f[j], 5 * f[k], 7 * f[l]);<br><br>int min(int a, int b, int c, int d)<br>{<br>    int min = a;<br>    if (b &lt; min) min = b;<br>    if (c &lt; min) min = c;<br>    if (d &lt; min) min = d;</p><pre><code>if (a == min) i++;if (b == min) j++;if (c == min) k++;if (d == min) l++;return min;</code></pre><p>}<br><br><br>最后的几句if用于判断n后应该跟st还是nd还是th：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include &lt;iostream&gt;</span></span><br><span class="line"><span class="comment">#include &lt;stdio.h&gt;</span></span><br><span class="line">using namespace std;</span><br><span class="line">int f[5843], n;</span><br><span class="line">int i, j, k, l;</span><br><span class="line"></span><br><span class="line">int min(int a, int b, int c, int d)</span><br><span class="line">&#123;</span><br><span class="line">    int min = a;</span><br><span class="line">    <span class="keyword">if</span> (b &lt; min) min = b;</span><br><span class="line">    <span class="keyword">if</span> (c &lt; min) min = c;</span><br><span class="line">    <span class="keyword">if</span> (d &lt; min) min = d;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (a == min) i++;</span><br><span class="line">    <span class="keyword">if</span> (b == min) j++;</span><br><span class="line">    <span class="keyword">if</span> (c == min) k++;</span><br><span class="line">    <span class="keyword">if</span> (d == min) l++;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">return</span> min;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">    i = j = k = l = 1;</span><br><span class="line">    f[1] = 1;</span><br><span class="line">    <span class="keyword">for</span> (int t = 2; t &lt;= 5842; t++)</span><br><span class="line">    &#123;</span><br><span class="line">        f[t] = min(2 * f[i], 3 * f[j], 5 * f[k], 7 * f[l]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (cin&gt;&gt;n &amp;&amp; n != 0)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (n % 10 == 1 &amp;&amp; n % 100 != 11)</span><br><span class="line">            cout &lt;&lt; <span class="string">"The "</span> &lt;&lt; n &lt;&lt; <span class="string">"st humble number is "</span> &lt;&lt; f[n] &lt;&lt; <span class="string">"."</span> &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (n % 10 == 2 &amp;&amp; n % 100 != 12)</span><br><span class="line">            cout &lt;&lt; <span class="string">"The "</span> &lt;&lt; n &lt;&lt; <span class="string">"nd humble number is "</span> &lt;&lt; f[n] &lt;&lt; <span class="string">"."</span> &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (n % 10 == 3 &amp;&amp; n % 100 != 13)</span><br><span class="line">            cout &lt;&lt; <span class="string">"The "</span> &lt;&lt; n &lt;&lt; <span class="string">"rd humble number is "</span> &lt;&lt; f[n] &lt;&lt; <span class="string">"."</span> &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            cout &lt;&lt; <span class="string">"The "</span> &lt;&lt; n &lt;&lt; <span class="string">"th humble number is "</span> &lt;&lt; f[n] &lt;&lt; <span class="string">"."</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">return</span> 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="参考博客"><a href="#参考博客" class="headerlink" title="参考博客"></a>参考博客</h2><p>非常感谢<a href="https://blog.csdn.net/czkct/article/details/50783605" target="_blank" rel="noopener">寻找小海螺</a>的博文</p>]]></content>
      
      
      
        <tags>
            
            <tag> hdoj </tag>
            
            <tag> 因数分解 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于HDOJ 1048题(The Hardest Problem Ever) 的理解(C/C++)</title>
      <link href="/2019/08/09/hdoj1048/"/>
      <url>/2019/08/09/hdoj1048/</url>
      
        <content type="html"><![CDATA[<h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;The Hardest Problem Ever<br>&nbsp;&nbsp;Time Limit: 2000/1000 MS (Java/Others)    Memory Limit: 65536/32768 K (Java/Others)<br>&nbsp;&nbsp;Total Submission(s): 34272    Accepted Submission(s): 15887</p><p>Problem Description<br>&nbsp;&nbsp;Julius Caesar lived in a time of danger and intrigue. The hardest situation Caesar ever faced was keeping himself alive. In order for him to survive, he decided to create one of the first ciphers. This cipher was so incredibly sound, that no one could figure it out without knowing how it worked.<br>You are a sub captain of Caesar’s army. It is your job to decipher the messages sent by Caesar and provide to your general. The code is simple. For each letter in a plaintext message, you shift it five places to the right to create the secure message (i.e., if the letter is ‘A’, the cipher text would be ‘F’). Since you are creating plain text out of Caesar’s messages, you will do the opposite: </p><p>Cipher text<br>A B C D E F G H I J K L M N O P Q R S T U V W X Y Z</p><p>Plain text<br>V W X Y Z A B C D E F G H I J K L M N O P Q R S T U </p><p>&nbsp;&nbsp;Only letters are shifted in this cipher. Any non-alphabetical character should remain the same, and all alphabetical characters will be upper case.</p><p>Input<br>&nbsp;&nbsp;Input to this problem will consist of a (non-empty) series of up to 100 data sets. Each data set will be formatted according to the following description, and there will be no blank lines separating data sets. All characters will be uppercase. </p><p>A single data set has 3 components: </p><p>Start line - A single line, “START” </p><p>Cipher message - A single line containing from one to two hundred characters, inclusive, comprising a single message from Caesar </p><p>End line - A single line, “END” </p><p>Following the final data set will be a single line, “ENDOFINPUT”.</p><p>Output<br>&nbsp;&nbsp;For each data set, there will be exactly one line of output. This is the original message by Caesar.</p><p>Sample Input<br>START<br>NS BFW, JAJSYX TK NRUTWYFSHJ FWJ YMJ WJXZQY TK YWNANFQ HFZXJX<br>END<br>START<br>N BTZQI WFYMJW GJ KNWXY NS F QNYYQJ NGJWNFS ANQQFLJ YMFS XJHTSI NS WTRJ<br>END<br>START<br>IFSLJW PSTBX KZQQ BJQQ YMFY HFJXFW NX RTWJ IFSLJWTZX YMFS MJ<br>END<br>ENDOFINPUT</p><p>Sample Output<br>&nbsp;&nbsp;IN WAR, EVENTS OF IMPORTANCE ARE THE RESULT OF TRIVIAL CAUSES<br>I WOULD RATHER BE FIRST IN A LITTLE IBERIAN VILLAGE THAN SECOND IN ROME<br>DANGER KNOWS FULL WELL THAT CAESAR IS MORE DANGEROUS THAN HE</p><p>Source<br>&nbsp;&nbsp;South Central USA 2002</p><h2 id="原题链接"><a href="#原题链接" class="headerlink" title="原题链接"></a>原题链接</h2><p>More info:<a href="http://acm.hdu.edu.cn/showproblem.php?pid=1048" target="_blank" rel="noopener">Question</a></p><h2 id="getline-函数"><a href="#getline-函数" class="headerlink" title="getline()函数"></a>getline()函数</h2><p>&nbsp;&nbsp;getline的函数原型是：</p><p>istream&amp; getline ( istream &amp;is , string &amp;str , char delim );</p><p>istream&amp; getline ( istream&amp; , string&amp; );</p><p>功能：将输入流is中读到的字符存入str中（直到遇到终结符delim才结束）。</p><h2 id="gets-函数"><a href="#gets-函数" class="headerlink" title="gets()函数"></a>gets()函数</h2><p>&nbsp;&nbsp;gets的函数原型是：</p><p>char &nbsp;* &nbsp; gets(char * &nbsp; buffer);</p><p>功能：从std&nbsp;in流中读取字符串，直至接受到换行符或EOF时停止，并将读取的结果存放在buffer指针所指向的字符数组中。换行符不作为读取串的内容，读取的换行符被转换为null值，并由此来结束字符串。</p><p>返回值：读入成功，返回与参数buffer相同的指针；读入过程中遇到EOF(End-of-File)或发生错误，返回NULL指针。</p><h2 id="Accepted代码"><a href="#Accepted代码" class="headerlink" title="Accepted代码"></a>Accepted代码</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include&lt;iostream&gt;</span></span><br><span class="line"><span class="comment">#include&lt;string&gt;</span></span><br><span class="line">using namespace std;</span><br><span class="line">string a;</span><br><span class="line">string alp = <span class="string">"ABCDEFGHIJKLMNOPQRSTUVWXYZ"</span>;</span><br><span class="line">void fun(string&amp; x) &#123;</span><br><span class="line">    <span class="keyword">for</span> (int i = 0; i &lt; x.size(); i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (isalpha(x[i])) &#123;</span><br><span class="line">            int k = (x[i] - <span class="string">'A'</span> + 26 - 5) % 26;</span><br><span class="line">            x[i] = alp[k];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">int <span class="function"><span class="title">main</span></span>() &#123;</span><br><span class="line">    <span class="keyword">while</span> (getline(cin, a, <span class="string">'\n'</span>)) &#123;</span><br><span class="line">        <span class="keyword">if</span> (a == <span class="string">"ENDOFINPUT"</span>) <span class="built_in">break</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(a == <span class="string">"START"</span>)</span><br><span class="line">        <span class="keyword">while</span> (1) &#123;</span><br><span class="line">            getline(cin,a);</span><br><span class="line">            <span class="keyword">if</span> (a == <span class="string">"END"</span>) <span class="built_in">break</span>;</span><br><span class="line">            fun(a);</span><br><span class="line">            cout &lt;&lt; a &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">return</span> 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="参考博客"><a href="#参考博客" class="headerlink" title="参考博客"></a>参考博客</h2><p>非常感谢<a href="https://www.cnblogs.com/peaceful-andy/archive/2012/08/21/2649637.html" target="_blank" rel="noopener">peaceful-andy</a>的博文</p>]]></content>
      
      
      
        <tags>
            
            <tag> hdoj </tag>
            
            <tag> 加密 </tag>
            
            <tag> 字符串 </tag>
            
            <tag> gets函数 </tag>
            
            <tag> getline函数 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于HDOJ 1028题(Ignatius and the Princess III(n=哪些正整数相加的可能)) 的理解(C/C++)</title>
      <link href="/2019/08/09/hdoj1028/"/>
      <url>/2019/08/09/hdoj1028/</url>
      
        <content type="html"><![CDATA[<h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>Ignatius and the Princess III<br>&nbsp;&nbsp;Time Limit: 2000/1000 MS (Java/Others)    Memory Limit: 65536/32768 K (Java/Others)<br>&nbsp;&nbsp;Total Submission(s): 28304    Accepted Submission(s): 19440</p><p>Problem Description<br>&nbsp;&nbsp;”Well, it seems the first problem is too easy. I will let you know how foolish you are later.” feng5166 says.<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;”The second problem is, given an positive integer N, we define an equation like this:<br>  N=a[1]+a[2]+a[3]+…+a[m];<br>  a[i]&gt;0,1&lt;=m&lt;=N;<br>&nbsp;&nbsp;My question is how many different equations you can find for a given N.<br>&nbsp;&nbsp;For example, assume N is 4, we can find:<br>  4 = 4;<br>  4 = 3 + 1;<br>  4 = 2 + 2;<br>  4 = 2 + 1 + 1;<br>  4 = 1 + 1 + 1 + 1;<br>so the result is 5 when N is 4. Note that “4 = 3 + 1” and “4 = 1 + 3” is the same in this problem. Now, you do it!”</p><p>Input<br>&nbsp;&nbsp;The input contains several test cases. Each test case contains a positive integer N(1&lt;=N&lt;=120) which is mentioned above. The input is terminated by the end of file.</p><p>Output<br>&nbsp;&nbsp;For each test case, you have to output a line contains an integer P which indicate the different equations you have found.</p><p>Sample Input<br>&nbsp;&nbsp;4<br>&nbsp;&nbsp;10<br>&nbsp;&nbsp;20</p><p>Sample Output<br>&nbsp;&nbsp;5<br>&nbsp;&nbsp;42<br>&nbsp;&nbsp;627</p><p>Author<br>&nbsp;&nbsp;Ignatius.L</p><h2 id="原题链接"><a href="#原题链接" class="headerlink" title="原题链接"></a>原题链接</h2><p>More info:<a href="http://acm.hdu.edu.cn/showproblem.php?pid=1028" target="_blank" rel="noopener">Question</a></p><h2 id="0-1背包"><a href="#0-1背包" class="headerlink" title="0/1背包"></a>0/1背包</h2><h2 id="完全背包"><a href="#完全背包" class="headerlink" title="完全背包"></a>完全背包</h2><h2 id="全背包"><a href="#全背包" class="headerlink" title="全背包"></a>全背包</h2><h2 id="其他背包问题"><a href="#其他背包问题" class="headerlink" title="其他背包问题"></a>其他背包问题</h2><h2 id="Accepted代码"><a href="#Accepted代码" class="headerlink" title="Accepted代码"></a>Accepted代码</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include&lt;iostream&gt;</span></span><br><span class="line"><span class="comment">#include&lt;cstring&gt;</span></span><br><span class="line">using namespace std;</span><br><span class="line">const int maxn = 121;</span><br><span class="line">int res[maxn];</span><br><span class="line">int <span class="function"><span class="title">main</span></span>() &#123;</span><br><span class="line">    int n;</span><br><span class="line">    <span class="keyword">while</span> (cin &gt;&gt; n) &#123;</span><br><span class="line">        memset(res, 0, sizeof(res));</span><br><span class="line">        res[0] = 1;</span><br><span class="line">        <span class="keyword">for</span> (int i = 1; i &lt;= n; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (int j = i; j &lt;= n; j++) &#123;</span><br><span class="line">                res[j] += res[j - i];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        cout &lt;&lt; res[n] &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">return</span> 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> hdoj </tag>
            
            <tag> 排列 </tag>
            
            <tag> 背包问题 </tag>
            
            <tag> 分治 </tag>
            
            <tag> 动态规划 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于HDOJ 1021题(Fibonacci Again) 的理解(C/C++)</title>
      <link href="/2019/08/09/hdoj1021/"/>
      <url>/2019/08/09/hdoj1021/</url>
      
        <content type="html"><![CDATA[<p>和之前的<a href="https://zoey1038569979.github.io/2019/07/30/blog1/">1005</a>很类似,遇到f(n)依赖前面项时的数列题 &nbsp;并且&nbsp; 涉及求余时，优先考虑找周期</p><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>Fibonacci Again<br>&nbsp;&nbsp;Time Limit: 2000/1000 MS (Java/Others)    Memory Limit: 65536/32768 K (Java/Others)<br>&nbsp;&nbsp;Total Submission(s): 82627    Accepted Submission(s): 37342</p><p>Problem Description<br>&nbsp;&nbsp;There are another kind of Fibonacci numbers: F(0) = 7, F(1) = 11, F(n) = F(n-1) + F(n-2) (n&gt;=2).</p><p>Input<br>&nbsp;&nbsp;Input consists of a sequence of lines, each containing an integer n. (n &lt; 1,000,000).</p><p>Output<br>&nbsp;&nbsp;Print the word “yes” if 3 divide evenly into F(n).</p><p>&nbsp;&nbsp;Print the word “no” if not.</p><p>Sample Input<br>&nbsp;&nbsp;0<br>&nbsp;&nbsp;1<br>&nbsp;&nbsp;2<br>&nbsp;&nbsp;3<br>&nbsp;&nbsp;4<br>&nbsp;&nbsp;5</p><p>Sample Output<br>&nbsp;&nbsp;no<br>&nbsp;&nbsp;no<br>&nbsp;&nbsp;yes<br>&nbsp;&nbsp;no<br>&nbsp;&nbsp;no<br>&nbsp;&nbsp;no</p><p>Author<br>&nbsp;&nbsp;Leojay</p><h2 id="原题链接"><a href="#原题链接" class="headerlink" title="原题链接"></a>原题链接</h2><p>More info:<a href="http://acm.hdu.edu.cn/showproblem.php?pid=1021" target="_blank" rel="noopener">Question</a></p><h2 id="硬来？"><a href="#硬来？" class="headerlink" title="硬来？"></a>硬来？</h2><p>&nbsp;&nbsp;直接硬上……然而，事实证明博主太年轻太天真……</p><p>&nbsp;&nbsp;WA警告教做人</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include&lt;iostream&gt;</span></span><br><span class="line">using namespace std;</span><br><span class="line">int f[1000001];</span><br><span class="line">int n;</span><br><span class="line">int <span class="function"><span class="title">main</span></span>() &#123;</span><br><span class="line">    f[0] = 7; f[1] = 11;</span><br><span class="line">    <span class="keyword">for</span> (int i = 2; i &lt; 1000001; i++) &#123;</span><br><span class="line">        f[i] = f[i - 1] + f[i - 2];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (cin &gt;&gt; n) &#123;</span><br><span class="line">        <span class="keyword">if</span> (f[n] % 3 == 0) cout &lt;&lt; <span class="string">"yes"</span> &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">else</span> cout &lt;&lt; <span class="string">"no"</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">return</span> 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Accepted代码"><a href="#Accepted代码" class="headerlink" title="Accepted代码"></a>Accepted代码</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include&lt;iostream&gt;</span></span><br><span class="line">using namespace std;</span><br><span class="line">int f[1000001];</span><br><span class="line">int n;</span><br><span class="line">int <span class="function"><span class="title">main</span></span>() &#123;</span><br><span class="line">    int len_ =-1;</span><br><span class="line">    f[0] = 7; f[1] = 11;</span><br><span class="line">    <span class="keyword">for</span> (int i = 2; i &lt; 1000001; i++) &#123;</span><br><span class="line">        f[i] = f[i - 1] + f[i - 2];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (int i = 0; i &lt; 50; i++) &#123;//实际开&gt;9就行了</span><br><span class="line">        f[i]= f[i] % 3 ;</span><br><span class="line">        <span class="keyword">if</span> (f[i]%3 == 1 &amp;&amp; f[i + 1]%3 == 2 &amp;&amp; i!=0) &#123; </span><br><span class="line">            len_ = i;</span><br><span class="line">            <span class="built_in">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (cin &gt;&gt; n) &#123;</span><br><span class="line">        n = n % len_;</span><br><span class="line">        <span class="keyword">if</span> (f[n] == 0) cout &lt;&lt; <span class="string">"yes"</span> &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">else</span> cout &lt;&lt; <span class="string">"no"</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">return</span> 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>&nbsp;&nbsp;&nbsp;&nbsp;f(n)的存储没必要直接用f(n),反正最后的结果是%3，干脆直接存为%3后的余数。由于f(n-1)、f(n-2)都属于（0,2）的整数，即都只有3中情况，所以f(n)应该只有3*3即9种可能情况。于是又循环找到周期len_,最后用n%len_(周期)，即可快速找到n是否可以整除3</p>]]></content>
      
      
      
        <tags>
            
            <tag> hdoj </tag>
            
            <tag> 整除取余 </tag>
            
            <tag> 周期 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于HDOJ 1019题（Least Common Multiple）的理解(C/C++)</title>
      <link href="/2019/08/09/hdoj1019/"/>
      <url>/2019/08/09/hdoj1019/</url>
      
        <content type="html"><![CDATA[<p>&nbsp;&nbsp;&nbsp;&nbsp;主要是循环体内的小细节问题，为了对比突出一点，把WA和AC的代码就一起贴出来啦（虽然感觉有点像鞭尸……），详见代码</p><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>A Mathematical Curiosity<br>Time Limit: 2000/1000 MS (Java/Others)    Memory Limit: 65536/32768 K (Java/Others)<br>Total Submission(s): 53959    Accepted Submission(s): 17539</p><p>Problem Description<br>  Given two integers n and m, count the number of pairs of integers (a,b) such that 0 &lt; a &lt; b &lt; n and (a^2+b^2 +m)/(ab) is an integer.</p><p>  This problem contains multiple test cases!</p><p>  The first line of a multiple input is an integer N, then a blank line followed by N input blocks. Each input block is in the format indicated in the problem description. There is a blank line between input blocks.</p><p>  The output format consists of N output blocks. There is a blank line between output blocks.</p><p>Input<br>  You will be given a number of cases in the input. Each case is specified by a line containing the integers n and m. The end of input is indicated by a case in which n = m = 0. You may assume that 0 &lt; n &lt;= 100.</p><p>Output<br>  For each case, print the case number as well as the number of pairs (a,b) satisfying the given property. Print the output for each case on one line in the format as shown below.</p><p>Sample Input<br>  1</p><p>  10 1<br>  20 3<br>  30 4<br>  0 0</p><p>Sample Output<br>  Case 1: 2<br>  Case 2: 4<br>  Case 3: 5</p><p>Source<br>  East Central North America 1999, Practice </p><p>Source<br>  South Central USA 1996</p><h2 id="原题链接"><a href="#原题链接" class="headerlink" title="原题链接"></a>原题链接</h2><p>More info:<a href="http://acm.hdu.edu.cn/showproblem.php?pid=1019" target="_blank" rel="noopener">Question</a></p><h2 id="Accepted代码"><a href="#Accepted代码" class="headerlink" title="Accepted代码"></a>Accepted代码</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include&lt;iostream&gt;</span></span><br><span class="line"></span><br><span class="line">using namespace std;</span><br><span class="line">int max_gys(int a, int b) &#123;</span><br><span class="line">    <span class="keyword">if</span> (b == 0) <span class="built_in">return</span> a;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">return</span> ( max_gys(b,a%b) );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">int <span class="function"><span class="title">main</span></span>() &#123;</span><br><span class="line">    int N;</span><br><span class="line">    cin &gt;&gt; N;</span><br><span class="line">    <span class="keyword">while</span> (N--) &#123;</span><br><span class="line">        int n;</span><br><span class="line">        cin &gt;&gt; n;</span><br><span class="line">        int a, b;</span><br><span class="line">        cin &gt;&gt; a ;</span><br><span class="line">        <span class="keyword">while</span> (--n) &#123;</span><br><span class="line">            cin &gt;&gt; b;</span><br><span class="line">            a = b / max_gys(a, b) *a;    </span><br><span class="line">        &#125;</span><br><span class="line">        cout &lt;&lt; a &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">return</span> 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="TLE代码"><a href="#TLE代码" class="headerlink" title="TLE代码"></a>TLE代码</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include&lt;iostream&gt;</span></span><br><span class="line"></span><br><span class="line">using namespace std;</span><br><span class="line">int max_gys(int a, int b) &#123;</span><br><span class="line">    <span class="keyword">if</span> (b == 0) <span class="built_in">return</span> a;</span><br><span class="line">    <span class="built_in">return</span> ( max_gys(b, a % b) );</span><br><span class="line">&#125;</span><br><span class="line">int min_gbs(int a, int b) &#123;</span><br><span class="line">    <span class="built_in">return</span> (a * b / max_gys(a, b));</span><br><span class="line">&#125;</span><br><span class="line">int <span class="function"><span class="title">main</span></span>() &#123;</span><br><span class="line">    int N;</span><br><span class="line">    cin &gt;&gt; N;</span><br><span class="line">    <span class="keyword">while</span> (N--) &#123;</span><br><span class="line">        int n;</span><br><span class="line">        cin &gt;&gt; n;</span><br><span class="line">        int a, b;</span><br><span class="line">        cin &gt;&gt; a &gt;&gt; b;</span><br><span class="line">        <span class="keyword">while</span> (--n) &#123;</span><br><span class="line">            a = min_gbs(a, b);</span><br><span class="line">            <span class="keyword">if</span> (n == 1) <span class="built_in">break</span>;//主要就是这，当天肯定脑壳不清醒</span><br><span class="line">            cin &gt;&gt; b;</span><br><span class="line">        &#125;</span><br><span class="line">        cout &lt;&lt; a &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">return</span> 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>当天肯定是头晕着做的题，（……），就是循环体内的循环不明确，导致个别特殊的情况输入时，一直没有输出导致的超时。以后一定注意！！</p>]]></content>
      
      
      
        <tags>
            
            <tag> hdoj </tag>
            
            <tag> 粗心 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于HDOJ 1017题（A Mathematical Curiosity）的理解(C/C++)</title>
      <link href="/2019/08/09/hdoj1017/"/>
      <url>/2019/08/09/hdoj1017/</url>
      
        <content type="html"><![CDATA[<p>&nbsp;&nbsp;&nbsp;&nbsp;该题直接循环就行了，没有超时超限的顾虑。只是最开始案例输入的那个1我没看懂是啥意思<br>读了下别人的代码之后懂了，那个最开始输入的整数是表示有几大组数据的意思，详见代码</p><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>A Mathematical Curiosity<br>Time Limit: 2000/1000 MS (Java/Others)    Memory Limit: 65536/32768 K (Java/Others)<br>Total Submission(s): 53959    Accepted Submission(s): 17539</p><p>Problem Description<br>  Given two integers n and m, count the number of pairs of integers (a,b) such that 0 &lt; a &lt; b &lt; n and (a^2+b^2 +m)/(ab) is an integer.</p><p>  This problem contains multiple test cases!</p><p>  The first line of a multiple input is an integer N, then a blank line followed by N input blocks. Each input block is in the format indicated in the problem description. There is a blank line between input blocks.</p><p>  The output format consists of N output blocks. There is a blank line between output blocks.</p><p>Input<br>  You will be given a number of cases in the input. Each case is specified by a line containing the integers n and m. The end of input is indicated by a case in which n = m = 0. You may assume that 0 &lt; n &lt;= 100.</p><p>Output<br>  For each case, print the case number as well as the number of pairs (a,b) satisfying the given property. Print the output for each case on one line in the format as shown below.</p><p>Sample Input<br>  1</p><p>  10 1<br>  20 3<br>  30 4<br>  0 0</p><p>Sample Output<br>  Case 1: 2<br>  Case 2: 4<br>  Case 3: 5</p><p>Source<br>  East Central North America 1999, Practice </p><p>Source<br>  South Central USA 1996</p><h2 id="原题链接"><a href="#原题链接" class="headerlink" title="原题链接"></a>原题链接</h2><p>More info:<a href="http://acm.hdu.edu.cn/showproblem.php?pid=1017" target="_blank" rel="noopener">Question</a></p><h2 id="Accepted代码"><a href="#Accepted代码" class="headerlink" title="Accepted代码"></a>Accepted代码</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include&lt;iostream&gt;</span></span><br><span class="line"></span><br><span class="line">using namespace std;</span><br><span class="line"></span><br><span class="line">int <span class="function"><span class="title">main</span></span>() &#123;</span><br><span class="line">    int n, m;</span><br><span class="line">    int num;</span><br><span class="line">    int no=1;</span><br><span class="line">    int N;</span><br><span class="line">    cin &gt;&gt; N;</span><br><span class="line">    <span class="keyword">while</span> (N--) &#123;</span><br><span class="line">        no = 1;</span><br><span class="line">        <span class="keyword">while</span> (cin &gt;&gt; n &gt;&gt; m) &#123;</span><br><span class="line">            num = 0;</span><br><span class="line">            <span class="keyword">if</span> (n == 0 &amp;&amp; m == 0) <span class="built_in">break</span>;</span><br><span class="line">            int a, b;</span><br><span class="line">            <span class="keyword">for</span> (b = 1; b &lt; n; b++) &#123;</span><br><span class="line">                <span class="keyword">for</span> (a = 1; a &lt; b; a++) &#123;</span><br><span class="line">                    <span class="keyword">if</span> ((a * a + b * b + m) % (a * b) == 0) &#123;</span><br><span class="line">                        num++;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            cout &lt;&lt; <span class="string">"Case "</span> &lt;&lt; no &lt;&lt; <span class="string">": "</span> &lt;&lt; num &lt;&lt; endl;</span><br><span class="line">            no++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (N != 0) cout &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">return</span> 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> hdoj </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于HDOJ 1014题（Uniform Generator）的理解(C/C++)</title>
      <link href="/2019/08/09/hdoj1014_blog/"/>
      <url>/2019/08/09/hdoj1014_blog/</url>
      
        <content type="html"><![CDATA[<p>&nbsp;&nbsp;&nbsp;&nbsp;本题主要思路为，用while循环进行标记，如果seed（）方法中被遍历过的数，则吧对应的flag[ ]设置为1，同时通过不断更新下一个seed数，并以flag[ seed ]为终止条件即可，同时在循环体内用count记一下数，count=mod则说明是good chioce（反之相反），详见AC代码。</p><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>Uniform Generator<br>  Time Limit: 2000/1000 MS (Java/Others)    Memory Limit: 65536/32768 K (Java/Others)<br>  Total Submission(s): 37373    Accepted Submission(s): 14842</p><p>Problem Description<br>  Computer simulations often require random numbers. One way to generate pseudo-random numbers is via a function of the form</p><p>  seed(x+1) = [seed(x) + STEP] % MOD</p><p>  where ‘%’ is the modulus operator. </p><p>  Such a function will generate pseudo-random numbers (seed) between 0 and MOD-1. One problem with functions of this form is that they will always generate the same pattern over and over. In order to minimize this effect, selecting the STEP and MOD values carefully can result in a uniform distribution of all values between (and including) 0 and MOD-1. </p><p>  For example, if STEP = 3 and MOD = 5, the function will generate the series of pseudo-random numbers 0, 3, 1, 4, 2 in a repeating cycle. In this example, all of the numbers between and including 0 and MOD-1 will be generated every MOD iterations of the function. Note that by the nature of the function to generate the same seed(x+1) every time seed(x) occurs means that if a function will generate all the numbers between 0 and MOD-1, it will generate pseudo-random numbers uniformly with every MOD iterations. </p><p>  If STEP = 15 and MOD = 20, the function generates the series 0, 15, 10, 5 (or any other repeating series if the initial seed is other than 0). This is a poor selection of STEP and MOD because no initial seed will generate all of the numbers from 0 and MOD-1. </p><p>  Your program will determine if choices of STEP and MOD will generate a uniform distribution of pseudo-random numbers. </p><p>Input<br>  Each line of input will contain a pair of integers for STEP and MOD in that order (1 &lt;= STEP, MOD &lt;= 100000).</p><p>Output<br>  For each line of input, your program should print the STEP value right- justified in columns 1 through 10, the MOD value right-justified in columns 11 through 20 and either “Good Choice” or “Bad Choice” left-justified starting in column 25. The “Good Choice” message should be printed when the selection of STEP and MOD will generate all the numbers between and including 0 and MOD-1 when MOD numbers are generated. Otherwise, your program should print the message “Bad Choice”. After each output test set, your program should print exactly one blank line.</p><p>Sample Input<br>  3 5<br>  15 20<br>  63923 99999</p><p>Sample Output<br>           3         5    Good Choice</p><pre><code>   15        20    Bad Choice63923     99999    Good Choice</code></pre><p>Source<br>  South Central USA 1996</p><h2 id="原题链接"><a href="#原题链接" class="headerlink" title="原题链接"></a>原题链接</h2><p>More info:<a href="http://acm.hdu.edu.cn/showproblem.php?pid=1014" target="_blank" rel="noopener">Question</a></p><h2 id="cout输出位数控制———整体输出位数的控制"><a href="#cout输出位数控制———整体输出位数的控制" class="headerlink" title="cout输出位数控制———整体输出位数的控制"></a>cout输出位数控制———整体输出位数的控制</h2><p>通过setw(n)方法设置下一个输出量时，设定输出的长宽为n个字符。输出量不达n个字符时，会在输出量左边填补对应的空白；若宽于n个字符，则按实际需要全部输出：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment">#include&lt;iostream&gt;</span></span><br><span class="line"> <span class="comment">#include&lt;iomanip&gt;</span></span><br><span class="line">using namespace std;</span><br><span class="line">int n;</span><br><span class="line">int <span class="function"><span class="title">main</span></span>() &#123;</span><br><span class="line">    <span class="keyword">while</span> (cin &gt;&gt; n) &#123;</span><br><span class="line">        <span class="keyword">if</span> (n == -1) <span class="built_in">break</span>;</span><br><span class="line">        cout &lt;&lt; setw(5)&lt;&lt;n &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">return</span> 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果示意：<br><img src="/images/hdoj1014/0.png" alt="运行结果示意"></p><h2 id="cout靠左或者靠右输出的设置"><a href="#cout靠左或者靠右输出的设置" class="headerlink" title="cout靠左或者靠右输出的设置"></a>cout靠左或者靠右输出的设置</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">//默认是右对齐.</span><br><span class="line">cout &lt;&lt;left ;                                 // 左对齐</span><br><span class="line">cout &lt;&lt;setw(5) &lt;&lt;12 &lt;&lt;setw(5) &lt;&lt;34 &lt;&lt;endl ;   // 12___34___</span><br><span class="line"></span><br><span class="line">cout &lt;&lt;right ;                                // 默认 右对齐</span><br><span class="line">cout &lt;&lt;setw(5) &lt;&lt;12 &lt;&lt;setw(5) &lt;&lt;34 &lt;&lt;endl ;   // ___12___34</span><br></pre></td></tr></table></figure><h2 id="Accepted代码"><a href="#Accepted代码" class="headerlink" title="Accepted代码"></a>Accepted代码</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include&lt;iostream&gt;</span></span><br><span class="line"><span class="comment">#include&lt;iomanip&gt;</span></span><br><span class="line"><span class="comment">#include&lt;cstring&gt;</span></span><br><span class="line">using namespace std;</span><br><span class="line">int flag[100001];</span><br><span class="line">int <span class="function"><span class="title">main</span></span>() &#123;</span><br><span class="line">    int step, mod,count;</span><br><span class="line">    <span class="keyword">while</span> (cin &gt;&gt; step &gt;&gt; mod) &#123;</span><br><span class="line">        memset(flag, 0, sizeof(flag));</span><br><span class="line">        count = 0;</span><br><span class="line">        int seed = 0;</span><br><span class="line">        <span class="keyword">while</span> (!flag[seed]) &#123;</span><br><span class="line">            flag[seed] = 1;</span><br><span class="line">            seed = (seed + step) % mod;</span><br><span class="line">            count++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (count == mod) cout &lt;&lt; right &lt;&lt; setw(10) &lt;&lt; step &lt;&lt; setw(10) &lt;&lt; mod &lt;&lt; <span class="string">"    "</span> &lt;&lt; left &lt;&lt; <span class="string">"Good Choice"</span> &lt;&lt; endl &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">else</span> cout &lt;&lt; right &lt;&lt; setw(10) &lt;&lt; step &lt;&lt; setw(10) &lt;&lt; mod &lt;&lt; <span class="string">"    "</span> &lt;&lt; left &lt;&lt; <span class="string">"Bad Choice"</span> &lt;&lt; endl &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">return</span> 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> hdoj </tag>
            
            <tag> cout输出格式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>调整hexo博客下markdowm的内容中的图片大小</title>
      <link href="/2019/08/09/img_adjust/"/>
      <url>/2019/08/09/img_adjust/</url>
      
        <content type="html"><![CDATA[<p>由于博主是初写博，之前没写markdowm，所以不是很熟悉。然而在写的内容中需要引入一张小（图片大小）图片时，发现不管通过用”! []  ()”的形式，怎么调整，图片都是默认地沾满整个宽度，很是头疼（些微强迫症，看着特别不舒服，甚至一度成为不想接着写博的借口）。后来通过进界面f12发现，是style.css在作祟，其中有一个class吧，hr ,img{width=100%}，在f12中若把这个效果勾选去掉的话，图片就不是默认铺满整个宽度了。当然其中也有一些小插曲。</p><p>  以下是爬坑之后的设置方法：</p><h2 id="删除style-css中的相关限制"><a href="#删除style-css中的相关限制" class="headerlink" title="删除style.css中的相关限制"></a>删除style.css中的相关限制</h2><p>这里有个小坑，我发现是style.css中hr, img{width=100%}在坏事之后，先反应过来<br>  ———“嗯，把 <del>width=100%</del> 删掉应该就好了吧”<br>    事实再一次冷冰冰地打了我的脸，逻辑是没问题啊，为啥不起用？？<br>      搞半天是自己改错了文件了，在hexo搭建并使用过主题之后，默认地，会有3个地方会有style.css这个文件。。。。然而不管是publi文件夹里的，还是.deploy_git 中的都不管用，theme中的style.css都会覆盖这个配置的。。。。心塞……<br>      对的，所以 <del>正确方法</del> 是（保险方法）把这3个style.css对应的位置都删除了。。。</p><h2 id="通过”-lt-img-gt-”标签，写宽（高）度"><a href="#通过”-lt-img-gt-”标签，写宽（高）度" class="headerlink" title="通过”&lt; img &gt;”标签，写宽（高）度"></a>通过”&lt; img &gt;”标签，写宽（高）度</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;div align=center width=80%&gt;</span><br><span class="line">  &lt;img width=80% src=<span class="string">"https://zoey1038569979.github.io/images/blog3/blog3_res0.png"</span> &gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><p>效果<br></p><div align="center" width="80%">  <img width="80%" src="https://zoey1038569979.github.io/images/blog3/blog3_res0.png"></div><h2 id="进入页面后可以按f12快速进开发工具模式帮助找页面的参数等问题进行debug"><a href="#进入页面后可以按f12快速进开发工具模式帮助找页面的参数等问题进行debug" class="headerlink" title="进入页面后可以按f12快速进开发工具模式帮助找页面的参数等问题进行debug"></a>进入页面后可以按f12快速进开发工具模式帮助找页面的参数等问题进行debug</h2><p><img src="/images/img_adjust/res_img_adjust.png" alt></p>]]></content>
      
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> 图片大小 </tag>
            
            <tag> markdowm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>看板娘测试博</title>
      <link href="/2019/08/05/live2d/"/>
      <url>/2019/08/05/live2d/</url>
      
        <content type="html"><![CDATA[<p>闲来无事，今天hdoj的习题又关闭了。之前在某介于A和C之间的小破站上看到的看板娘甚是好看。我来布置一下试试~<br>感谢技术教学视屏<a href="https://www.bilibili.com/video/av24869594/" target="_blank" rel="noopener">谢谢阿婆主视频教学</a></p><p><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br></p><p><img src="/images/live2d/live2d_res_show.png" alt="截图"></p><p>如果你在我的主页看到左下角有一只看板娘的话就说明live2d测试成功啦~p.s..没有看到有可能是加载比较慢一点，多等几分钟可能就有啦</p><h2 id="（假装自己写了很多东西）"><a href="#（假装自己写了很多东西）" class="headerlink" title="（假装自己写了很多东西）"></a><br>（假装自己写了很多东西）</h2><hr><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p>此外，放一下参考的博主的干货资料，感兴趣的朋友可以去<a href="https://www.hojun.cn/tags/live2d/" target="_blank" rel="noopener">hojun</a>那儿拿一下干货</p><h2 id="再次感谢教学视频阿婆主和干货博客主"><a href="#再次感谢教学视频阿婆主和干货博客主" class="headerlink" title="再次感谢教学视频阿婆主和干货博客主"></a><br>再次感谢<a href="https://space.bilibili.com/271849279?spm_id_from=333.788.b_765f7570696e666f.2" target="_blank" rel="noopener">教学视频阿婆主</a>和<a href="https://www.hojun.cn/" target="_blank" rel="noopener">干货博客主</a></h2><link rel="stylesheet" href="/live2d/css/live2d.css"><div id="landlord"> <div class="message" style="opacity:0"></div>  <canvas id="live2d" width="280" height="250" class="live2d"></canvas>    <div class="hide-button">隐藏</div></div><script type="text/javascript" src="https://cdn.bootcss.com/jquery/2.2.4/jquery.min.js"></script><script type="text/javascript">    var message_Path = '/live2d/'    var home_Path = 'https://zoey1038569979.github.io/'</script><script type="text/javascript" src="/live2d/js/live2d.js"></script><script type="text/javascript" src="/live2d/js/message.js"></script><script type="text/javascript">    loadlive2d("live2d", "/live2d/model/tia/model.json");</script>]]></content>
      
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> live2d </tag>
            
            <tag> 看板娘 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于HDOJ 1013题（digital Roots）的理解(C/C++)</title>
      <link href="/2019/07/31/blog3/"/>
      <url>/2019/07/31/blog3/</url>
      
        <content type="html"><![CDATA[<p>最开始由于题目没说细具体的数字的位数，我还说想着不用string类型，直接用一个int类型的数来装装看，结果毫无意外地wrong answer了。</p><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>Digital Roots<br>Time Limit: 2000/1000 MS (Java/Others)    Memory Limit: 65536/32768 K (Java/Others)<br>Total Submission(s): 101376    Accepted Submission(s): 31506</p><p>Problem Description<br>The digital root of a positive integer is found by summing the digits of the integer. If the resulting value is a single digit then that digit is the digital root. If the resulting value contains two or more digits, those digits are summed and the process is repeated. This is continued as long as necessary to obtain a single digit.</p><p>For example, consider the positive integer 24. Adding the 2 and the 4 yields a value of 6. Since 6 is a single digit, 6 is the digital root of 24. Now consider the positive integer 39. Adding the 3 and the 9 yields 12. Since 12 is not a single digit, the process must be repeated. Adding the 1 and the 2 yeilds 3, a single digit and also the digital root of 39.</p><p>Input<br>The input file will contain a list of positive integers, one per line. The end of the input will be indicated by an integer value of zero.</p><p>Output<br>For each integer in the input, output its digital root on a separate line of the output.</p><p>Sample Input<br>24<br>39<br>0</p><p>Sample Output<br>6<br>3</p><p>Source<br>Greater New York 2000</p><h2 id="原题链接"><a href="#原题链接" class="headerlink" title="原题链接"></a>原题链接</h2><p>More info:<a href="http://acm.hdu.edu.cn/showproblem.php?pid=1013" target="_blank" rel="noopener">Question</a></p><h2 id="int型数的长度"><a href="#int型数的长度" class="headerlink" title="int型数的长度"></a>int型数的长度</h2><p>如最开始所说的，本意是想着应该不会有大数让算，直接用int型试试？（理想很丰满，现实很骨感）果不其然地出错了……</p><p>以下是出错的代码（除了不能适用于大数，我感觉好像是没毛病的（当然，有其他问题的话欢迎各位大佬的指正，一定虚心接受并改正））：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment">#include&lt;iostream&gt;</span></span><br><span class="line"></span><br><span class="line">using namespace std;</span><br><span class="line">int root_(int x) &#123;</span><br><span class="line">    int a = x,res=0;</span><br><span class="line">    <span class="keyword">while</span> (a) &#123;</span><br><span class="line">        res += (a % 10);</span><br><span class="line">        a /= 10;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(res&lt;10) <span class="built_in">return</span> res;</span><br><span class="line">    <span class="built_in">return</span> root_(res);</span><br><span class="line">&#125;</span><br><span class="line">int <span class="function"><span class="title">main</span></span>() &#123;</span><br><span class="line">    int x;</span><br><span class="line">    <span class="keyword">while</span> (cin &gt;&gt; x &amp;&amp; x) &#123;</span><br><span class="line">        cout &lt;&lt;root_(x)&lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">return</span> 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>为毛把错误代码贴出来呢？其一，是为了警示自己，下次别再犯这种侥幸错误了；其二嘛，是感觉这个while循环里的代码其实可以有其他的应用，以后如果遇到的话可以采用下。例如，让算一个int整数一共有多少位，就可以用上述的root_()函数里的部分代码来实现：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment">#include&lt;iostream&gt;</span></span><br><span class="line"></span><br><span class="line">using namespace std;</span><br><span class="line">int f(int x) &#123;</span><br><span class="line">    int a = x,res=0;</span><br><span class="line">    <span class="keyword">while</span> (a) &#123;</span><br><span class="line">        res++;</span><br><span class="line">        a /= 10;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line">int <span class="function"><span class="title">main</span></span>() &#123;</span><br><span class="line">    int x;</span><br><span class="line">    <span class="keyword">while</span> (cin &gt;&gt; x &amp;&amp; x) &#123;</span><br><span class="line">        cout &lt;&lt;f(x)&lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">return</span> 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果示意：</p><div align="center" width="80%">  <img width="80%" src="https://zoey1038569979.github.io/images/blog3/blog3_res0.png"></div><h2 id="九余数定理以及弃九法"><a href="#九余数定理以及弃九法" class="headerlink" title="九余数定理以及弃九法"></a>九余数定理以及弃九法</h2><p>“弃九法”也叫做弃九验算法，利用这种方法可以验算加、减计算的结果是否错误。把一个数的各位数字相加，直到和是一个一位数（和是9，要减去9得0），这个数就叫做原来数的弃九数。</p><p>然而感觉本题中的Digital Root就是弃九数（如果我的理解有问题，还请大家帮忙指出纠正！）</p><p>九余数定理：<br>一个数对九取余，得到的数称之为九余数；<br>一个数的九余数 等于 它的各个数位上的数之和的九余数！ </p><p>但是，如果直接对9取余，那么有整除的情况出现，但是除非一个数是0，否则这个数的Digital Root不应该出现0才对<br>于是，可以用(各位数之和-1)%9+1的方式来求一个数的弃九数（Digital Root）</p><h2 id="关于string的长度函数"><a href="#关于string的长度函数" class="headerlink" title="关于string的长度函数"></a>关于string的长度函数</h2><p>关于string的长度：<br>头文件为<string>时，用 string a的形式，<br>int len=<string>.size();</string></string></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include&lt;iostream&gt;</span></span><br><span class="line"><span class="comment">#include&lt;string&gt;</span></span><br><span class="line">using namespace std;</span><br><span class="line">int <span class="function"><span class="title">main</span></span>() &#123;</span><br><span class="line">    string a;</span><br><span class="line">    <span class="keyword">while</span> (cin &gt;&gt; a) &#123;</span><br><span class="line">        int len = a.size();</span><br><span class="line">        cout &lt;&lt; len &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">return</span> 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>头文件为<cstring>时,用char a[]的形式，<br>int len=strlen(<string>);</string></cstring></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include&lt;iostream&gt;</span></span><br><span class="line"><span class="comment">#include&lt;cstring&gt;</span></span><br><span class="line">using namespace std;</span><br><span class="line">int <span class="function"><span class="title">main</span></span>() &#123;</span><br><span class="line">    char a[100];</span><br><span class="line">    <span class="keyword">while</span> (cin &gt;&gt; a) &#123;</span><br><span class="line">        int len = strlen(a);</span><br><span class="line">        cout &lt;&lt; len &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">return</span> 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>两个代码都可以输出当前输入的字符串的长度</p><h2 id="Accepted代码"><a href="#Accepted代码" class="headerlink" title="Accepted代码"></a>Accepted代码</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include&lt;iostream&gt;</span></span><br><span class="line"><span class="comment">#include&lt;string&gt;</span></span><br><span class="line">using namespace std;</span><br><span class="line">string a;</span><br><span class="line">int <span class="function"><span class="title">main</span></span>() &#123;</span><br><span class="line">    int sum = 0;</span><br><span class="line">    <span class="keyword">while</span> (cin &gt;&gt; a &amp;&amp; a != <span class="string">"0"</span>) &#123;</span><br><span class="line">        sum = 0;</span><br><span class="line">        <span class="keyword">for</span> (int i = 0; i &lt; a.size(); i++) &#123;</span><br><span class="line">            sum += (a[i] - <span class="string">'0'</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        cout &lt;&lt; (sum - 1) % 9 + 1 &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> hdoj </tag>
            
            <tag> int型的数的长度计算法方法 </tag>
            
            <tag> string和char型的长度 </tag>
            
            <tag> 九余数定理以及弃九法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于HDOJ 1012题的理解(C/C++)</title>
      <link href="/2019/07/31/blog2/"/>
      <url>/2019/07/31/blog2/</url>
      
        <content type="html"><![CDATA[<p>看起来蛮简单的一个题，但是还是没有能一次A的过，并且有学到如何在c++中控制输出的小数位数，于是感觉可以写到自己的博客里来。题意是很简单的，就让输出一下n取0-9的时候，对应的e用所给的公式计算出来的结果是多少。难点（大佬请别在意）的话，可能就是控制输出位数了。</p><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>u Calculate e<br>Time Limit: 2000/1000 MS (Java/Others)    Memory Limit: 65536/32768 K (Java/Others)<br>Total Submission(s): 59129    Accepted Submission(s): 27115</p><p>Problem Description<br>A simple mathematical formula for e is<br><img src="/images/blog2/1012-1.gif" alt="e的计算"></p><p>where n is allowed to go to infinity. This can actually yield very accurate approximations of e using relatively small values of n.</p><p>Output<br>Output the approximations of e generated by the above formula for the values of n from 0 to 9. The beginning of your output should appear similar to that shown below.</p><p>Sample Output<br>n e</p><hr><p>0 1<br>1 2<br>2 2.5<br>3 2.666666667<br>4 2.708333333</p><p>Source<br>Greater New York 2000</p><p>Recommend<br>JGShining</p><h2 id="原题链接"><a href="#原题链接" class="headerlink" title="原题链接"></a>原题链接</h2><p>More info:<a href="http://acm.hdu.edu.cn/showproblem.php?pid=1012" target="_blank" rel="noopener">Question</a></p><h2 id="小数位数的控制"><a href="#小数位数的控制" class="headerlink" title="小数位数的控制"></a>小数位数的控制</h2><p>首先是头文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include &lt;iomanip&gt;</span></span><br></pre></td></tr></table></figure><p>然后就是用法了</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cout &lt;&lt; fixed&lt;&lt; setprecision(n)&lt;&lt; 变量;</span><br></pre></td></tr></table></figure><p>当然，通过这次的题目还发现了一写小细节问题，之前都没怎么注意的。原来cout输出时，默认地，会删除掉多余的小数点后的0。于是去搜了一下怎么让cout输出不去删掉小数点后多余的0：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cout.setf(ios_base::fixed,ios_base::floatfield);</span><br></pre></td></tr></table></figure><p>然后以下是自己结合网上给的关于控制小数位数的一些测试代码：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include&lt;iostream&gt;</span></span><br><span class="line"><span class="comment">#include &lt;iomanip&gt;</span></span><br><span class="line">using namespace std;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">    const double value = 12.3456789;</span><br><span class="line">    cout &lt;&lt; value &lt;&lt; endl; // 默认以6精度，所以输出为 12.3457 </span><br><span class="line">    cout &lt;&lt; setprecision(4) &lt;&lt; value &lt;&lt; endl; // 改成4精度，所以输出为12.35 </span><br><span class="line">    cout &lt;&lt; setprecision(8) &lt;&lt; value &lt;&lt; endl; // 改成8精度，所以输出为12.345679 </span><br><span class="line">    cout &lt;&lt; fixed &lt;&lt; setprecision(4) &lt;&lt; value &lt;&lt; endl; // 加了fixed意味着是固定点方式显示，所以这里的精度指的是小数位，输出为12.3457 </span><br><span class="line">    cout &lt;&lt; value &lt;&lt; endl; // fixed和setprecision的作用还在，依然显示12.3457 </span><br><span class="line">    cout.unsetf(ios::fixed); // 去掉了fixed，所以精度恢复成整个数值的有效位数，显示为12.35 </span><br><span class="line">    cout &lt;&lt; value &lt;&lt; endl;</span><br><span class="line">    cout.precision(6); // 恢复成原来的样子，输出为12.3457 </span><br><span class="line">    cout &lt;&lt; value &lt;&lt; endl&lt;&lt;endl;</span><br><span class="line"></span><br><span class="line">    //在C++中，cout语句会自动删除浮点数小数部分多余的0</span><br><span class="line">    const double value2 = 12.0000000;</span><br><span class="line">    cout &lt;&lt; value2 &lt;&lt; endl; // 默认以6精度，但是cout语句会自动删除浮点数小数部分多余的0，所以输出为12</span><br><span class="line">    cout &lt;&lt; setprecision(4) &lt;&lt; value2 &lt;&lt; endl; // 改成4精度，输出为12 </span><br><span class="line">    cout &lt;&lt; setprecision(8) &lt;&lt; value2&lt;&lt; endl; // 改成8精度，输出为12 </span><br><span class="line">    cout &lt;&lt; fixed &lt;&lt; setprecision(4) &lt;&lt; value2 &lt;&lt; endl; // 加了fixed意味着是固定点方式显示，所以这里的精度指的是小数位，输出为12.0000 </span><br><span class="line">    cout &lt;&lt; value2 &lt;&lt; endl; // fixed和setprecision的作用还在，依然显示12.0000 </span><br><span class="line">    cout.unsetf(ios::fixed); // 去掉了fixed，精度恢复成整个数值的有效位数，但是依旧自动删除多余0，显示为12 </span><br><span class="line">    cout &lt;&lt; value2 &lt;&lt; endl;</span><br><span class="line">    cout.precision(6); // 恢复成原来的样子，输出为12 </span><br><span class="line">    cout &lt;&lt; value2 &lt;&lt; endl&lt;&lt;endl;</span><br><span class="line">    </span><br><span class="line">    //cout.setf(ios_base::fixed,ios_base::floatfield);可避免自动删除多余0的效果</span><br><span class="line">    const double value3 = 12.0000000;</span><br><span class="line">    cout.setf(ios_base::fixed, ios_base::floatfield);</span><br><span class="line">    cout &lt;&lt; value3 &lt;&lt; endl; // 默认以6精度，所以输出为 12.000000 </span><br><span class="line">    cout &lt;&lt; setprecision(4) &lt;&lt; value3 &lt;&lt; endl; // 改成4精度，所以输出为12.0000 </span><br><span class="line">    cout &lt;&lt; setprecision(8) &lt;&lt; value3 &lt;&lt; endl; // 改成8精度，所以输出为12.00000000 </span><br><span class="line">    cout &lt;&lt; fixed &lt;&lt; setprecision(4) &lt;&lt; value3 &lt;&lt; endl; // 加了fixed意味着是固定点方式显示，所以这里的精度指的是小数位，输出为12.0000 </span><br><span class="line">    cout &lt;&lt; value3 &lt;&lt; endl; // fixed和setprecision的作用还在，依然显示12.0000 </span><br><span class="line">    cout.unsetf(ios::fixed); // 去掉了fixed，所以精度恢复成整个数值的有效位数，显示为12 </span><br><span class="line">    cout &lt;&lt; value3 &lt;&lt; endl;</span><br><span class="line">    cout.precision(6); // 恢复成原来的样子，输出为12 </span><br><span class="line">    cout &lt;&lt; value3 &lt;&lt; endl;</span><br><span class="line">    <span class="built_in">return</span> 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试代码的运行结果：<br><img src="/images/blog2_res0.png" alt="运行结果"></p><h2 id="Accepted代码"><a href="#Accepted代码" class="headerlink" title="Accepted代码"></a>Accepted代码</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include&lt;iostream&gt;</span></span><br><span class="line"><span class="comment">#include &lt;iomanip&gt;</span></span><br><span class="line">using namespace std;</span><br><span class="line">double ans[11],res;</span><br><span class="line">int <span class="function"><span class="title">main</span></span>() &#123;</span><br><span class="line">    ans[0] = 1.0;</span><br><span class="line">    <span class="keyword">for</span> (int i = 1; i &lt;= 9; i++) &#123;</span><br><span class="line">        ans[i] = ans[i - 1] * (1.0 / i);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    cout &lt;&lt; <span class="string">"n e"</span> &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">"- -----------"</span> &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">for</span> (int i = 0; i &lt;= 9; i++) &#123;</span><br><span class="line">        res = 0.0;</span><br><span class="line">        <span class="keyword">for</span> (int j = 0; j &lt;= i; j++) &#123;</span><br><span class="line">            res += ans[j];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (i == 0) &#123;</span><br><span class="line">            cout &lt;&lt; <span class="string">"0 1\n"</span>;</span><br><span class="line">            cout &lt;&lt; <span class="string">"1 2\n"</span>;</span><br><span class="line">            cout &lt;&lt; <span class="string">"2 2.5\n"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(i&gt;=3) cout &lt;&lt; i &lt;&lt; <span class="string">" "</span> &lt;&lt;fixed&lt;&lt; setprecision(9)&lt;&lt; res &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">return</span> 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><pre><code>这里提醒下，由于自己没注意，原本很简单的题都提交了好几遍才过。主要在前三个输出，由于之后是控制了位数为9为小数位的，所以前三个根据样例输出的提示，应该是不需要多余小数点后的0的。所以简单粗暴地直接给他手动打出来了，23333333333。</code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> hdoj </tag>
            
            <tag> cout输出格式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于HDOJ 1005题的理解(C/C++)</title>
      <link href="/2019/07/30/blog1/"/>
      <url>/2019/07/30/blog1/</url>
      
        <content type="html"><![CDATA[<p>由于博主是初来乍到的，最近又在想办法刷一下算法题，所以决定写一下自己的博客记录下这个假期的A题过程（写bug过程），题目或许有些简单，希望各位大佬不要介意吐槽。此外，特别感谢<a href="https://blog.csdn.net/mengxiang000000/article/details/50221233" target="_blank" rel="noopener">mengxiang000000</a>以及<a href="https://blog.csdn.net/u011000290/article/details/47379977" target="_blank" rel="noopener">CouchDB</a>两位老兄的启发，帮助了原本对于该题不是TLE就是MLE的我，于是在理解的基础上算是把mengxiang000000老哥的代码用C++复述了一遍。若本篇博客涉权了，请联系左边头像下的myself（QQ就是github名的数字）。</p><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>Problem Description<br>A number sequence is defined as follows:</p><p>f(1) = 1, f(2) = 1, f(n) = (A * f(n - 1) + B * f(n - 2)) mod 7.</p><p>Given A, B, and n, you are to calculate the value of f(n).</p><p>Input<br>The input consists of multiple test cases. Each test case contains 3 integers A, B and n on a single line (1 &lt;= A, B &lt;= 1000, 1 &lt;= n &lt;= 100,000,000). Three zeros signal the end of input and this test case is not to be processed.</p><p>Output<br>For each test case, print the value of f(n) on a single line.</p><p>Sample Input<br>1 1 3<br>1 2 10<br>0 0 0</p><p>Sample Output<br>2<br>5</p><p>Author<br>CHEN, Shunbao</p><p>Source<br>ZJCPC2004</p><h2 id="原题链接"><a href="#原题链接" class="headerlink" title="原题链接"></a>原题链接</h2><p>More info:<a href="http://acm.hdu.edu.cn/showproblem.php?pid=1005" target="_blank" rel="noopener">Question</a></p><h2 id="硬来？"><a href="#硬来？" class="headerlink" title="硬来？"></a>硬来？</h2><p>博主拿到题后首先一看，呵，1000打头的，估计不用考虑超时超限什么的吧，直接硬上……然而，事实证明博主太年轻太天真……</p><p><img src="/images/blog1/img0.png" alt="hhh"></p><p>Memory Limit Exceeded</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include &lt;iostream&gt;</span></span><br><span class="line"></span><br><span class="line">using namespace std;</span><br><span class="line"></span><br><span class="line">int fun(int n, int a, int b) &#123;</span><br><span class="line">   <span class="keyword">if</span> (n == 1 || n==2) <span class="built_in">return</span> 1;</span><br><span class="line">   <span class="built_in">return</span> (a * fun(n - 1, a, b) + b * fun(n - 2, a, b)) % 7;</span><br><span class="line">&#125;</span><br><span class="line">int res;</span><br><span class="line">int <span class="function"><span class="title">main</span></span>() &#123;</span><br><span class="line">   int A, B, n;</span><br><span class="line">   cin &gt;&gt; A &gt;&gt; B &gt;&gt; n;</span><br><span class="line">   <span class="keyword">while</span> (A &amp;&amp; B &amp;&amp; n) &#123;</span><br><span class="line">       res = fun(n, A, B);</span><br><span class="line">       cout &lt;&lt; res &lt;&lt; endl;</span><br><span class="line">       cin&gt;&gt; A &gt;&gt; B &gt;&gt; n;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="built_in">return</span> 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Memory Limit Exceeded</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include &lt;iostream&gt;</span></span><br><span class="line"></span><br><span class="line">using namespace std;</span><br><span class="line">int f1=1, f2=1, res;</span><br><span class="line"></span><br><span class="line">int fun(int n, int a, int b) &#123;</span><br><span class="line">   <span class="keyword">if</span> (n == 1 || n == 2) <span class="built_in">return</span> 1;</span><br><span class="line">   <span class="keyword">for</span> (int i = 3; i &lt;= n; i++) &#123;</span><br><span class="line">       res = (a * f2 + b * f1) % 7;</span><br><span class="line">       f1 = f2;</span><br><span class="line">       f2 = res;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="built_in">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">int <span class="function"><span class="title">main</span></span>() &#123;</span><br><span class="line">   int A, B, n;</span><br><span class="line">   cin &gt;&gt; A &gt;&gt; B &gt;&gt; n;</span><br><span class="line">   <span class="keyword">while</span> (A &amp;&amp; B &amp;&amp; n) &#123;</span><br><span class="line">       fun(n, A, B);</span><br><span class="line">       cout &lt;&lt; res &lt;&lt; endl;</span><br><span class="line">       cin&gt;&gt; A &gt;&gt; B &gt;&gt; n;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="built_in">return</span> 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Accepted代码"><a href="#Accepted代码" class="headerlink" title="Accepted代码"></a>Accepted代码</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">//杭电oj 1005 </span><br><span class="line">//f(1) = 1, f(2) = 1, f(n) = (A * f(n - 1) + B * f(n - 2)) mod 7.</span><br><span class="line">//Given A, B, and n, you are to calculate the value of f(n).</span><br><span class="line"><span class="comment">#include&lt;iostream&gt;</span></span><br><span class="line">using namespace std;</span><br><span class="line">int ans[52];//f(n-1)、f(n-2)也是%7过得数，所以f(n)的取值情况只可能是7*7=49种，用&gt;49的数组来寻重</span><br><span class="line">int <span class="function"><span class="title">main</span></span>() &#123;</span><br><span class="line">int a, b, n;</span><br><span class="line"><span class="keyword">while</span> (cin &gt;&gt; a &gt;&gt; b &gt;&gt; n) &#123;</span><br><span class="line"><span class="keyword">if</span> (a == 0 &amp;&amp; b == 0 &amp;&amp; n == 0) <span class="built_in">break</span>;//如果输入3个0，则退出循环，<span class="built_in">return</span> 0</span><br><span class="line"></span><br><span class="line">int i;//用i找到循环的长度（周期应该为 i-2）</span><br><span class="line">ans[1] = ans[2] = 1;</span><br><span class="line"><span class="keyword">for</span> (i = 3; i &lt;= 49; i++) &#123;</span><br><span class="line">ans[i] = (a * ans[i - 1] + b * ans[i - 2]) % 7;</span><br><span class="line"><span class="keyword">if</span> (ans[i] == 1 &amp;&amp; ans[i - 1] == 1)</span><br><span class="line"><span class="built_in">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">ans[0] = ans[i - 2];//ans[0]之前没初始化过，而且可能出现恰好整除周期的情况</span><br><span class="line">cout &lt;&lt; ans[n % (i - 2)] &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">return</span> 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里提醒一定注意ans[0]的初始化，由于代码末尾输出的时候%周期 时可能出现整除的情况，然而代码中的数组并没有初始化ans[0],可能会就此点出现wrong answer的结果（大意真的会失荆州哦）<br>另外，有小伙伴可能会问为啥for循环到49就截止了（大佬请忽略这里），因为f(n-1)、f(n-2)也是%7过后得到的数，换言之f(n-1)取值范围在0~6中的整数，f(n-2)亦然，所以f(n)的取值情况只可能是7*7=49种，也因此，f(n)必然呈现周期性，并且周期出现在这总的49种可能之内，于是在49的长度内给它寻找周期T=i-2.（详情可以参见<a href="https://blog.csdn.net/u011000290/article/details/47379977" target="_blank" rel="noopener">博客</a>）<br>再次感谢两篇博客源：<br><a href="https://blog.csdn.net/mengxiang000000/article/details/50221233" target="_blank" rel="noopener">mengxiang000000</a><br><a href="https://blog.csdn.net/u011000290/article/details/47379977" target="_blank" rel="noopener">CouchDB</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> hdoj </tag>
            
            <tag> 整除取余 </tag>
            
            <tag> 周期 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>欢迎来到Zoey的博客</title>
      <link href="/2019/07/28/hello-world/"/>
      <url>/2019/07/28/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to Zoey’s blog <a href="https://hexo.io/" target="_blank" rel="noopener">powered by hexo</a>! This is my first blog, thanks to visit. Check here <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info about hexo. If get any problems when using Hexo, we can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or ask hexo’s index on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="这是我的第一篇博客，welcome"><a href="#这是我的第一篇博客，welcome" class="headerlink" title="这是我的第一篇博客，welcome~~"></a>这是我的第一篇博客，welcome~~</h2><h2 id="以下是hexo默然创建的内容，为了方便自己好找，我就不删除啦"><a href="#以下是hexo默然创建的内容，为了方便自己好找，我就不删除啦" class="headerlink" title="以下是hexo默然创建的内容，为了方便自己好找，我就不删除啦~~"></a>以下是hexo默然创建的内容，为了方便自己好找，我就不删除啦~~</h2><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
